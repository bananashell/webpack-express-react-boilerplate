!function(e){var a={};function n(i){if(a[i])return a[i].exports;var o=a[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=a,n.d=function(e,a,i){n.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:i})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(a,"a",a),a},n.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},n.p="/",n(n.s=86)}([function(e,a){e.exports=require("path")},function(e,a,n){"undefined"!=typeof process&&"renderer"===process.type?e.exports=n(81):e.exports=n(80)},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(12).mime,o=n(65),t=n(27),s=n(23),r=n(61),c=n(58);function p(e){return r.parse(e,{allowPrototypes:!0})}a.etag=function(e,a){var n=Buffer.isBuffer(e)?e:new Buffer(e,a);return t(n,{weak:!1})},a.wetag=function(e,a){var n=Buffer.isBuffer(e)?e:new Buffer(e,a);return t(n,{weak:!0})},a.normalizeType=function(e){return~e.indexOf("/")?function(e,a){for(var n=e.split(/ *; */),i={value:n[0],quality:1,params:{},originalIndex:a},o=1;o<n.length;++o){var t=n[o].split(/ *= */);"q"===t[0]?i.quality=parseFloat(t[1]):i.params[t[0]]=t[1]}return i}(e):{value:i.lookup(e),params:{}}},a.normalizeTypes=function(e){for(var n=[],i=0;i<e.length;++i)n.push(a.normalizeType(e[i]));return n},a.compileETag=function(e){var n;if("function"==typeof e)return e;switch(e){case!0:n=a.wetag;break;case!1:break;case"strong":n=a.etag;break;case"weak":n=a.wetag;break;default:throw new TypeError("unknown value for etag function: "+e)}return n},a.compileQueryParser=function(e){var a;if("function"==typeof e)return e;switch(e){case!0:a=c.parse;break;case!1:break;case"extended":a=p;break;case"simple":a=c.parse;break;default:throw new TypeError("unknown value for query parser function: "+e)}return a},a.compileTrust=function(e){return"function"==typeof e?e:!0===e?function(){return!0}:"number"==typeof e?function(a,n){return n<e}:("string"==typeof e&&(e=e.split(/ *, */)),s.compile(e||[]))},a.setCharset=function(e,a){if(!e||!a)return e;var n=o.parse(e);return n.parameters.charset=a,o.format(n)}},function(e,a){e.exports=require("fs")},function(e,a){e.exports=require("http")},function(e,a,n){"use strict";
/*!
 * statuses
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(77);function o(e){if("number"==typeof e){if(!o[e])throw new Error("invalid status code: "+e);return e}if("string"!=typeof e)throw new TypeError("code must be a number or string");var a=parseInt(e,10);if(!isNaN(a)){if(!o[a])throw new Error("invalid status code: "+a);return a}if(!(a=o[e.toLowerCase()]))throw new Error('invalid status message: "'+e+'"');return a}e.exports=o,o.codes=function(e,a){var n=[];return Object.keys(a).forEach(function(i){var o=a[i],t=Number(i);e[t]=o,e[o]=t,e[o.toLowerCase()]=t,n.push(t)}),n}(o,i),o.redirect={300:!0,301:!0,302:!0,303:!0,305:!0,307:!0,308:!0},o.empty={204:!0,205:!0,304:!0},o.retry={502:!0,503:!0,504:!0}},function(e,a,n){"use strict";
/*!
 * parseurl
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(31),o=i.parse,t=i.Url;function s(e){var a=e.url;if(void 0!==a){var n=e._parsedUrl;return c(a,n)?n:((n=r(a))._raw=a,e._parsedUrl=n)}}function r(e){if("string"!=typeof e||47!==e.charCodeAt(0))return o(e);for(var a=e,n=null,i=null,s=1;s<e.length;s++)switch(e.charCodeAt(s)){case 63:null===i&&(a=e.substring(0,s),n=e.substring(s+1),i=e.substring(s));break;case 9:case 10:case 12:case 13:case 32:case 35:case 160:case 65279:return o(e)}var r=void 0!==t?new t:{};return r.path=e,r.href=e,r.pathname=a,r.query=n,r.search=i,r}function c(e,a){return"object"==typeof a&&null!==a&&(void 0===t||a instanceof t)&&a._raw===e}e.exports=s,e.exports.original=function(e){var a=e.originalUrl;if("string"!=typeof a)return s(e);var n=e._parsedOriginalUrl;if(c(a,n))return n;return(n=r(a))._raw=a,e._parsedOriginalUrl=n}},function(e,a,n){"use strict";
/*!
 * escape-html
 * Copyright(c) 2012-2013 TJ Holowaychuk
 * Copyright(c) 2015 Andreas Lubbe
 * Copyright(c) 2015 Tiancheng "Timothy" Gu
 * MIT Licensed
 */var i=/["'&<>]/;e.exports=function(e){var a,n=""+e,o=i.exec(n);if(!o)return n;var t="",s=0,r=0;for(s=o.index;s<n.length;s++){switch(n.charCodeAt(s)){case 34:a="&quot;";break;case 38:a="&amp;";break;case 39:a="&#39;";break;case 60:a="&lt;";break;case 62:a="&gt;";break;default:continue}r!==s&&(t+=n.substring(r,s)),r=s+1,t+=a}return r!==s?t+n.substring(r,s):t}},function(e,a,n){"use strict";
/*!
 * encodeurl
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){return String(e).replace(o,t).replace(i,encodeURI)};var i=/(?:[^\x21\x25\x26-\x3B\x3D\x3F-\x5B\x5D\x5F\x61-\x7A\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g,o=/(^|[^\uD800-\uDBFF])[\uDC00-\uDFFF]|[\uD800-\uDBFF]([^\uDC00-\uDFFF]|$)/g,t="$1ï¿½$2"},function(e,a){e.exports=function(e,a){if(e&&a)for(var n in a)e[n]=a[n];return e}},function(e,a,n){"use strict";function i(e){return function e(a,n){for(var i=0;i<a.length;i++){var o=a[i];Array.isArray(o)?e(o,n):n.push(o)}return n}(e,[])}function o(e,a){if("number"!=typeof a)throw new TypeError("Expected the depth to be a number");return function e(a,n,i){i--;for(var o=0;o<a.length;o++){var t=a[o];i>-1&&Array.isArray(t)?e(t,n,i):n.push(t)}return n}(e,[],a)}e.exports=function(e){if(!Array.isArray(e))throw new TypeError("Expected value to be an array");return i(e)},e.exports.from=i,e.exports.depth=function(e,a){if(!Array.isArray(e))throw new TypeError("Expected value to be an array");return o(e,a)},e.exports.fromDepth=o},function(e,a){e.exports=Object.setPrototypeOf||({__proto__:[]}instanceof Array?function(e,a){return e.__proto__=a,e}:function(e,a){for(var n in a)e.hasOwnProperty(n)||(e[n]=a[n]);return e})},function(e,a,n){"use strict";
/*!
 * send
 * Copyright(c) 2012 TJ Holowaychuk
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(73),o=n(1)("send"),t=n(30)("send"),s=n(68),r=n(8),c=n(7),p=n(27),l=n(16).EventEmitter,u=n(25),d=n(3),m=n(67),f=n(33),v=n(14),x=n(24),h=n(0),g=n(5),b=n(28),y=n(15),w=h.extname,k=h.join,j=h.normalize,E=h.resolve,q=h.sep,T=/^ *bytes=/,z=31536e6,C=/(?:^|[\\/])\.\.(?:[\\/]|$)/;e.exports=function(e,a,n){return new A(e,a,n)},e.exports.mime=m;var O=l.listenerCount||function(e,a){return e.listeners(a).length};function A(e,a,n){b.call(this);var i=n||{};if(this.options=i,this.path=a,this.req=e,this._acceptRanges=void 0===i.acceptRanges||Boolean(i.acceptRanges),this._cacheControl=void 0===i.cacheControl||Boolean(i.cacheControl),this._etag=void 0===i.etag||Boolean(i.etag),this._dotfiles=void 0!==i.dotfiles?i.dotfiles:"ignore","ignore"!==this._dotfiles&&"allow"!==this._dotfiles&&"deny"!==this._dotfiles)throw new TypeError('dotfiles option must be "allow", "deny", or "ignore"');this._hidden=Boolean(i.hidden),void 0!==i.hidden&&t("hidden: use dotfiles: '"+(this._hidden?"allow":"ignore")+"' instead"),void 0===i.dotfiles&&(this._dotfiles=void 0),this._extensions=void 0!==i.extensions?I(i.extensions,"extensions option"):[],this._index=void 0!==i.index?I(i.index,"index option"):["index.html"],this._lastModified=void 0===i.lastModified||Boolean(i.lastModified),this._maxage=i.maxAge||i.maxage,this._maxage="string"==typeof this._maxage?f(this._maxage):Number(this._maxage),this._maxage=isNaN(this._maxage)?0:Math.min(Math.max(0,this._maxage),z),this._root=i.root?E(i.root):null,!this._root&&i.from&&this.from(i.from)}function _(e,a,n){return e+" "+(n?n.start+"-"+n.end:"*")+"/"+a}function S(e,a){return'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>'+e+"</title>\n</head>\n<body>\n<pre>"+a+"</pre>\n</body>\n"}function P(e){return"function"!=typeof e.getHeaderNames?Object.keys(e._headers||{}):e.getHeaderNames()}function I(e,a){for(var n=[].concat(e||[]),i=0;i<n.length;i++)if("string"!=typeof n[i])throw new TypeError(a+" must be array of strings or false");return n}function L(e){var a=e&&Date.parse(e);return"number"==typeof a?a:NaN}y.inherits(A,b),A.prototype.etag=t.function(function(e){return this._etag=Boolean(e),o("etag %s",this._etag),this},"send.etag: pass etag as option"),A.prototype.hidden=t.function(function(e){return this._hidden=Boolean(e),this._dotfiles=void 0,o("hidden %s",this._hidden),this},"send.hidden: use dotfiles option"),A.prototype.index=t.function(function(e){var a=e?I(e,"paths argument"):[];return o("index %o",e),this._index=a,this},"send.index: pass index as option"),A.prototype.root=function(e){return this._root=E(String(e)),o("root %s",this._root),this},A.prototype.from=t.function(A.prototype.root,"send.from: pass root as option"),A.prototype.root=t.function(A.prototype.root,"send.root: pass root as option"),A.prototype.maxage=t.function(function(e){return this._maxage="string"==typeof e?f(e):Number(e),this._maxage=isNaN(this._maxage)?0:Math.min(Math.max(0,this._maxage),z),o("max-age %d",this._maxage),this},"send.maxage: pass maxAge as option"),A.prototype.error=function(e,a){if(0!==O(this,"error"))return this.emit("error",i(e,a,{expose:!1}));var n=this.res,o=g[e]||String(e),t=S("Error",c(o));!function(e){for(var a=P(e),n=0;n<a.length;n++)e.removeHeader(a[n])}(n),a&&a.headers&&function(e,a){for(var n=Object.keys(a),i=0;i<n.length;i++){var o=n[i];e.setHeader(o,a[o])}}(n,a.headers),n.statusCode=e,n.setHeader("Content-Type","text/html; charset=UTF-8"),n.setHeader("Content-Length",Buffer.byteLength(t)),n.setHeader("Content-Security-Policy","default-src 'self'"),n.setHeader("X-Content-Type-Options","nosniff"),n.end(t)},A.prototype.hasTrailingSlash=function(){return"/"===this.path[this.path.length-1]},A.prototype.isConditionalGET=function(){return this.req.headers["if-match"]||this.req.headers["if-unmodified-since"]||this.req.headers["if-none-match"]||this.req.headers["if-modified-since"]},A.prototype.isPreconditionFailure=function(){var e=this.req,a=this.res,n=e.headers["if-match"];if(n){var i=a.getHeader("ETag");return!i||"*"!==n&&function(e){for(var a=0,n=[],i=0,o=0,t=e.length;o<t;o++)switch(e.charCodeAt(o)){case 32:i===a&&(i=a=o+1);break;case 44:n.push(e.substring(i,a)),i=a=o+1;break;default:a=o+1}return n.push(e.substring(i,a)),n}(n).every(function(e){return e!==i&&e!=="W/"+i&&"W/"+e!==i})}var o=L(e.headers["if-unmodified-since"]);if(!isNaN(o)){var t=L(a.getHeader("Last-Modified"));return isNaN(t)||t>o}return!1},A.prototype.removeContentHeaderFields=function(){for(var e=this.res,a=P(e),n=0;n<a.length;n++){var i=a[n];"content-"===i.substr(0,8)&&"content-location"!==i&&e.removeHeader(i)}},A.prototype.notModified=function(){var e=this.res;o("not modified"),this.removeContentHeaderFields(),e.statusCode=304,e.end()},A.prototype.headersAlreadySent=function(){var e=new Error("Can't set headers after they are sent.");o("headers already sent"),this.error(500,e)},A.prototype.isCachable=function(){var e=this.res.statusCode;return e>=200&&e<300||304===e},A.prototype.onStatError=function(e){switch(e.code){case"ENAMETOOLONG":case"ENOENT":case"ENOTDIR":this.error(404,e);break;default:this.error(500,e)}},A.prototype.isFresh=function(){return u(this.req.headers,{etag:this.res.getHeader("ETag"),"last-modified":this.res.getHeader("Last-Modified")})},A.prototype.isRangeFresh=function(){var e=this.req.headers["if-range"];if(!e)return!0;if(-1!==e.indexOf('"')){var a=this.res.getHeader("ETag");return Boolean(a&&-1!==e.indexOf(a))}return L(this.res.getHeader("Last-Modified"))<=L(e)},A.prototype.redirect=function(e){var a=this.res;if(0===O(this,"directory"))if(this.hasTrailingSlash())this.error(403);else{var n=r(function(e){for(var a=0;a<e.length&&"/"===e[a];a++);return a>1?"/"+e.substr(a):e}(this.path+"/")),i=S("Redirecting",'Redirecting to <a href="'+c(n)+'">'+c(n)+"</a>");a.statusCode=301,a.setHeader("Content-Type","text/html; charset=UTF-8"),a.setHeader("Content-Length",Buffer.byteLength(i)),a.setHeader("Content-Security-Policy","default-src 'self'"),a.setHeader("X-Content-Type-Options","nosniff"),a.setHeader("Location",n),a.end(i)}else this.emit("directory",a,e)},A.prototype.pipe=function(e){var a=this._root;this.res=e;var n,i=function(e){try{return decodeURIComponent(e)}catch(e){return-1}}(this.path);if(-1===i)return this.error(400),e;if(~i.indexOf("\0"))return this.error(400),e;if(null!==a){if(C.test(j("."+q+i)))return o('malicious path "%s"',i),this.error(403),e;i=j(k(a,i)),a=j(a+q),n=i.substr(a.length).split(q)}else{if(C.test(i))return o('malicious path "%s"',i),this.error(403),e;n=j(i).split(q),i=E(i)}if(function(e){for(var a=0;a<e.length;a++)if("."===e[a][0])return!0;return!1}(n)){var t=this._dotfiles;switch(void 0===t&&(t="."===n[n.length-1][0]?this._hidden?"allow":"ignore":"allow"),o('%s dotfile "%s"',t,i),t){case"allow":break;case"deny":return this.error(403),e;case"ignore":default:return this.error(404),e}}return this._index.length&&this.hasTrailingSlash()?(this.sendIndex(i),e):(this.sendFile(i),e)},A.prototype.send=function(e,a){var n=a.size,i=this.options,t={},s=this.res,r=this.req,c=r.headers.range,p=i.start||0;if(function(e){return"boolean"!=typeof e.headersSent?Boolean(e._header):e.headersSent}(s))this.headersAlreadySent();else{if(o('pipe "%s"',e),this.setHeader(e,a),this.type(e),this.isConditionalGET()){if(this.isPreconditionFailure())return void this.error(412);if(this.isCachable()&&this.isFresh())return void this.notModified()}if(n=Math.max(0,n-p),void 0!==i.end){var l=i.end-p+1;n>l&&(n=l)}if(this._acceptRanges&&T.test(c)){if(c=x(n,c,{combine:!0}),this.isRangeFresh()||(o("range stale"),c=-2),-1===c)return o("range unsatisfiable"),s.setHeader("Content-Range",_("bytes",n)),this.error(416,{headers:{"Content-Range":s.getHeader("Content-Range")}});-2!==c&&1===c.length&&(o("range %j",c),s.statusCode=206,s.setHeader("Content-Range",_("bytes",n,c[0])),p+=c[0].start,n=c[0].end-c[0].start+1)}for(var u in i)t[u]=i[u];t.start=p,t.end=Math.max(p,p+n-1),s.setHeader("Content-Length",n),"HEAD"!==r.method?this.stream(e,t):s.end()}},A.prototype.sendFile=function(e){var a=0,n=this;o('stat "%s"',e),d.stat(e,function(i,t){return i&&"ENOENT"===i.code&&!w(e)&&e[e.length-1]!==q?function i(t){if(n._extensions.length<=a)return t?n.onStatError(t):n.error(404);var s=e+"."+n._extensions[a++];o('stat "%s"',s);d.stat(s,function(e,a){return e?i(e):a.isDirectory()?i():(n.emit("file",s,a),void n.send(s,a))})}(i):i?n.onStatError(i):t.isDirectory()?n.redirect(e):(n.emit("file",e,t),void n.send(e,t))})},A.prototype.sendIndex=function(e){var a=-1,n=this;!function i(t){if(++a>=n._index.length)return t?n.onStatError(t):n.error(404);var s=k(e,n._index[a]);o('stat "%s"',s),d.stat(s,function(e,a){return e?i(e):a.isDirectory()?i():(n.emit("file",s,a),void n.send(s,a))})}()},A.prototype.stream=function(e,a){var n=!1,i=this,o=this.res,t=d.createReadStream(e,a);this.emit("stream",t),t.pipe(o),v(o,function(){n=!0,s(t)}),t.on("error",function(e){n||(n=!0,s(t),i.onStatError(e))}),t.on("end",function(){i.emit("end")})},A.prototype.type=function(e){var a=this.res;if(!a.getHeader("Content-Type")){var n=m.lookup(e);if(n){var i=m.charsets.lookup(n);o("content-type %s",n),a.setHeader("Content-Type",n+(i?"; charset="+i:""))}else o("no content-type")}},A.prototype.setHeader=function(e,a){var n=this.res;if(this.emit("headers",n,e,a),this._acceptRanges&&!n.getHeader("Accept-Ranges")&&(o("accept ranges"),n.setHeader("Accept-Ranges","bytes")),this._cacheControl&&!n.getHeader("Cache-Control")){var i="public, max-age="+Math.floor(this._maxage/1e3);o("cache-control %s",i),n.setHeader("Cache-Control",i)}if(this._lastModified&&!n.getHeader("Last-Modified")){var t=a.mtime.toUTCString();o("modified %s",t),n.setHeader("Last-Modified",t)}if(this._etag&&!n.getHeader("ETag")){var s=p(a);o("etag %s",s),n.setHeader("ETag",s)}}},function(e,a,n){"use strict";
/*!
 * methods
 * Copyright(c) 2013-2014 TJ Holowaychuk
 * Copyright(c) 2015-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(4);e.exports=i.METHODS&&i.METHODS.map(function(e){return e.toLowerCase()})||["get","post","put","head","delete","options","trace","copy","lock","mkcol","move","purge","propfind","proppatch","unlock","report","mkactivity","checkout","merge","m-search","notify","subscribe","unsubscribe","patch","search","connect"]},function(e,a,n){"use strict";
/*!
 * on-finished
 * Copyright(c) 2013 Jonathan Ong
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a){if(!1!==t(e))return o(a,null,e),e;return function(e,a){var n=e.__onFinished;n&&n.queue||(n=e.__onFinished=function(e){function a(n){if(e.__onFinished===a&&(e.__onFinished=null),a.queue){var i=a.queue;a.queue=null;for(var o=0;o<i.length;o++)i[o](n,e)}}return a.queue=[],a}(e),function(e,a){var n,o,t=!1;function s(e){n.cancel(),o.cancel(),t=!0,a(e)}function r(a){e.removeListener("socket",r),t||n===o&&(o=i([[a,"error","close"]],s))}n=o=i([[e,"end","finish"]],s),e.socket?r(e.socket):(e.on("socket",r),void 0===e.socket&&function(e,a){var n=e.assignSocket;"function"==typeof n&&(e.assignSocket=function(e){n.call(this,e),a(e)})}(e,r))}(e,n)),n.queue.push(a)}(e,a),e},e.exports.isFinished=t;var i=n(78),o="function"==typeof setImmediate?setImmediate:function(e){process.nextTick(e.bind.apply(e,arguments))};function t(e){var a=e.socket;return"boolean"==typeof e.finished?Boolean(e.finished||a&&!a.writable):"boolean"==typeof e.complete?Boolean(e.upgrade||!a||!a.readable||e.complete&&!e.readable):void 0}},function(e,a){e.exports=require("util")},function(e,a){e.exports=require("events")},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=n(85)},function(e,a,n){"use strict";
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i,o,t,s=n(48),r=n(0).extname,c=/^\s*([^;\s]*)(?:;|\s|$)/,p=/^text\//i;function l(e){if(!e||"string"!=typeof e)return!1;var a=c.exec(e),n=a&&s[a[1].toLowerCase()];return n&&n.charset?n.charset:!(!a||!p.test(a[1]))&&"UTF-8"}a.charset=l,a.charsets={lookup:l},a.contentType=function(e){if(!e||"string"!=typeof e)return!1;var n=-1===e.indexOf("/")?a.lookup(e):e;if(!n)return!1;if(-1===n.indexOf("charset")){var i=a.charset(n);i&&(n+="; charset="+i.toLowerCase())}return n},a.extension=function(e){if(!e||"string"!=typeof e)return!1;var n=c.exec(e),i=n&&a.extensions[n[1].toLowerCase()];if(!i||!i.length)return!1;return i[0]},a.extensions=Object.create(null),a.lookup=function(e){if(!e||"string"!=typeof e)return!1;var n=r("x."+e).toLowerCase().substr(1);if(!n)return!1;return a.types[n]||!1},a.types=Object.create(null),i=a.extensions,o=a.types,t=["nginx","apache",void 0,"iana"],Object.keys(s).forEach(function(e){var a=s[e],n=a.extensions;if(n&&n.length){i[e]=n;for(var r=0;r<n.length;r++){var c=n[r];if(o[c]){var p=t.indexOf(s[o[c]].source),l=t.indexOf(a.source);if("application/octet-stream"!==o[c]&&(p>l||p===l&&"application/"===o[c].substr(0,12)))continue}o[c]=e}}})},function(e,a,n){"use strict";
/*!
 * router
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(57),o=n(1)("router:layer"),t=Object.prototype.hasOwnProperty;function s(e,a,n){if(!(this instanceof s))return new s(e,a,n);o("new %o",e);var t=a||{};this.handle=n,this.name=n.name||"<anonymous>",this.params=void 0,this.path=void 0,this.regexp=i(e,this.keys=[],t),this.regexp.fast_star="*"===e,this.regexp.fast_slash="/"===e&&!1===t.end}function r(e){if("string"!=typeof e||0===e.length)return e;try{return decodeURIComponent(e)}catch(a){throw a instanceof URIError&&(a.message="Failed to decode param '"+e+"'",a.status=400),a}}e.exports=s,s.prototype.handle_error=function(e,a,n,i){var o=this.handle;if(4!==o.length)return i(e);try{o(e,a,n,i)}catch(e){i(e)}},s.prototype.handle_request=function(e,a,n){var i=this.handle;if(i.length>3)return n();try{i(e,a,n)}catch(e){n(e)}},s.prototype.match=function(e){var a;if(null!=e){if(this.regexp.fast_slash)return this.params={},this.path="",!0;if(this.regexp.fast_star)return this.params={0:r(e)},this.path=e,!0;a=this.regexp.exec(e)}if(!a)return this.params=void 0,this.path=void 0,!1;this.params={},this.path=a[0];for(var n=this.keys,i=this.params,o=1;o<a.length;o++){var s=n[o-1].name,c=r(a[o]);void 0===c&&t.call(i,s)||(i[s]=c)}return!0}},function(e,a,n){"use strict";
/*!
 * router
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("router"),o=n(10),t=n(19),s=n(13),r=n(9),c=n(6),p=n(56),l=n(11),u=Array.prototype.slice,d="function"==typeof setImmediate?setImmediate:function(e){process.nextTick(e.bind.apply(e,arguments))};function m(e){if(!(this instanceof m))return new m(e);var a=e||{};function n(e,a,i){n.handle(e,a,i)}return l(n,this),n.caseSensitive=a.caseSensitive,n.mergeParams=a.mergeParams,n.params={},n.strict=a.strict,n.stack=[],n}function f(e,a){try{return e.match(a)}catch(e){return e}}e.exports=m,e.exports.Route=p,m.prototype=function(){},m.prototype.param=function(e,a){if(!e)throw new TypeError("argument name is required");if("string"!=typeof e)throw new TypeError("argument name must be a string");if(!a)throw new TypeError("argument fn is required");if("function"!=typeof a)throw new TypeError("argument fn must be a function");var n=this.params[e];return n||(n=this.params[e]=[]),n.push(a),this},m.prototype.handle=function(e,a,n){if(!n)throw new TypeError("argument callback is required");i("dispatching %s %s",e.method,e.url);var o,t,s,p=0,l=function(e){if("string"!=typeof e||0===e.length||"/"===e[0])return;var a=e.indexOf("?"),n=-1!==a?a:e.length,i=e.substr(0,n).indexOf("://");return-1!==i?e.substr(0,e.indexOf("/",3+i)):void 0}(e.url)||"",u="",m=this,v=!1,x={},h=this.stack,g=e.params,b=e.baseUrl||"",y=function(e,a){for(var n=new Array(arguments.length-2),i=new Array(arguments.length-2),o=0;o<n.length;o++)n[o]=arguments[o+2],i[o]=a[n[o]];return function(){for(var o=0;o<n.length;o++)a[n[o]]=i[o];return e.apply(this,arguments)}}(n,e,"baseUrl","next","params");function w(n){var t="route"===n?null:n;if(v&&(e.url=e.url.substr(1),v=!1),0!==u.length&&(e.baseUrl=b,e.url=l+u+e.url.substr(l.length),u=""),"router"!==t)if(p>=h.length)d(y,t);else{var s,k,j,E=function(e){try{return c(e).pathname}catch(e){return}}(e);if(null==E)return y(t);for(;!0!==k&&p<h.length;)if(k=f(s=h[p++],E),j=s.route,"boolean"!=typeof k&&(t=t||k),!0===k&&j)if(t)k=!1;else{var q=e.method,T=j._handles_method(q);!T&&"OPTIONS"===q&&o&&o.push.apply(o,j._methods()),T||"HEAD"===q||(k=!1)}if(!0!==k)return y(t);j&&(e.route=j),e.params=m.mergeParams?function(e,a){if("object"!=typeof a||!a)return e;var n=r({},a);if(!(0 in e&&0 in a))return r(n,e);var i=0,o=0;for(;i in e;)i++;for(;o in a;)o++;for(i--;i>=0;i--)e[i+o]=e[i],i<o&&delete e[i];return r(n,e)}(s.params,g):s.params;var z=s.path;m.process_params(s,x,e,a,function(n){return n?w(t||n):j?s.handle_request(e,a,w):void function(n,o,t,s){if(0!==t.length){var r=s[t.length];if(r&&"/"!==r)return void w(o);i("trim prefix (%s) from url %s",t,e.url),u=t,e.url=l+e.url.substr(l.length+u.length),l||"/"===e.url[0]||(e.url="/"+e.url,v=!0),e.baseUrl=b+("/"===u[u.length-1]?u.substring(0,u.length-1):u)}i("%s %s : %s",n.name,t,e.originalUrl),o?n.handle_error(o,e,a,w):n.handle_request(e,a,w)}(s,t,z,E)})}else d(y,null)}e.next=w,"OPTIONS"===e.method&&(t=y,s=function(e,a){return function(n,i){if(i||0===a.length)return n(i);!function(e,a,n){try{!function(e,a){for(var n=Object.create(null),i=0;i<a.length;i++)n[a[i]]=!0;var o=Object.keys(n).sort().join(", ");e.setHeader("Allow",o),e.setHeader("Content-Length",Buffer.byteLength(o)),e.setHeader("Content-Type","text/plain"),e.setHeader("X-Content-Type-Options","nosniff"),e.end(o)}(e,a)}catch(e){n(e)}}(e,a,n)}}(a,o=[]),y=function(){var e=new Array(arguments.length+1);e[0]=t;for(var a=0,n=arguments.length;a<n;a++)e[a+1]=arguments[a];s.apply(this,e)}),e.baseUrl=b,e.originalUrl=e.originalUrl||e.url,w()},m.prototype.process_params=function(e,a,n,i,o){var t=this.params,s=e.keys;if(!s||0===s.length)return o();var r,c,p,l,u,d=0,m=0;function f(e){return e?o(e):d>=s.length?o():(m=0,c=s[d++],r=c.name,p=n.params[r],l=t[r],u=a[r],void 0!==p&&l?u&&(u.match===p||u.error&&"route"!==u.error)?(n.params[r]=u.value,f(u.error)):(a[r]=u={error:null,match:p,value:p},void v()):f())}function v(e){var a=l[m++];if(u.value=n.params[c.name],e)return u.error=e,void f(e);if(!a)return f();try{a(n,i,v,p,c.name)}catch(e){v(e)}}f()},m.prototype.use=function(e){var a=0,n="/";if("function"!=typeof e){for(var s=e;Array.isArray(s)&&0!==s.length;)s=s[0];"function"!=typeof s&&(a=1,n=e)}var r=o(u.call(arguments,a));if(0===r.length)throw new TypeError("argument handler is required");for(var c=0;c<r.length;c++){var p=r[c];if("function"!=typeof p)throw new TypeError("argument handler must be a function");i("use %o %s",n,p.name||"<anonymous>");var l=new t(n,{sensitive:this.caseSensitive,strict:!1,end:!1},p);l.route=void 0,this.stack.push(l)}return this},m.prototype.route=function(e){var a=new p(e),n=new t(e,{sensitive:this.caseSensitive,strict:this.strict,end:!0},function(e,n,i){a.dispatch(e,n,i)});return n.route=a,this.stack.push(n),a},s.concat("all").forEach(function(e){m.prototype[e]=function(a){var n=this.route(a);return n[e].apply(n,u.call(arguments,1)),this}})},function(e,a,n){"use strict";var i=String.prototype.replace,o=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return i.call(e,o,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},function(e,a,n){"use strict";var i=Object.prototype.hasOwnProperty,o=function(){for(var e=[],a=0;a<256;++a)e.push("%"+((a<16?"0":"")+a.toString(16)).toUpperCase());return e}();a.arrayToObject=function(e,a){for(var n=a&&a.plainObjects?Object.create(null):{},i=0;i<e.length;++i)void 0!==e[i]&&(n[i]=e[i]);return n},a.merge=function(e,n,o){if(!n)return e;if("object"!=typeof n){if(Array.isArray(e))e.push(n);else{if("object"!=typeof e)return[e,n];(o.plainObjects||o.allowPrototypes||!i.call(Object.prototype,n))&&(e[n]=!0)}return e}if("object"!=typeof e)return[e].concat(n);var t=e;return Array.isArray(e)&&!Array.isArray(n)&&(t=a.arrayToObject(e,o)),Array.isArray(e)&&Array.isArray(n)?(n.forEach(function(n,t){i.call(e,t)?e[t]&&"object"==typeof e[t]?e[t]=a.merge(e[t],n,o):e.push(n):e[t]=n}),e):Object.keys(n).reduce(function(e,t){var s=n[t];return i.call(e,t)?e[t]=a.merge(e[t],s,o):e[t]=s,e},t)},a.assign=function(e,a){return Object.keys(a).reduce(function(e,n){return e[n]=a[n],e},e)},a.decode=function(e){try{return decodeURIComponent(e.replace(/\+/g," "))}catch(a){return e}},a.encode=function(e){if(0===e.length)return e;for(var a="string"==typeof e?e:String(e),n="",i=0;i<a.length;++i){var t=a.charCodeAt(i);45===t||46===t||95===t||126===t||t>=48&&t<=57||t>=65&&t<=90||t>=97&&t<=122?n+=a.charAt(i):t<128?n+=o[t]:t<2048?n+=o[192|t>>6]+o[128|63&t]:t<55296||t>=57344?n+=o[224|t>>12]+o[128|t>>6&63]+o[128|63&t]:(i+=1,t=65536+((1023&t)<<10|1023&a.charCodeAt(i)),n+=o[240|t>>18]+o[128|t>>12&63]+o[128|t>>6&63]+o[128|63&t])}return n},a.compact=function(e){for(var a=[{obj:{o:e},prop:"o"}],n=[],i=0;i<a.length;++i)for(var o=a[i],t=o.obj[o.prop],s=Object.keys(t),r=0;r<s.length;++r){var c=s[r],p=t[c];"object"==typeof p&&null!==p&&-1===n.indexOf(p)&&(a.push({obj:t,prop:c}),n.push(p))}return function(e){for(var a;e.length;){var n=e.pop();if(a=n.obj[n.prop],Array.isArray(a)){for(var i=[],o=0;o<a.length;++o)void 0!==a[o]&&i.push(a[o]);n.obj[n.prop]=i}}return a}(a)},a.isRegExp=function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},a.isBuffer=function(e){return null!==e&&void 0!==e&&!!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e))}},function(e,a,n){"use strict";
/*!
 * proxy-addr
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a){if(!e)throw new TypeError("req argument is required");if(!a)throw new TypeError("trust argument is required");var n=p(e,a);return n[n.length-1]},e.exports.all=p,e.exports.compile=l;var i=n(64),o=n(63),t=/^[0-9]+$/,s=o.isValid,r=o.parse,c={linklocal:["169.254.0.0/16","fe80::/10"],loopback:["127.0.0.1/8","::1/128"],uniquelocal:["10.0.0.0/8","172.16.0.0/12","192.168.0.0/16","fc00::/7"]};function p(e,a){var n=i(e);if(!a)return n;"function"!=typeof a&&(a=l(a));for(var o=0;o<n.length-1;o++)a(n[o],o)||(n.length=o+1);return n}function l(e){if(!e)throw new TypeError("argument is required");var a,n,i,o,t,p,l,m,f;if("string"==typeof e)a=[e];else{if(!Array.isArray(e))throw new TypeError("unsupported trust argument");a=e.slice()}for(var v=0;v<a.length;v++)e=a[v],c.hasOwnProperty(e)&&(e=c[e],a.splice.apply(a,[v,1].concat(e)),v+=e.length-1);return n=function(e){for(var a=new Array(e.length),n=0;n<e.length;n++)a[n]=u(e[n]);return a}(a),0===(i=n.length)?d:1===i?(t=n[0],p=t[0],l=p.kind(),m="ipv4"===l,f=t[1],function(e){if(!s(e))return!1;var a=r(e),n=a.kind();if(n!==l){if(m&&!a.isIPv4MappedAddress())return!1;a=m?a.toIPv4Address():a.toIPv4MappedAddress()}return a.match(p,f)}):(o=n,function(e){if(!s(e))return!1;for(var a,n=r(e),i=n.kind(),t=0;t<o.length;t++){var c=o[t],p=c[0],l=p.kind(),u=c[1],d=n;if(i!==l){if("ipv4"===l&&!n.isIPv4MappedAddress())continue;a||(a="ipv4"===l?n.toIPv4Address():n.toIPv4MappedAddress()),d=a}if(d.match(p,u))return!0}return!1})}function u(e){var a=e.lastIndexOf("/"),n=-1!==a?e.substring(0,a):e;if(!s(n))throw new TypeError("invalid IP address: "+n);var i=r(n);-1===a&&"ipv6"===i.kind()&&i.isIPv4MappedAddress()&&(i=i.toIPv4Address());var o="ipv6"===i.kind()?128:32,c=-1!==a?e.substring(a+1,e.length):null;if((c=null===c?o:t.test(c)?parseInt(c,10):"ipv4"===i.kind()&&s(c)?function(e){var a=r(e);return"ipv4"===a.kind()?a.prefixLengthFromSubnetMask():null}(c):null)<=0||c>o)throw new TypeError("invalid range on address: "+e);return[i,c]}function d(){return!1}},function(e,a,n){"use strict";
/*!
 * range-parser
 * Copyright(c) 2012-2014 TJ Holowaychuk
 * Copyright(c) 2015-2016 Douglas Christopher Wilson
 * MIT Licensed
 */function i(e,a){return{start:e.start,end:e.end,index:a}}function o(e){return{start:e.start,end:e.end}}function t(e,a){return e.index-a.index}function s(e,a){return e.start-a.start}e.exports=function(e,a,n){var r=a.indexOf("=");if(-1===r)return-2;var c=a.slice(r+1).split(","),p=[];p.type=a.slice(0,r);for(var l=0;l<c.length;l++){var u=c[l].split("-"),d=parseInt(u[0],10),m=parseInt(u[1],10);isNaN(d)?(d=e-m,m=e-1):isNaN(m)&&(m=e-1),m>e-1&&(m=e-1),isNaN(d)||isNaN(m)||d>m||d<0||p.push({start:d,end:m})}if(p.length<1)return-1;return n&&n.combine?function(e){for(var a=e.map(i).sort(s),n=0,r=1;r<a.length;r++){var c=a[r],p=a[n];c.start>p.end+1?a[++n]=c:c.end>p.end&&(p.end=c.end,p.index=Math.min(p.index,c.index))}a.length=n+1;var l=a.sort(t).map(o);return l.type=e.type,l}(p):p}},function(e,a,n){"use strict";
/*!
 * fresh
 * Copyright(c) 2012 TJ Holowaychuk
 * Copyright(c) 2016-2017 Douglas Christopher Wilson
 * MIT Licensed
 */var i=/(?:^|,)\s*?no-cache\s*?(?:,|$)/;function o(e){var a=e&&Date.parse(e);return"number"==typeof a?a:NaN}e.exports=function(e,a){var n=e["if-modified-since"],t=e["if-none-match"];if(!n&&!t)return!1;var s=e["cache-control"];if(s&&i.test(s))return!1;if(t&&"*"!==t){var r=a.etag;if(!r)return!1;for(var c=!0,p=function(e){for(var a=0,n=[],i=0,o=0,t=e.length;o<t;o++)switch(e.charCodeAt(o)){case 32:i===a&&(i=a=o+1);break;case 44:n.push(e.substring(i,a)),i=a=o+1;break;default:a=o+1}return n.push(e.substring(i,a)),n}(t),l=0;l<p.length;l++){var u=p[l];if(u===r||u==="W/"+r||"W/"+u===r){c=!1;break}}if(c)return!1}if(n){var d=a["last-modified"],m=!(d&&o(d)<=o(n));if(m)return!1}return!0}},function(e,a){e.exports=require("crypto")},function(e,a,n){"use strict";
/*!
 * etag
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a){if(null==e)throw new TypeError("argument entity is required");var n=function(e){if("function"==typeof o&&e instanceof o)return!0;return e&&"object"==typeof e&&"ctime"in e&&"[object Date]"===t.call(e.ctime)&&"mtime"in e&&"[object Date]"===t.call(e.mtime)&&"ino"in e&&"number"==typeof e.ino&&"size"in e&&"number"==typeof e.size}(e),s=a&&"boolean"==typeof a.weak?a.weak:n;if(!n&&"string"!=typeof e&&!Buffer.isBuffer(e))throw new TypeError("argument entity must be string, Buffer, or fs.Stats");var r=n?(c=e,p=c.mtime.getTime().toString(16),'"'+c.size.toString(16)+"-"+p+'"'):function(e){if(0===e.length)return'"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk"';var a=i.createHash("sha1").update(e,"utf8").digest("base64").substring(0,27);return'"'+("string"==typeof e?Buffer.byteLength(e,"utf8"):e.length).toString(16)+"-"+a+'"'}(e);var c,p;return s?"W/"+r:r};var i=n(26),o=n(3).Stats,t=Object.prototype.toString},function(e,a){e.exports=require("stream")},function(e,a,n){"use strict";
/*!
 * depd
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(16).EventEmitter;function o(e,a,n){Object.defineProperty(e,a,{configurable:!0,enumerable:!0,get:function(){var i=n();return Object.defineProperty(e,a,{configurable:!0,enumerable:!0,value:i}),i}})}function t(e){return e.toString()}o(e.exports,"callSiteToString",function(){var e=Error.stackTraceLimit,a={},i=Error.prepareStackTrace;Error.prepareStackTrace=function(e,a){return a},Error.stackTraceLimit=2,Error.captureStackTrace(a);var o=a.stack.slice();return Error.prepareStackTrace=i,Error.stackTraceLimit=e,o[0].toString?t:n(72)}),o(e.exports,"eventListenerCount",function(){return i.listenerCount||n(71)})},function(module,exports,__webpack_require__){
/*!
 * depd
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */
var callSiteToString=__webpack_require__(29).callSiteToString,eventListenerCount=__webpack_require__(29).eventListenerCount,relative=__webpack_require__(0).relative;module.exports=depd;var basePath=process.cwd();function containsNamespace(e,a){for(var n=e.split(/[ ,]+/),i=String(a).toLowerCase(),o=0;o<n.length;o++){var t=n[o];if(t&&("*"===t||t.toLowerCase()===i))return!0}return!1}function convertDataDescriptorToAccessor(e,a,n){var i=Object.getOwnPropertyDescriptor(e,a),o=i.value;return i.get=function(){return o},i.writable&&(i.set=function(e){return o=e}),delete i.value,delete i.writable,Object.defineProperty(e,a,i),i}function createArgumentsString(e){for(var a="",n=0;n<e;n++)a+=", arg"+n;return a.substr(2)}function createStackString(e){var a=this.name+": "+this.namespace;this.message&&(a+=" deprecated "+this.message);for(var n=0;n<e.length;n++)a+="\n    at "+callSiteToString(e[n]);return a}function depd(e){if(!e)throw new TypeError("argument namespace is required");var a=callSiteLocation(getStack()[1])[0];function n(e){log.call(n,e)}return n._file=a,n._ignored=isignored(e),n._namespace=e,n._traced=istraced(e),n._warned=Object.create(null),n.function=wrapfunction,n.property=wrapproperty,n}function isignored(e){return!!process.noDeprecation||containsNamespace(process.env.NO_DEPRECATION||"",e)}function istraced(e){return!!process.traceDeprecation||containsNamespace(process.env.TRACE_DEPRECATION||"",e)}function log(e,a){var n=0!==eventListenerCount(process,"deprecation");if(n||!this._ignored){var i,o,t,s,r=0,c=!1,p=getStack(),l=this._file;for(a?(s=a,(t=callSiteLocation(p[1])).name=s.name,l=t[0]):t=s=callSiteLocation(p[r=2]);r<p.length;r++)if((o=(i=callSiteLocation(p[r]))[0])===l)c=!0;else if(o===this._file)l=this._file;else if(c)break;var u=i?s.join(":")+"__"+i.join(":"):void 0;if(!(void 0!==u&&u in this._warned)){this._warned[u]=!0;var d=e;if(d||(d=t!==s&&t.name?defaultMessage(t):defaultMessage(s)),n){var m=DeprecationError(this._namespace,d,p.slice(r));process.emit("deprecation",m)}else{var f=(process.stderr.isTTY?formatColor:formatPlain).call(this,d,i,p.slice(r));process.stderr.write(f+"\n","utf8")}}}}function callSiteLocation(e){var a=e.getFileName()||"<anonymous>",n=e.getLineNumber(),i=e.getColumnNumber();e.isEval()&&(a=e.getEvalOrigin()+", "+a);var o=[a,n,i];return o.callSite=e,o.name=e.getFunctionName(),o}function defaultMessage(e){var a=e.callSite,n=e.name;n||(n="<anonymous@"+formatLocation(e)+">");var i=a.getThis(),o=i&&a.getTypeName();return"Object"===o&&(o=void 0),"Function"===o&&(o=i.name||o),o&&a.getMethodName()?o+"."+n:n}function formatPlain(e,a,n){var i=(new Date).toUTCString()+" "+this._namespace+" deprecated "+e;if(this._traced){for(var o=0;o<n.length;o++)i+="\n    at "+callSiteToString(n[o]);return i}return a&&(i+=" at "+formatLocation(a)),i}function formatColor(e,a,n){var i="[36;1m"+this._namespace+"[22;39m [33;1mdeprecated[22;39m [0m"+e+"[39m";if(this._traced){for(var o=0;o<n.length;o++)i+="\n    [36mat "+callSiteToString(n[o])+"[39m";return i}return a&&(i+=" [36m"+formatLocation(a)+"[39m"),i}function formatLocation(e){return relative(basePath,e[0])+":"+e[1]+":"+e[2]}function getStack(){var e=Error.stackTraceLimit,a={},n=Error.prepareStackTrace;Error.prepareStackTrace=prepareObjectStackTrace,Error.stackTraceLimit=Math.max(10,e),Error.captureStackTrace(a);var i=a.stack.slice(1);return Error.prepareStackTrace=n,Error.stackTraceLimit=e,i}function prepareObjectStackTrace(e,a){return a}function wrapfunction(fn,message){if("function"!=typeof fn)throw new TypeError("argument fn must be a function");var args=createArgumentsString(fn.length),deprecate=this,stack=getStack(),site=callSiteLocation(stack[1]);site.name=fn.name;var deprecatedfn=eval("(function ("+args+') {\n"use strict"\nlog.call(deprecate, message, site)\nreturn fn.apply(this, arguments)\n})');return deprecatedfn}function wrapproperty(e,a,n){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new TypeError("argument obj must be object");var i=Object.getOwnPropertyDescriptor(e,a);if(!i)throw new TypeError("must call property on owner object");if(!i.configurable)throw new TypeError("property must be configurable");var o=this,t=callSiteLocation(getStack()[1]);t.name=a,"value"in i&&(i=convertDataDescriptorToAccessor(e,a,n));var s=i.get,r=i.set;"function"==typeof s&&(i.get=function(){return log.call(o,n,t),s.apply(this,arguments)}),"function"==typeof r&&(i.set=function(){return log.call(o,n,t),r.apply(this,arguments)}),Object.defineProperty(e,a,i)}function DeprecationError(e,a,n){var i,o=new Error;return Object.defineProperty(o,"constructor",{value:DeprecationError}),Object.defineProperty(o,"message",{configurable:!0,enumerable:!1,value:a,writable:!0}),Object.defineProperty(o,"name",{enumerable:!1,configurable:!0,value:"DeprecationError",writable:!0}),Object.defineProperty(o,"namespace",{configurable:!0,enumerable:!1,value:e,writable:!0}),Object.defineProperty(o,"stack",{configurable:!0,enumerable:!1,get:function(){return void 0!==i?i:i=createStackString.call(this,n)},set:function(e){i=e}}),o}},function(e,a){e.exports=require("url")},function(e,a){e.exports=require("net")},function(e,a){var n=1e3,i=60*n,o=60*i,t=24*o,s=365.25*t;function r(e,a,n){if(!(e<a))return e<1.5*a?Math.floor(e/a)+" "+n:Math.ceil(e/a)+" "+n+"s"}e.exports=function(e,a){a=a||{};var c,p=typeof e;if("string"===p&&e.length>0)return function(e){if((e=String(e)).length>100)return;var a=/^((?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(e);if(!a)return;var r=parseFloat(a[1]);switch((a[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return r*s;case"days":case"day":case"d":return r*t;case"hours":case"hour":case"hrs":case"hr":case"h":return r*o;case"minutes":case"minute":case"mins":case"min":case"m":return r*i;case"seconds":case"second":case"secs":case"sec":case"s":return r*n;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}(e);if("number"===p&&!1===isNaN(e))return a.long?r(c=e,t,"day")||r(c,o,"hour")||r(c,i,"minute")||r(c,n,"second")||c+" ms":function(e){if(e>=t)return Math.round(e/t)+"d";if(e>=o)return Math.round(e/o)+"h";if(e>=i)return Math.round(e/i)+"m";if(e>=n)return Math.round(e/n)+"s";return e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},function(e,a,n){var i;function o(e){function n(){if(n.enabled){var e=n,o=+new Date,t=o-(i||o);e.diff=t,e.prev=i,e.curr=o,i=o;for(var s=new Array(arguments.length),r=0;r<s.length;r++)s[r]=arguments[r];s[0]=a.coerce(s[0]),"string"!=typeof s[0]&&s.unshift("%O");var c=0;s[0]=s[0].replace(/%([a-zA-Z%])/g,function(n,i){if("%%"===n)return n;c++;var o=a.formatters[i];if("function"==typeof o){var t=s[c];n=o.call(e,t),s.splice(c,1),c--}return n}),a.formatArgs.call(e,s),(n.log||a.log||console.log.bind(console)).apply(e,s)}}return n.namespace=e,n.enabled=a.enabled(e),n.useColors=a.useColors(),n.color=function(e){var n,i=0;for(n in e)i=(i<<5)-i+e.charCodeAt(n),i|=0;return a.colors[Math.abs(i)%a.colors.length]}(e),"function"==typeof a.init&&a.init(n),n}(a=e.exports=o.debug=o.default=o).coerce=function(e){return e instanceof Error?e.stack||e.message:e},a.disable=function(){a.enable("")},a.enable=function(e){a.save(e),a.names=[],a.skips=[];for(var n=("string"==typeof e?e:"").split(/[\s,]+/),i=n.length,o=0;o<i;o++)n[o]&&("-"===(e=n[o].replace(/\*/g,".*?"))[0]?a.skips.push(new RegExp("^"+e.substr(1)+"$")):a.names.push(new RegExp("^"+e+"$")))},a.enabled=function(e){var n,i;for(n=0,i=a.skips.length;n<i;n++)if(a.skips[n].test(e))return!1;for(n=0,i=a.names.length;n<i;n++)if(a.names[n].test(e))return!0;return!1},a.humanize=n(33),a.names=[],a.skips=[],a.formatters={}},function(e,a){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},function(e,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var i=(0,n(17).Router)();i.get("/",function(e,a){return a.send("root products")}),i.get("/test",function(e,a){return a.send("test products")});var o=i;a.default=o},function(e,a,n){"use strict";var i=n(35);Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var o=n(17),t=i(n(36)),s=(0,o.Router)();s.use("/products",t.default);var r=s;a.default=r},function(e,a,n){"use strict";
/*!
 * serve-static
 * Copyright(c) 2010 Sencha Inc.
 * Copyright(c) 2011 TJ Holowaychuk
 * Copyright(c) 2014-2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(8),o=n(7),t=n(6),s=n(0).resolve,r=n(12),c=n(31);e.exports=function(e,a){if(!e)throw new TypeError("root path required");if("string"!=typeof e)throw new TypeError("root path must be a string");var n=Object.create(a||null),p=!1!==n.fallthrough,l=!1!==n.redirect,u=n.setHeaders;if(u&&"function"!=typeof u)throw new TypeError("option setHeaders must be function");n.maxage=n.maxage||n.maxAge||0,n.root=s(e);var d=l?function(e){if(this.hasTrailingSlash())this.error(404);else{var a=t.original(this.req);a.path=null,a.pathname=function(e){for(var a=0;a<e.length&&47===e.charCodeAt(a);a++);return a>1?"/"+e.substr(a):e}(a.pathname+"/");var n,s,r=i(c.format(a)),p=(n="Redirecting",s='Redirecting to <a href="'+o(r)+'">'+o(r)+"</a>",'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>'+n+"</title>\n</head>\n<body>\n<pre>"+s+"</pre>\n</body>\n");e.statusCode=301,e.setHeader("Content-Type","text/html; charset=UTF-8"),e.setHeader("Content-Length",Buffer.byteLength(p)),e.setHeader("Content-Security-Policy","default-src 'self'"),e.setHeader("X-Content-Type-Options","nosniff"),e.setHeader("Location",r),e.end(p)}}:function(){this.error(404)};return function(e,a,i){if("GET"!==e.method&&"HEAD"!==e.method)return p?i():(a.statusCode=405,a.setHeader("Allow","GET, HEAD"),a.setHeader("Content-Length","0"),void a.end());var o=!p,s=t.original(e),c=t(e).pathname;"/"===c&&"/"!==s.pathname.substr(-1)&&(c="");var l=r(e,c,n);l.on("directory",d),u&&l.on("headers",u),p&&l.on("file",function(){o=!0}),l.on("error",function(e){!o&&e.statusCode<500?i():i(e)}),l.pipe(a)}},e.exports.mime=r.mime},function(e,a,n){"use strict";
/*!
 * vary
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a){if(!e||!e.getHeader||!e.setHeader)throw new TypeError("res argument is required");var n=e.getHeader("Vary")||"",i=Array.isArray(n)?n.join(", "):String(n);(n=o(i,a))&&e.setHeader("Vary",n)},e.exports.append=o;var i=/^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;function o(e,a){if("string"!=typeof e)throw new TypeError("header argument is required");if(!a)throw new TypeError("field argument is required");for(var n=Array.isArray(a)?a:t(String(a)),o=0;o<n.length;o++)if(!i.test(n[o]))throw new TypeError("field argument contains an invalid header name");if("*"===e)return e;var s=e,r=t(e.toLowerCase());if(-1!==n.indexOf("*")||-1!==r.indexOf("*"))return"*";for(var c=0;c<n.length;c++){var p=n[c].toLowerCase();-1===r.indexOf(p)&&(r.push(p),s=s?s+", "+n[c]:n[c])}return s}function t(e){for(var a=0,n=[],i=0,o=0,t=e.length;o<t;o++)switch(e.charCodeAt(o)){case 32:i===a&&(i=a=o+1);break;case 44:n.push(e.substring(i,a)),i=a=o+1;break;default:a=o+1}return n.push(e.substring(i,a)),n}},function(e,a,n){"use strict";
/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */a.parse=function(e,a){if("string"!=typeof e)throw new TypeError("argument str must be a string");for(var n={},o=a||{},s=e.split(t),c=o.decode||i,p=0;p<s.length;p++){var l=s[p],u=l.indexOf("=");if(!(u<0)){var d=l.substr(0,u).trim(),m=l.substr(++u,l.length).trim();'"'==m[0]&&(m=m.slice(1,-1)),void 0==n[d]&&(n[d]=r(m,c))}}return n},a.serialize=function(e,a,n){var i=n||{},t=i.encode||o;if("function"!=typeof t)throw new TypeError("option encode is invalid");if(!s.test(e))throw new TypeError("argument name is invalid");var r=t(a);if(r&&!s.test(r))throw new TypeError("argument val is invalid");var c=e+"="+r;if(null!=i.maxAge){var p=i.maxAge-0;if(isNaN(p))throw new Error("maxAge should be a Number");c+="; Max-Age="+Math.floor(p)}if(i.domain){if(!s.test(i.domain))throw new TypeError("option domain is invalid");c+="; Domain="+i.domain}if(i.path){if(!s.test(i.path))throw new TypeError("option path is invalid");c+="; Path="+i.path}if(i.expires){if("function"!=typeof i.expires.toUTCString)throw new TypeError("option expires is invalid");c+="; Expires="+i.expires.toUTCString()}i.httpOnly&&(c+="; HttpOnly");i.secure&&(c+="; Secure");if(i.sameSite){var l="string"==typeof i.sameSite?i.sameSite.toLowerCase():i.sameSite;switch(l){case!0:c+="; SameSite=Strict";break;case"lax":c+="; SameSite=Lax";break;case"strict":c+="; SameSite=Strict";break;default:throw new TypeError("option sameSite is invalid")}}return c};var i=decodeURIComponent,o=encodeURIComponent,t=/; */,s=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;function r(e,a){try{return a(e)}catch(a){return e}}},function(e,a,n){var i=n(26);function o(e){return i.createHash("sha1").update(e).digest("hex")}a.sign=function(e,a){if("string"!=typeof e)throw new TypeError("Cookie value must be provided as a string.");if("string"!=typeof a)throw new TypeError("Secret string must be provided.");return e+"."+i.createHmac("sha256",a).update(e).digest("base64").replace(/\=+$/,"")},a.unsign=function(e,n){if("string"!=typeof e)throw new TypeError("Signed cookie string must be provided.");if("string"!=typeof n)throw new TypeError("Secret string must be provided.");var i=e.slice(0,e.lastIndexOf("."));return o(a.sign(i,n))==o(e)&&i}},function(e,a,n){"use strict";function i(e){return"/"===e.charAt(0)}function o(e){var a=/^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/.exec(e),n=a[1]||"",i=Boolean(n&&":"!==n.charAt(1));return Boolean(a[2]||i)}e.exports="win32"===process.platform?o:i,e.exports.posix=i,e.exports.win32=o},function(e,a,n){"use strict";
/*!
 * content-disposition
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a){var n=a||{},o=n.type||"attachment",s=function(e,a){if(void 0===e)return;var n={};if("string"!=typeof e)throw new TypeError("filename must be a string");void 0===a&&(a=!0);if("string"!=typeof a&&"boolean"!=typeof a)throw new TypeError("fallback must be a string or boolean");if("string"==typeof a&&r.test(a))throw new TypeError("fallback must be ISO-8859-1 string");var o=i(e),s=u.test(o),c="string"!=typeof a?a&&x(o):i(a),p="string"==typeof c&&c!==o;(p||!s||t.test(o))&&(n["filename*"]=o);(s||p)&&(n.filename=p?c:o);return n}(e,n.fallback);return function(e){var a=e.parameters,n=e.type;if(!n||"string"!=typeof n||!d.test(n))throw new TypeError("invalid type");var i=String(n).toLowerCase();if(a&&"object"==typeof a)for(var o,t=Object.keys(a).sort(),s=0;s<t.length;s++){var r="*"===(o=t[s]).substr(-1)?y(a[o]):b(a[o]);i+="; "+o+"="+r}return i}(new w(o,s))},e.exports.parse=function(e){if(!e||"string"!=typeof e)throw new TypeError("argument string is required");var a=f.exec(e);if(!a)throw new TypeError("invalid type format");var n,i,o=a[0].length,t=a[1].toLowerCase(),s=[],r={};o=l.lastIndex=";"===a[0].substr(-1)?o-1:o;for(;a=l.exec(e);){if(a.index!==o)throw new TypeError("invalid parameter format");if(o+=a[0].length,n=a[1].toLowerCase(),i=a[2],-1!==s.indexOf(n))throw new TypeError("invalid duplicate parameter");s.push(n),n.indexOf("*")+1!==n.length?"string"!=typeof r[n]&&('"'===i[0]&&(i=i.substr(1,i.length-2).replace(c,"$1")),r[n]=i):(n=n.slice(0,-1),i=v(i),r[n]=i)}if(-1!==o&&o!==e.length)throw new TypeError("invalid parameter format");return new w(t,r)};var i=n(0).basename,o=/[\x00-\x20"'()*,/:;<=>?@[\\\]{}\x7f]/g,t=/%[0-9A-Fa-f]{2}/,s=/%([0-9A-Fa-f]{2})/g,r=/[^\x20-\x7e\xa0-\xff]/g,c=/\\([\u0000-\u007f])/g,p=/([\\"])/g,l=/;[\x09\x20]*([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*=[\x09\x20]*("(?:[\x20!\x23-\x5b\x5d-\x7e\x80-\xff]|\\[\x20-\x7e])*"|[!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*/g,u=/^[\x20-\x7e\x80-\xff]+$/,d=/^[!#$%&'*+.0-9A-Z^_`a-z|~-]+$/,m=/^([A-Za-z0-9!#$%&+\-^_`{}~]+)'(?:[A-Za-z]{2,3}(?:-[A-Za-z]{3}){0,3}|[A-Za-z]{4,8}|)'((?:%[0-9A-Fa-f]{2}|[A-Za-z0-9!#$&+.^_`|~-])+)$/,f=/^([!#$%&'*+.0-9A-Z^_`a-z|~-]+)[\x09\x20]*(?:$|;)/;function v(e){var a=m.exec(e);if(!a)throw new TypeError("invalid extended field value");var n,i=a[1].toLowerCase(),o=a[2].replace(s,h);switch(i){case"iso-8859-1":n=x(o);break;case"utf-8":n=new Buffer(o,"binary").toString("utf8");break;default:throw new TypeError("unsupported charset in extended field")}return n}function x(e){return String(e).replace(r,"?")}function h(e,a){return String.fromCharCode(parseInt(a,16))}function g(e){var a=String(e).charCodeAt(0).toString(16).toUpperCase();return 1===a.length?"%0"+a:"%"+a}function b(e){return'"'+String(e).replace(p,"\\$1")+'"'}function y(e){var a=String(e);return"UTF-8''"+encodeURIComponent(a).replace(o,g)}function w(e,a){this.type=e,this.parameters=a}},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(43),o=n(8),t=n(7),s=n(4),r=n(14),c=n(0),p=n(42),l=n(5),u=n(9),d=n(41).sign,m=n(2).normalizeType,f=n(2).normalizeTypes,v=n(2).setCharset,x=n(40),h=n(12),g=c.extname,b=h.mime,y=c.resolve,w=n(39),k=Object.create(s.ServerResponse.prototype);e.exports=k;var j=/;\s*charset\s*=/;function E(e,a,n){return a||n?JSON.stringify(e,a,n):JSON.stringify(e)}k.status=function(e){return this.statusCode=e,this},k.links=function(e){var a=this.get("Link")||"";return a&&(a+=", "),this.set("Link",a+Object.keys(e).map(function(a){return"<"+e[a]+'>; rel="'+a+'"'}).join(", "))},k.send=function(e){var a,n,i,o,t=e,s=this.req,r=this.app;switch(typeof t){case"string":this.get("Content-Type")||this.type("html");break;case"boolean":case"number":case"object":if(null===t)t="";else{if(!Buffer.isBuffer(t))return this.json(t);this.get("Content-Type")||this.type("bin")}}"string"==typeof t&&(a="utf8","string"==typeof(i=this.get("Content-Type"))&&this.set("Content-Type",v(i,"utf-8"))),void 0!==t&&(Buffer.isBuffer(t)||(t=new Buffer(t,a),a=void 0),n=t.length,this.set("Content-Length",n));var c=void 0!==n&&r.get("etag fn");return"function"!=typeof c||this.get("ETag")||(o=c(t,a))&&this.set("ETag",o),s.fresh&&(this.statusCode=304),204!==this.statusCode&&304!==this.statusCode||(this.removeHeader("Content-Type"),this.removeHeader("Content-Length"),this.removeHeader("Transfer-Encoding"),t=""),"HEAD"===s.method?this.end():this.end(t,a),this},k.json=function(e){var a=this.app,n=E(e,a.get("json replacer"),a.get("json spaces"));return this.get("Content-Type")||this.set("Content-Type","application/json"),this.send(n)},k.jsonp=function(e){var a=this.app,n=E(e,a.get("json replacer"),a.get("json spaces")),i=this.req.query[a.get("jsonp callback name")];return this.get("Content-Type")||(this.set("X-Content-Type-Options","nosniff"),this.set("Content-Type","application/json")),Array.isArray(i)&&(i=i[0]),"string"==typeof i&&0!==i.length&&(this.charset="utf-8",this.set("X-Content-Type-Options","nosniff"),this.set("Content-Type","text/javascript"),n="/**/ typeof "+(i=i.replace(/[^\[\]\w$.]/g,""))+" === 'function' && "+i+"("+(n=n.replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029"))+");"),this.send(n)},k.sendStatus=function(e){var a=l[e]||String(e);return this.statusCode=e,this.type("txt"),this.send(a)},k.sendFile=function(e,a,n){var i=n,o=this.req,t=o.next,s=a||{};if(!e)throw new TypeError("path argument is required to res.sendFile");if("function"==typeof a&&(i=a,s={}),!s.root&&!p(e))throw new TypeError("path must be absolute or specify root to res.sendFile");var c=encodeURI(e);!function(e,a,n,i){var o,t=!1;function s(){if(!t){t=!0;var e=new Error("Request aborted");e.code="ECONNABORTED",i(e)}}function c(e){t||(t=!0,i(e))}a.on("directory",function(){if(!t){t=!0;var e=new Error("EISDIR, read");e.code="EISDIR",i(e)}}),a.on("end",function(){t||(t=!0,i())}),a.on("error",c),a.on("file",function(){o=!1}),a.on("stream",function(){o=!0}),r(e,function(e){return e&&"ECONNRESET"===e.code?s():e?c(e):void(t||setImmediate(function(){!1===o||t?t||(t=!0,i()):s()}))}),n.headers&&a.on("headers",function(e){for(var a=n.headers,i=Object.keys(a),o=0;o<i.length;o++){var t=i[o];e.setHeader(t,a[t])}});a.pipe(e)}(this,h(o,c,s),s,function(e){return i?i(e):e&&"EISDIR"===e.code?t():void(e&&"ECONNABORTED"!==e.code&&"write"!==e.syscall&&t(e))})},k.download=function(e,a,n){var o=n,t=a;"function"==typeof a&&(o=a,t=null);var s={"Content-Disposition":i(t||e)},r=y(e);return this.sendFile(r,{headers:s},o)},k.contentType=k.type=function(e){var a=-1===e.indexOf("/")?b.lookup(e):e;return this.set("Content-Type",a)},k.format=function(e){var a=this.req,n=a.next,i=e.default;i&&delete e.default;var o=Object.keys(e),t=o.length>0&&a.accepts(o);if(this.vary("Accept"),t)this.set("Content-Type",m(t).value),e[t](a,this,n);else if(i)i();else{var s=new Error("Not Acceptable");s.status=s.statusCode=406,s.types=f(o).map(function(e){return e.value}),n(s)}return this},k.attachment=function(e){return e&&this.type(g(e)),this.set("Content-Disposition",i(e)),this},k.append=function(e,a){var n=this.get(e),i=a;return n&&(i=Array.isArray(n)?n.concat(a):Array.isArray(a)?[n].concat(a):[n,a]),this.set(e,i)},k.set=k.header=function(e,a){if(2===arguments.length){var n=Array.isArray(a)?a.map(String):String(a);if("content-type"===e.toLowerCase()){if(Array.isArray(n))throw new TypeError("Content-Type cannot be set to an Array");if(!j.test(n)){var i=b.charsets.lookup(n.split(";")[0]);i&&(n+="; charset="+i.toLowerCase())}}this.setHeader(e,n)}else for(var o in e)this.set(o,e[o]);return this},k.get=function(e){return this.getHeader(e)},k.clearCookie=function(e,a){var n=u({expires:new Date(1),path:"/"},a);return this.cookie(e,"",n)},k.cookie=function(e,a,n){var i=u({},n),o=this.req.secret,t=i.signed;if(t&&!o)throw new Error('cookieParser("secret") required for signed cookies');var s="object"==typeof a?"j:"+JSON.stringify(a):String(a);return t&&(s="s:"+d(s,o)),"maxAge"in i&&(i.expires=new Date(Date.now()+i.maxAge),i.maxAge/=1e3),null==i.path&&(i.path="/"),this.append("Set-Cookie",x.serialize(e,String(s),i)),this},k.location=function(e){var a=e;return"back"===e&&(a=this.req.get("Referrer")||"/"),this.set("Location",o(a))},k.redirect=function(e){var a,n=e,i=302;2===arguments.length&&(i=arguments[0],n=arguments[1]),n=this.location(n).get("Location"),this.format({text:function(){a=l[i]+". Redirecting to "+n},html:function(){var e=t(n);a="<p>"+l[i]+'. Redirecting to <a href="'+e+'">'+e+"</a></p>"},default:function(){a=""}}),this.statusCode=i,this.set("Content-Length",Buffer.byteLength(a)),"HEAD"===this.req.method?this.end():this.end(a)},k.vary=function(e){return w(this,e),this},k.render=function(e,a,n){var i=this.req.app,o=n,t=a||{},s=this.req,r=this;"function"==typeof a&&(o=a,t={}),t._locals=r.locals,o=o||function(e,a){if(e)return s.next(e);r.send(a)},i.render(e,t,o)}},function(e,a){
/*!
 * media-typer
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */
var n=/; *([!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) *= *("(?:[ !\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u0020-\u007e])*"|[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+) */g,i=/^[\u0020-\u007e\u0080-\u00ff]+$/,o=/^[!#$%&'\*\+\-\.0-9A-Z\^_`a-z\|~]+$/,t=/\\([\u0000-\u007f])/g,s=/([\\"])/g,r=/^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/,c=/^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/,p=/^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;function l(e){var a=String(e);if(o.test(a))return a;if(a.length>0&&!i.test(a))throw new TypeError("invalid parameter value");return'"'+a.replace(s,"\\$1")+'"'}a.format=function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var a=e.parameters,n=e.subtype,i=e.suffix,t=e.type;if(!t||!c.test(t))throw new TypeError("invalid type");if(!n||!r.test(n))throw new TypeError("invalid subtype");var s=t+"/"+n;if(i){if(!c.test(i))throw new TypeError("invalid suffix");s+="+"+i}if(a&&"object"==typeof a)for(var p,u=Object.keys(a).sort(),d=0;d<u.length;d++){if(p=u[d],!o.test(p))throw new TypeError("invalid parameter name");s+="; "+p+"="+l(a[p])}return s},a.parse=function(e){if(!e)throw new TypeError("argument string is required");"object"==typeof e&&(e=function(e){if("function"==typeof e.getHeader)return e.getHeader("content-type");if("object"==typeof e.headers)return e.headers&&e.headers["content-type"]}(e));if("string"!=typeof e)throw new TypeError("argument string is required to be a string");var a,i,o,s=e.indexOf(";"),r=function(e){var a=p.exec(e.toLowerCase());if(!a)throw new TypeError("invalid media type");var n,i=a[1],o=a[2],t=o.lastIndexOf("+");-1!==t&&(n=o.substr(t+1),o=o.substr(0,t));return{type:i,subtype:o,suffix:n}}(-1!==s?e.substr(0,s):e),c={};n.lastIndex=s;for(;i=n.exec(e);){if(i.index!==s)throw new TypeError("invalid parameter format");s+=i[0].length,a=i[1].toLowerCase(),'"'===(o=i[2])[0]&&(o=o.substr(1,o.length-2).replace(t,"$1")),c[a]=o}if(-1!==s&&s!==e.length)throw new TypeError("invalid parameter format");return r.parameters=c,r}},function(e,a,n){"use strict";
/*!
 * type-is
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(45),o=n(18);function t(e,a){var n,o,t=a,s=function(e){try{return function(e){var a=i.parse(e);return a.parameters=void 0,i.format(a)}(e)}catch(e){return null}}(e);if(!s)return!1;if(t&&!Array.isArray(t))for(t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];if(!t||!t.length)return s;for(n=0;n<t.length;n++)if(c(r(o=t[n]),s))return"+"===o[0]||-1!==o.indexOf("*")?s:o;return!1}function s(e){return void 0!==e.headers["transfer-encoding"]||!isNaN(e.headers["content-length"])}function r(e){if("string"!=typeof e)return!1;switch(e){case"urlencoded":return"application/x-www-form-urlencoded";case"multipart":return"multipart/*"}return"+"===e[0]?"*/*"+e:-1===e.indexOf("/")?o.lookup(e):e}function c(e,a){if(!1===e)return!1;var n=a.split("/"),i=e.split("/");return 2===n.length&&2===i.length&&(("*"===i[0]||i[0]===n[0])&&("*+"===i[1].substr(0,2)?i[1].length<=n[1].length+1&&i[1].substr(1)===n[1].substr(1-i[1].length):"*"===i[1]||i[1]===n[1]))}e.exports=function(e,a){var n=a;if(!s(e))return null;if(arguments.length>2){n=new Array(arguments.length-1);for(var i=0;i<n.length;i++)n[i]=arguments[i+1]}return t(e.headers["content-type"],n)},e.exports.is=t,e.exports.hasBody=s,e.exports.normalize=r,e.exports.match=c},function(e){e.exports={"application/1d-interleaved-parityfec":{source:"iana"},"application/3gpdash-qoe-report+xml":{source:"iana"},"application/3gpp-ims+xml":{source:"iana"},"application/a2l":{source:"iana"},"application/activemessage":{source:"iana"},"application/alto-costmap+json":{source:"iana",compressible:!0},"application/alto-costmapfilter+json":{source:"iana",compressible:!0},"application/alto-directory+json":{source:"iana",compressible:!0},"application/alto-endpointcost+json":{source:"iana",compressible:!0},"application/alto-endpointcostparams+json":{source:"iana",compressible:!0},"application/alto-endpointprop+json":{source:"iana",compressible:!0},"application/alto-endpointpropparams+json":{source:"iana",compressible:!0},"application/alto-error+json":{source:"iana",compressible:!0},"application/alto-networkmap+json":{source:"iana",compressible:!0},"application/alto-networkmapfilter+json":{source:"iana",compressible:!0},"application/aml":{source:"iana"},"application/andrew-inset":{source:"iana",extensions:["ez"]},"application/applefile":{source:"iana"},"application/applixware":{source:"apache",extensions:["aw"]},"application/atf":{source:"iana"},"application/atfx":{source:"iana"},"application/atom+xml":{source:"iana",compressible:!0,extensions:["atom"]},"application/atomcat+xml":{source:"iana",extensions:["atomcat"]},"application/atomdeleted+xml":{source:"iana"},"application/atomicmail":{source:"iana"},"application/atomsvc+xml":{source:"iana",extensions:["atomsvc"]},"application/atxml":{source:"iana"},"application/auth-policy+xml":{source:"iana"},"application/bacnet-xdd+zip":{source:"iana"},"application/batch-smtp":{source:"iana"},"application/bdoc":{compressible:!1,extensions:["bdoc"]},"application/beep+xml":{source:"iana"},"application/calendar+json":{source:"iana",compressible:!0},"application/calendar+xml":{source:"iana"},"application/call-completion":{source:"iana"},"application/cals-1840":{source:"iana"},"application/cbor":{source:"iana"},"application/cccex":{source:"iana"},"application/ccmp+xml":{source:"iana"},"application/ccxml+xml":{source:"iana",extensions:["ccxml"]},"application/cdfx+xml":{source:"iana"},"application/cdmi-capability":{source:"iana",extensions:["cdmia"]},"application/cdmi-container":{source:"iana",extensions:["cdmic"]},"application/cdmi-domain":{source:"iana",extensions:["cdmid"]},"application/cdmi-object":{source:"iana",extensions:["cdmio"]},"application/cdmi-queue":{source:"iana",extensions:["cdmiq"]},"application/cdni":{source:"iana"},"application/cea":{source:"iana"},"application/cea-2018+xml":{source:"iana"},"application/cellml+xml":{source:"iana"},"application/cfw":{source:"iana"},"application/clue_info+xml":{source:"iana"},"application/cms":{source:"iana"},"application/cnrp+xml":{source:"iana"},"application/coap-group+json":{source:"iana",compressible:!0},"application/coap-payload":{source:"iana"},"application/commonground":{source:"iana"},"application/conference-info+xml":{source:"iana"},"application/cose":{source:"iana"},"application/cose-key":{source:"iana"},"application/cose-key-set":{source:"iana"},"application/cpl+xml":{source:"iana"},"application/csrattrs":{source:"iana"},"application/csta+xml":{source:"iana"},"application/cstadata+xml":{source:"iana"},"application/csvm+json":{source:"iana",compressible:!0},"application/cu-seeme":{source:"apache",extensions:["cu"]},"application/cybercash":{source:"iana"},"application/dart":{compressible:!0},"application/dash+xml":{source:"iana",extensions:["mpd"]},"application/dashdelta":{source:"iana"},"application/davmount+xml":{source:"iana",extensions:["davmount"]},"application/dca-rft":{source:"iana"},"application/dcd":{source:"iana"},"application/dec-dx":{source:"iana"},"application/dialog-info+xml":{source:"iana"},"application/dicom":{source:"iana"},"application/dicom+json":{source:"iana",compressible:!0},"application/dicom+xml":{source:"iana"},"application/dii":{source:"iana"},"application/dit":{source:"iana"},"application/dns":{source:"iana"},"application/docbook+xml":{source:"apache",extensions:["dbk"]},"application/dskpp+xml":{source:"iana"},"application/dssc+der":{source:"iana",extensions:["dssc"]},"application/dssc+xml":{source:"iana",extensions:["xdssc"]},"application/dvcs":{source:"iana"},"application/ecmascript":{source:"iana",compressible:!0,extensions:["ecma"]},"application/edi-consent":{source:"iana"},"application/edi-x12":{source:"iana",compressible:!1},"application/edifact":{source:"iana",compressible:!1},"application/efi":{source:"iana"},"application/emergencycalldata.comment+xml":{source:"iana"},"application/emergencycalldata.control+xml":{source:"iana"},"application/emergencycalldata.deviceinfo+xml":{source:"iana"},"application/emergencycalldata.ecall.msd":{source:"iana"},"application/emergencycalldata.providerinfo+xml":{source:"iana"},"application/emergencycalldata.serviceinfo+xml":{source:"iana"},"application/emergencycalldata.subscriberinfo+xml":{source:"iana"},"application/emergencycalldata.veds+xml":{source:"iana"},"application/emma+xml":{source:"iana",extensions:["emma"]},"application/emotionml+xml":{source:"iana"},"application/encaprtp":{source:"iana"},"application/epp+xml":{source:"iana"},"application/epub+zip":{source:"iana",extensions:["epub"]},"application/eshop":{source:"iana"},"application/exi":{source:"iana",extensions:["exi"]},"application/fastinfoset":{source:"iana"},"application/fastsoap":{source:"iana"},"application/fdt+xml":{source:"iana"},"application/fhir+xml":{source:"iana"},"application/fido.trusted-apps+json":{compressible:!0},"application/fits":{source:"iana"},"application/font-sfnt":{source:"iana"},"application/font-tdpfr":{source:"iana",extensions:["pfr"]},"application/font-woff":{source:"iana",compressible:!1,extensions:["woff"]},"application/framework-attributes+xml":{source:"iana"},"application/geo+json":{source:"iana",compressible:!0,extensions:["geojson"]},"application/geo+json-seq":{source:"iana"},"application/geoxacml+xml":{source:"iana"},"application/gml+xml":{source:"iana",extensions:["gml"]},"application/gpx+xml":{source:"apache",extensions:["gpx"]},"application/gxf":{source:"apache",extensions:["gxf"]},"application/gzip":{source:"iana",compressible:!1,extensions:["gz"]},"application/h224":{source:"iana"},"application/held+xml":{source:"iana"},"application/hjson":{extensions:["hjson"]},"application/http":{source:"iana"},"application/hyperstudio":{source:"iana",extensions:["stk"]},"application/ibe-key-request+xml":{source:"iana"},"application/ibe-pkg-reply+xml":{source:"iana"},"application/ibe-pp-data":{source:"iana"},"application/iges":{source:"iana"},"application/im-iscomposing+xml":{source:"iana"},"application/index":{source:"iana"},"application/index.cmd":{source:"iana"},"application/index.obj":{source:"iana"},"application/index.response":{source:"iana"},"application/index.vnd":{source:"iana"},"application/inkml+xml":{source:"iana",extensions:["ink","inkml"]},"application/iotp":{source:"iana"},"application/ipfix":{source:"iana",extensions:["ipfix"]},"application/ipp":{source:"iana"},"application/isup":{source:"iana"},"application/its+xml":{source:"iana"},"application/java-archive":{source:"apache",compressible:!1,extensions:["jar","war","ear"]},"application/java-serialized-object":{source:"apache",compressible:!1,extensions:["ser"]},"application/java-vm":{source:"apache",compressible:!1,extensions:["class"]},"application/javascript":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["js","mjs"]},"application/jf2feed+json":{source:"iana",compressible:!0},"application/jose":{source:"iana"},"application/jose+json":{source:"iana",compressible:!0},"application/jrd+json":{source:"iana",compressible:!0},"application/json":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["json","map"]},"application/json-patch+json":{source:"iana",compressible:!0},"application/json-seq":{source:"iana"},"application/json5":{extensions:["json5"]},"application/jsonml+json":{source:"apache",compressible:!0,extensions:["jsonml"]},"application/jwk+json":{source:"iana",compressible:!0},"application/jwk-set+json":{source:"iana",compressible:!0},"application/jwt":{source:"iana"},"application/kpml-request+xml":{source:"iana"},"application/kpml-response+xml":{source:"iana"},"application/ld+json":{source:"iana",compressible:!0,extensions:["jsonld"]},"application/lgr+xml":{source:"iana"},"application/link-format":{source:"iana"},"application/load-control+xml":{source:"iana"},"application/lost+xml":{source:"iana",extensions:["lostxml"]},"application/lostsync+xml":{source:"iana"},"application/lxf":{source:"iana"},"application/mac-binhex40":{source:"iana",extensions:["hqx"]},"application/mac-compactpro":{source:"apache",extensions:["cpt"]},"application/macwriteii":{source:"iana"},"application/mads+xml":{source:"iana",extensions:["mads"]},"application/manifest+json":{charset:"UTF-8",compressible:!0,extensions:["webmanifest"]},"application/marc":{source:"iana",extensions:["mrc"]},"application/marcxml+xml":{source:"iana",extensions:["mrcx"]},"application/mathematica":{source:"iana",extensions:["ma","nb","mb"]},"application/mathml+xml":{source:"iana",extensions:["mathml"]},"application/mathml-content+xml":{source:"iana"},"application/mathml-presentation+xml":{source:"iana"},"application/mbms-associated-procedure-description+xml":{source:"iana"},"application/mbms-deregister+xml":{source:"iana"},"application/mbms-envelope+xml":{source:"iana"},"application/mbms-msk+xml":{source:"iana"},"application/mbms-msk-response+xml":{source:"iana"},"application/mbms-protection-description+xml":{source:"iana"},"application/mbms-reception-report+xml":{source:"iana"},"application/mbms-register+xml":{source:"iana"},"application/mbms-register-response+xml":{source:"iana"},"application/mbms-schedule+xml":{source:"iana"},"application/mbms-user-service-description+xml":{source:"iana"},"application/mbox":{source:"iana",extensions:["mbox"]},"application/media-policy-dataset+xml":{source:"iana"},"application/media_control+xml":{source:"iana"},"application/mediaservercontrol+xml":{source:"iana",extensions:["mscml"]},"application/merge-patch+json":{source:"iana",compressible:!0},"application/metalink+xml":{source:"apache",extensions:["metalink"]},"application/metalink4+xml":{source:"iana",extensions:["meta4"]},"application/mets+xml":{source:"iana",extensions:["mets"]},"application/mf4":{source:"iana"},"application/mikey":{source:"iana"},"application/mmt-usd+xml":{source:"iana"},"application/mods+xml":{source:"iana",extensions:["mods"]},"application/moss-keys":{source:"iana"},"application/moss-signature":{source:"iana"},"application/mosskey-data":{source:"iana"},"application/mosskey-request":{source:"iana"},"application/mp21":{source:"iana",extensions:["m21","mp21"]},"application/mp4":{source:"iana",extensions:["mp4s","m4p"]},"application/mpeg4-generic":{source:"iana"},"application/mpeg4-iod":{source:"iana"},"application/mpeg4-iod-xmt":{source:"iana"},"application/mrb-consumer+xml":{source:"iana"},"application/mrb-publish+xml":{source:"iana"},"application/msc-ivr+xml":{source:"iana"},"application/msc-mixer+xml":{source:"iana"},"application/msword":{source:"iana",compressible:!1,extensions:["doc","dot"]},"application/mud+json":{source:"iana",compressible:!0},"application/mxf":{source:"iana",extensions:["mxf"]},"application/n-quads":{source:"iana"},"application/n-triples":{source:"iana"},"application/nasdata":{source:"iana"},"application/news-checkgroups":{source:"iana"},"application/news-groupinfo":{source:"iana"},"application/news-transmission":{source:"iana"},"application/nlsml+xml":{source:"iana"},"application/node":{source:"iana"},"application/nss":{source:"iana"},"application/ocsp-request":{source:"iana"},"application/ocsp-response":{source:"iana"},"application/octet-stream":{source:"iana",compressible:!1,extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/oda":{source:"iana",extensions:["oda"]},"application/odx":{source:"iana"},"application/oebps-package+xml":{source:"iana",extensions:["opf"]},"application/ogg":{source:"iana",compressible:!1,extensions:["ogx"]},"application/omdoc+xml":{source:"apache",extensions:["omdoc"]},"application/onenote":{source:"apache",extensions:["onetoc","onetoc2","onetmp","onepkg"]},"application/oxps":{source:"iana",extensions:["oxps"]},"application/p2p-overlay+xml":{source:"iana"},"application/parityfec":{source:"iana"},"application/passport":{source:"iana"},"application/patch-ops-error+xml":{source:"iana",extensions:["xer"]},"application/pdf":{source:"iana",compressible:!1,extensions:["pdf"]},"application/pdx":{source:"iana"},"application/pgp-encrypted":{source:"iana",compressible:!1,extensions:["pgp"]},"application/pgp-keys":{source:"iana"},"application/pgp-signature":{source:"iana",extensions:["asc","sig"]},"application/pics-rules":{source:"apache",extensions:["prf"]},"application/pidf+xml":{source:"iana"},"application/pidf-diff+xml":{source:"iana"},"application/pkcs10":{source:"iana",extensions:["p10"]},"application/pkcs12":{source:"iana"},"application/pkcs7-mime":{source:"iana",extensions:["p7m","p7c"]},"application/pkcs7-signature":{source:"iana",extensions:["p7s"]},"application/pkcs8":{source:"iana",extensions:["p8"]},"application/pkcs8-encrypted":{source:"iana"},"application/pkix-attr-cert":{source:"iana",extensions:["ac"]},"application/pkix-cert":{source:"iana",extensions:["cer"]},"application/pkix-crl":{source:"iana",extensions:["crl"]},"application/pkix-pkipath":{source:"iana",extensions:["pkipath"]},"application/pkixcmp":{source:"iana",extensions:["pki"]},"application/pls+xml":{source:"iana",extensions:["pls"]},"application/poc-settings+xml":{source:"iana"},"application/postscript":{source:"iana",compressible:!0,extensions:["ai","eps","ps"]},"application/ppsp-tracker+json":{source:"iana",compressible:!0},"application/problem+json":{source:"iana",compressible:!0},"application/problem+xml":{source:"iana"},"application/provenance+xml":{source:"iana"},"application/prs.alvestrand.titrax-sheet":{source:"iana"},"application/prs.cww":{source:"iana",extensions:["cww"]},"application/prs.hpub+zip":{source:"iana"},"application/prs.nprend":{source:"iana"},"application/prs.plucker":{source:"iana"},"application/prs.rdf-xml-crypt":{source:"iana"},"application/prs.xsf+xml":{source:"iana"},"application/pskc+xml":{source:"iana",extensions:["pskcxml"]},"application/qsig":{source:"iana"},"application/raml+yaml":{compressible:!0,extensions:["raml"]},"application/raptorfec":{source:"iana"},"application/rdap+json":{source:"iana",compressible:!0},"application/rdf+xml":{source:"iana",compressible:!0,extensions:["rdf"]},"application/reginfo+xml":{source:"iana",extensions:["rif"]},"application/relax-ng-compact-syntax":{source:"iana",extensions:["rnc"]},"application/remote-printing":{source:"iana"},"application/reputon+json":{source:"iana",compressible:!0},"application/resource-lists+xml":{source:"iana",extensions:["rl"]},"application/resource-lists-diff+xml":{source:"iana",extensions:["rld"]},"application/rfc+xml":{source:"iana"},"application/riscos":{source:"iana"},"application/rlmi+xml":{source:"iana"},"application/rls-services+xml":{source:"iana",extensions:["rs"]},"application/route-apd+xml":{source:"iana"},"application/route-s-tsid+xml":{source:"iana"},"application/route-usd+xml":{source:"iana"},"application/rpki-ghostbusters":{source:"iana",extensions:["gbr"]},"application/rpki-manifest":{source:"iana",extensions:["mft"]},"application/rpki-publication":{source:"iana"},"application/rpki-roa":{source:"iana",extensions:["roa"]},"application/rpki-updown":{source:"iana"},"application/rsd+xml":{source:"apache",extensions:["rsd"]},"application/rss+xml":{source:"apache",compressible:!0,extensions:["rss"]},"application/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"application/rtploopback":{source:"iana"},"application/rtx":{source:"iana"},"application/samlassertion+xml":{source:"iana"},"application/samlmetadata+xml":{source:"iana"},"application/sbml+xml":{source:"iana",extensions:["sbml"]},"application/scaip+xml":{source:"iana"},"application/scim+json":{source:"iana",compressible:!0},"application/scvp-cv-request":{source:"iana",extensions:["scq"]},"application/scvp-cv-response":{source:"iana",extensions:["scs"]},"application/scvp-vp-request":{source:"iana",extensions:["spq"]},"application/scvp-vp-response":{source:"iana",extensions:["spp"]},"application/sdp":{source:"iana",extensions:["sdp"]},"application/sep+xml":{source:"iana"},"application/sep-exi":{source:"iana"},"application/session-info":{source:"iana"},"application/set-payment":{source:"iana"},"application/set-payment-initiation":{source:"iana",extensions:["setpay"]},"application/set-registration":{source:"iana"},"application/set-registration-initiation":{source:"iana",extensions:["setreg"]},"application/sgml":{source:"iana"},"application/sgml-open-catalog":{source:"iana"},"application/shf+xml":{source:"iana",extensions:["shf"]},"application/sieve":{source:"iana"},"application/simple-filter+xml":{source:"iana"},"application/simple-message-summary":{source:"iana"},"application/simplesymbolcontainer":{source:"iana"},"application/slate":{source:"iana"},"application/smil":{source:"iana"},"application/smil+xml":{source:"iana",extensions:["smi","smil"]},"application/smpte336m":{source:"iana"},"application/soap+fastinfoset":{source:"iana"},"application/soap+xml":{source:"iana",compressible:!0},"application/sparql-query":{source:"iana",extensions:["rq"]},"application/sparql-results+xml":{source:"iana",extensions:["srx"]},"application/spirits-event+xml":{source:"iana"},"application/sql":{source:"iana"},"application/srgs":{source:"iana",extensions:["gram"]},"application/srgs+xml":{source:"iana",extensions:["grxml"]},"application/sru+xml":{source:"iana",extensions:["sru"]},"application/ssdl+xml":{source:"apache",extensions:["ssdl"]},"application/ssml+xml":{source:"iana",extensions:["ssml"]},"application/tamp-apex-update":{source:"iana"},"application/tamp-apex-update-confirm":{source:"iana"},"application/tamp-community-update":{source:"iana"},"application/tamp-community-update-confirm":{source:"iana"},"application/tamp-error":{source:"iana"},"application/tamp-sequence-adjust":{source:"iana"},"application/tamp-sequence-adjust-confirm":{source:"iana"},"application/tamp-status-query":{source:"iana"},"application/tamp-status-response":{source:"iana"},"application/tamp-update":{source:"iana"},"application/tamp-update-confirm":{source:"iana"},"application/tar":{compressible:!0},"application/tei+xml":{source:"iana",extensions:["tei","teicorpus"]},"application/thraud+xml":{source:"iana",extensions:["tfi"]},"application/timestamp-query":{source:"iana"},"application/timestamp-reply":{source:"iana"},"application/timestamped-data":{source:"iana",extensions:["tsd"]},"application/tnauthlist":{source:"iana"},"application/trig":{source:"iana"},"application/ttml+xml":{source:"iana"},"application/tve-trigger":{source:"iana"},"application/ulpfec":{source:"iana"},"application/urc-grpsheet+xml":{source:"iana"},"application/urc-ressheet+xml":{source:"iana"},"application/urc-targetdesc+xml":{source:"iana"},"application/urc-uisocketdesc+xml":{source:"iana"},"application/vcard+json":{source:"iana",compressible:!0},"application/vcard+xml":{source:"iana"},"application/vemmi":{source:"iana"},"application/vividence.scriptfile":{source:"apache"},"application/vnd.1000minds.decision-model+xml":{source:"iana"},"application/vnd.3gpp-prose+xml":{source:"iana"},"application/vnd.3gpp-prose-pc3ch+xml":{source:"iana"},"application/vnd.3gpp-v2x-local-service-information":{source:"iana"},"application/vnd.3gpp.access-transfer-events+xml":{source:"iana"},"application/vnd.3gpp.bsf+xml":{source:"iana"},"application/vnd.3gpp.gmop+xml":{source:"iana"},"application/vnd.3gpp.mcptt-affiliation-command+xml":{source:"iana"},"application/vnd.3gpp.mcptt-floor-request+xml":{source:"iana"},"application/vnd.3gpp.mcptt-info+xml":{source:"iana"},"application/vnd.3gpp.mcptt-location-info+xml":{source:"iana"},"application/vnd.3gpp.mcptt-mbms-usage-info+xml":{source:"iana"},"application/vnd.3gpp.mcptt-signed+xml":{source:"iana"},"application/vnd.3gpp.mid-call+xml":{source:"iana"},"application/vnd.3gpp.pic-bw-large":{source:"iana",extensions:["plb"]},"application/vnd.3gpp.pic-bw-small":{source:"iana",extensions:["psb"]},"application/vnd.3gpp.pic-bw-var":{source:"iana",extensions:["pvb"]},"application/vnd.3gpp.sms":{source:"iana"},"application/vnd.3gpp.sms+xml":{source:"iana"},"application/vnd.3gpp.srvcc-ext+xml":{source:"iana"},"application/vnd.3gpp.srvcc-info+xml":{source:"iana"},"application/vnd.3gpp.state-and-event-info+xml":{source:"iana"},"application/vnd.3gpp.ussd+xml":{source:"iana"},"application/vnd.3gpp2.bcmcsinfo+xml":{source:"iana"},"application/vnd.3gpp2.sms":{source:"iana"},"application/vnd.3gpp2.tcap":{source:"iana",extensions:["tcap"]},"application/vnd.3lightssoftware.imagescal":{source:"iana"},"application/vnd.3m.post-it-notes":{source:"iana",extensions:["pwn"]},"application/vnd.accpac.simply.aso":{source:"iana",extensions:["aso"]},"application/vnd.accpac.simply.imp":{source:"iana",extensions:["imp"]},"application/vnd.acucobol":{source:"iana",extensions:["acu"]},"application/vnd.acucorp":{source:"iana",extensions:["atc","acutc"]},"application/vnd.adobe.air-application-installer-package+zip":{source:"apache",extensions:["air"]},"application/vnd.adobe.flash.movie":{source:"iana"},"application/vnd.adobe.formscentral.fcdt":{source:"iana",extensions:["fcdt"]},"application/vnd.adobe.fxp":{source:"iana",extensions:["fxp","fxpl"]},"application/vnd.adobe.partial-upload":{source:"iana"},"application/vnd.adobe.xdp+xml":{source:"iana",extensions:["xdp"]},"application/vnd.adobe.xfdf":{source:"iana",extensions:["xfdf"]},"application/vnd.aether.imp":{source:"iana"},"application/vnd.ah-barcode":{source:"iana"},"application/vnd.ahead.space":{source:"iana",extensions:["ahead"]},"application/vnd.airzip.filesecure.azf":{source:"iana",extensions:["azf"]},"application/vnd.airzip.filesecure.azs":{source:"iana",extensions:["azs"]},"application/vnd.amadeus+json":{source:"iana",compressible:!0},"application/vnd.amazon.ebook":{source:"apache",extensions:["azw"]},"application/vnd.amazon.mobi8-ebook":{source:"iana"},"application/vnd.americandynamics.acc":{source:"iana",extensions:["acc"]},"application/vnd.amiga.ami":{source:"iana",extensions:["ami"]},"application/vnd.amundsen.maze+xml":{source:"iana"},"application/vnd.android.package-archive":{source:"apache",compressible:!1,extensions:["apk"]},"application/vnd.anki":{source:"iana"},"application/vnd.anser-web-certificate-issue-initiation":{source:"iana",extensions:["cii"]},"application/vnd.anser-web-funds-transfer-initiation":{source:"apache",extensions:["fti"]},"application/vnd.antix.game-component":{source:"iana",extensions:["atx"]},"application/vnd.apache.thrift.binary":{source:"iana"},"application/vnd.apache.thrift.compact":{source:"iana"},"application/vnd.apache.thrift.json":{source:"iana"},"application/vnd.api+json":{source:"iana",compressible:!0},"application/vnd.apothekende.reservation+json":{source:"iana",compressible:!0},"application/vnd.apple.installer+xml":{source:"iana",extensions:["mpkg"]},"application/vnd.apple.mpegurl":{source:"iana",extensions:["m3u8"]},"application/vnd.apple.pkpass":{compressible:!1,extensions:["pkpass"]},"application/vnd.arastra.swi":{source:"iana"},"application/vnd.aristanetworks.swi":{source:"iana",extensions:["swi"]},"application/vnd.artsquare":{source:"iana"},"application/vnd.astraea-software.iota":{source:"iana",extensions:["iota"]},"application/vnd.audiograph":{source:"iana",extensions:["aep"]},"application/vnd.autopackage":{source:"iana"},"application/vnd.avalon+json":{source:"iana",compressible:!0},"application/vnd.avistar+xml":{source:"iana"},"application/vnd.balsamiq.bmml+xml":{source:"iana"},"application/vnd.balsamiq.bmpr":{source:"iana"},"application/vnd.bbf.usp.msg":{source:"iana"},"application/vnd.bbf.usp.msg+json":{source:"iana",compressible:!0},"application/vnd.bekitzur-stech+json":{source:"iana",compressible:!0},"application/vnd.bint.med-content":{source:"iana"},"application/vnd.biopax.rdf+xml":{source:"iana"},"application/vnd.blink-idb-value-wrapper":{source:"iana"},"application/vnd.blueice.multipass":{source:"iana",extensions:["mpm"]},"application/vnd.bluetooth.ep.oob":{source:"iana"},"application/vnd.bluetooth.le.oob":{source:"iana"},"application/vnd.bmi":{source:"iana",extensions:["bmi"]},"application/vnd.businessobjects":{source:"iana",extensions:["rep"]},"application/vnd.cab-jscript":{source:"iana"},"application/vnd.canon-cpdl":{source:"iana"},"application/vnd.canon-lips":{source:"iana"},"application/vnd.capasystems-pg+json":{source:"iana",compressible:!0},"application/vnd.cendio.thinlinc.clientconf":{source:"iana"},"application/vnd.century-systems.tcp_stream":{source:"iana"},"application/vnd.chemdraw+xml":{source:"iana",extensions:["cdxml"]},"application/vnd.chess-pgn":{source:"iana"},"application/vnd.chipnuts.karaoke-mmd":{source:"iana",extensions:["mmd"]},"application/vnd.cinderella":{source:"iana",extensions:["cdy"]},"application/vnd.cirpack.isdn-ext":{source:"iana"},"application/vnd.citationstyles.style+xml":{source:"iana"},"application/vnd.claymore":{source:"iana",extensions:["cla"]},"application/vnd.cloanto.rp9":{source:"iana",extensions:["rp9"]},"application/vnd.clonk.c4group":{source:"iana",extensions:["c4g","c4d","c4f","c4p","c4u"]},"application/vnd.cluetrust.cartomobile-config":{source:"iana",extensions:["c11amc"]},"application/vnd.cluetrust.cartomobile-config-pkg":{source:"iana",extensions:["c11amz"]},"application/vnd.coffeescript":{source:"iana"},"application/vnd.collabio.xodocuments.document":{source:"iana"},"application/vnd.collabio.xodocuments.document-template":{source:"iana"},"application/vnd.collabio.xodocuments.presentation":{source:"iana"},"application/vnd.collabio.xodocuments.presentation-template":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet":{source:"iana"},"application/vnd.collabio.xodocuments.spreadsheet-template":{source:"iana"},"application/vnd.collection+json":{source:"iana",compressible:!0},"application/vnd.collection.doc+json":{source:"iana",compressible:!0},"application/vnd.collection.next+json":{source:"iana",compressible:!0},"application/vnd.comicbook+zip":{source:"iana"},"application/vnd.comicbook-rar":{source:"iana"},"application/vnd.commerce-battelle":{source:"iana"},"application/vnd.commonspace":{source:"iana",extensions:["csp"]},"application/vnd.contact.cmsg":{source:"iana",extensions:["cdbcmsg"]},"application/vnd.coreos.ignition+json":{source:"iana",compressible:!0},"application/vnd.cosmocaller":{source:"iana",extensions:["cmc"]},"application/vnd.crick.clicker":{source:"iana",extensions:["clkx"]},"application/vnd.crick.clicker.keyboard":{source:"iana",extensions:["clkk"]},"application/vnd.crick.clicker.palette":{source:"iana",extensions:["clkp"]},"application/vnd.crick.clicker.template":{source:"iana",extensions:["clkt"]},"application/vnd.crick.clicker.wordbank":{source:"iana",extensions:["clkw"]},"application/vnd.criticaltools.wbs+xml":{source:"iana",extensions:["wbs"]},"application/vnd.ctc-posml":{source:"iana",extensions:["pml"]},"application/vnd.ctct.ws+xml":{source:"iana"},"application/vnd.cups-pdf":{source:"iana"},"application/vnd.cups-postscript":{source:"iana"},"application/vnd.cups-ppd":{source:"iana",extensions:["ppd"]},"application/vnd.cups-raster":{source:"iana"},"application/vnd.cups-raw":{source:"iana"},"application/vnd.curl":{source:"iana"},"application/vnd.curl.car":{source:"apache",extensions:["car"]},"application/vnd.curl.pcurl":{source:"apache",extensions:["pcurl"]},"application/vnd.cyan.dean.root+xml":{source:"iana"},"application/vnd.cybank":{source:"iana"},"application/vnd.d2l.coursepackage1p0+zip":{source:"iana"},"application/vnd.dart":{source:"iana",compressible:!0,extensions:["dart"]},"application/vnd.data-vision.rdz":{source:"iana",extensions:["rdz"]},"application/vnd.datapackage+json":{source:"iana",compressible:!0},"application/vnd.dataresource+json":{source:"iana",compressible:!0},"application/vnd.debian.binary-package":{source:"iana"},"application/vnd.dece.data":{source:"iana",extensions:["uvf","uvvf","uvd","uvvd"]},"application/vnd.dece.ttml+xml":{source:"iana",extensions:["uvt","uvvt"]},"application/vnd.dece.unspecified":{source:"iana",extensions:["uvx","uvvx"]},"application/vnd.dece.zip":{source:"iana",extensions:["uvz","uvvz"]},"application/vnd.denovo.fcselayout-link":{source:"iana",extensions:["fe_launch"]},"application/vnd.desmume-movie":{source:"iana"},"application/vnd.desmume.movie":{source:"apache"},"application/vnd.dir-bi.plate-dl-nosuffix":{source:"iana"},"application/vnd.dm.delegation+xml":{source:"iana"},"application/vnd.dna":{source:"iana",extensions:["dna"]},"application/vnd.document+json":{source:"iana",compressible:!0},"application/vnd.dolby.mlp":{source:"apache",extensions:["mlp"]},"application/vnd.dolby.mobile.1":{source:"iana"},"application/vnd.dolby.mobile.2":{source:"iana"},"application/vnd.doremir.scorecloud-binary-document":{source:"iana"},"application/vnd.dpgraph":{source:"iana",extensions:["dpg"]},"application/vnd.dreamfactory":{source:"iana",extensions:["dfac"]},"application/vnd.drive+json":{source:"iana",compressible:!0},"application/vnd.ds-keypoint":{source:"apache",extensions:["kpxx"]},"application/vnd.dtg.local":{source:"iana"},"application/vnd.dtg.local.flash":{source:"iana"},"application/vnd.dtg.local.html":{source:"iana"},"application/vnd.dvb.ait":{source:"iana",extensions:["ait"]},"application/vnd.dvb.dvbj":{source:"iana"},"application/vnd.dvb.esgcontainer":{source:"iana"},"application/vnd.dvb.ipdcdftnotifaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess":{source:"iana"},"application/vnd.dvb.ipdcesgaccess2":{source:"iana"},"application/vnd.dvb.ipdcesgpdd":{source:"iana"},"application/vnd.dvb.ipdcroaming":{source:"iana"},"application/vnd.dvb.iptv.alfec-base":{source:"iana"},"application/vnd.dvb.iptv.alfec-enhancement":{source:"iana"},"application/vnd.dvb.notif-aggregate-root+xml":{source:"iana"},"application/vnd.dvb.notif-container+xml":{source:"iana"},"application/vnd.dvb.notif-generic+xml":{source:"iana"},"application/vnd.dvb.notif-ia-msglist+xml":{source:"iana"},"application/vnd.dvb.notif-ia-registration-request+xml":{source:"iana"},"application/vnd.dvb.notif-ia-registration-response+xml":{source:"iana"},"application/vnd.dvb.notif-init+xml":{source:"iana"},"application/vnd.dvb.pfr":{source:"iana"},"application/vnd.dvb.service":{source:"iana",extensions:["svc"]},"application/vnd.dxr":{source:"iana"},"application/vnd.dynageo":{source:"iana",extensions:["geo"]},"application/vnd.dzr":{source:"iana"},"application/vnd.easykaraoke.cdgdownload":{source:"iana"},"application/vnd.ecdis-update":{source:"iana"},"application/vnd.ecip.rlp":{source:"iana"},"application/vnd.ecowin.chart":{source:"iana",extensions:["mag"]},"application/vnd.ecowin.filerequest":{source:"iana"},"application/vnd.ecowin.fileupdate":{source:"iana"},"application/vnd.ecowin.series":{source:"iana"},"application/vnd.ecowin.seriesrequest":{source:"iana"},"application/vnd.ecowin.seriesupdate":{source:"iana"},"application/vnd.efi.img":{source:"iana"},"application/vnd.efi.iso":{source:"iana"},"application/vnd.emclient.accessrequest+xml":{source:"iana"},"application/vnd.enliven":{source:"iana",extensions:["nml"]},"application/vnd.enphase.envoy":{source:"iana"},"application/vnd.eprints.data+xml":{source:"iana"},"application/vnd.epson.esf":{source:"iana",extensions:["esf"]},"application/vnd.epson.msf":{source:"iana",extensions:["msf"]},"application/vnd.epson.quickanime":{source:"iana",extensions:["qam"]},"application/vnd.epson.salt":{source:"iana",extensions:["slt"]},"application/vnd.epson.ssf":{source:"iana",extensions:["ssf"]},"application/vnd.ericsson.quickcall":{source:"iana"},"application/vnd.espass-espass+zip":{source:"iana"},"application/vnd.eszigno3+xml":{source:"iana",extensions:["es3","et3"]},"application/vnd.etsi.aoc+xml":{source:"iana"},"application/vnd.etsi.asic-e+zip":{source:"iana"},"application/vnd.etsi.asic-s+zip":{source:"iana"},"application/vnd.etsi.cug+xml":{source:"iana"},"application/vnd.etsi.iptvcommand+xml":{source:"iana"},"application/vnd.etsi.iptvdiscovery+xml":{source:"iana"},"application/vnd.etsi.iptvprofile+xml":{source:"iana"},"application/vnd.etsi.iptvsad-bc+xml":{source:"iana"},"application/vnd.etsi.iptvsad-cod+xml":{source:"iana"},"application/vnd.etsi.iptvsad-npvr+xml":{source:"iana"},"application/vnd.etsi.iptvservice+xml":{source:"iana"},"application/vnd.etsi.iptvsync+xml":{source:"iana"},"application/vnd.etsi.iptvueprofile+xml":{source:"iana"},"application/vnd.etsi.mcid+xml":{source:"iana"},"application/vnd.etsi.mheg5":{source:"iana"},"application/vnd.etsi.overload-control-policy-dataset+xml":{source:"iana"},"application/vnd.etsi.pstn+xml":{source:"iana"},"application/vnd.etsi.sci+xml":{source:"iana"},"application/vnd.etsi.simservs+xml":{source:"iana"},"application/vnd.etsi.timestamp-token":{source:"iana"},"application/vnd.etsi.tsl+xml":{source:"iana"},"application/vnd.etsi.tsl.der":{source:"iana"},"application/vnd.eudora.data":{source:"iana"},"application/vnd.evolv.ecig.profile":{source:"iana"},"application/vnd.evolv.ecig.settings":{source:"iana"},"application/vnd.evolv.ecig.theme":{source:"iana"},"application/vnd.ezpix-album":{source:"iana",extensions:["ez2"]},"application/vnd.ezpix-package":{source:"iana",extensions:["ez3"]},"application/vnd.f-secure.mobile":{source:"iana"},"application/vnd.fastcopy-disk-image":{source:"iana"},"application/vnd.fdf":{source:"iana",extensions:["fdf"]},"application/vnd.fdsn.mseed":{source:"iana",extensions:["mseed"]},"application/vnd.fdsn.seed":{source:"iana",extensions:["seed","dataless"]},"application/vnd.ffsns":{source:"iana"},"application/vnd.filmit.zfc":{source:"iana"},"application/vnd.fints":{source:"iana"},"application/vnd.firemonkeys.cloudcell":{source:"iana"},"application/vnd.flographit":{source:"iana",extensions:["gph"]},"application/vnd.fluxtime.clip":{source:"iana",extensions:["ftc"]},"application/vnd.font-fontforge-sfd":{source:"iana"},"application/vnd.framemaker":{source:"iana",extensions:["fm","frame","maker","book"]},"application/vnd.frogans.fnc":{source:"iana",extensions:["fnc"]},"application/vnd.frogans.ltf":{source:"iana",extensions:["ltf"]},"application/vnd.fsc.weblaunch":{source:"iana",extensions:["fsc"]},"application/vnd.fujitsu.oasys":{source:"iana",extensions:["oas"]},"application/vnd.fujitsu.oasys2":{source:"iana",extensions:["oa2"]},"application/vnd.fujitsu.oasys3":{source:"iana",extensions:["oa3"]},"application/vnd.fujitsu.oasysgp":{source:"iana",extensions:["fg5"]},"application/vnd.fujitsu.oasysprs":{source:"iana",extensions:["bh2"]},"application/vnd.fujixerox.art-ex":{source:"iana"},"application/vnd.fujixerox.art4":{source:"iana"},"application/vnd.fujixerox.ddd":{source:"iana",extensions:["ddd"]},"application/vnd.fujixerox.docuworks":{source:"iana",extensions:["xdw"]},"application/vnd.fujixerox.docuworks.binder":{source:"iana",extensions:["xbd"]},"application/vnd.fujixerox.docuworks.container":{source:"iana"},"application/vnd.fujixerox.hbpl":{source:"iana"},"application/vnd.fut-misnet":{source:"iana"},"application/vnd.fuzzysheet":{source:"iana",extensions:["fzs"]},"application/vnd.genomatix.tuxedo":{source:"iana",extensions:["txd"]},"application/vnd.geo+json":{source:"iana",compressible:!0},"application/vnd.geocube+xml":{source:"iana"},"application/vnd.geogebra.file":{source:"iana",extensions:["ggb"]},"application/vnd.geogebra.tool":{source:"iana",extensions:["ggt"]},"application/vnd.geometry-explorer":{source:"iana",extensions:["gex","gre"]},"application/vnd.geonext":{source:"iana",extensions:["gxt"]},"application/vnd.geoplan":{source:"iana",extensions:["g2w"]},"application/vnd.geospace":{source:"iana",extensions:["g3w"]},"application/vnd.gerber":{source:"iana"},"application/vnd.globalplatform.card-content-mgt":{source:"iana"},"application/vnd.globalplatform.card-content-mgt-response":{source:"iana"},"application/vnd.gmx":{source:"iana",extensions:["gmx"]},"application/vnd.google-apps.document":{compressible:!1,extensions:["gdoc"]},"application/vnd.google-apps.presentation":{compressible:!1,extensions:["gslides"]},"application/vnd.google-apps.spreadsheet":{compressible:!1,extensions:["gsheet"]},"application/vnd.google-earth.kml+xml":{source:"iana",compressible:!0,extensions:["kml"]},"application/vnd.google-earth.kmz":{source:"iana",compressible:!1,extensions:["kmz"]},"application/vnd.gov.sk.e-form+xml":{source:"iana"},"application/vnd.gov.sk.e-form+zip":{source:"iana"},"application/vnd.gov.sk.xmldatacontainer+xml":{source:"iana"},"application/vnd.grafeq":{source:"iana",extensions:["gqf","gqs"]},"application/vnd.gridmp":{source:"iana"},"application/vnd.groove-account":{source:"iana",extensions:["gac"]},"application/vnd.groove-help":{source:"iana",extensions:["ghf"]},"application/vnd.groove-identity-message":{source:"iana",extensions:["gim"]},"application/vnd.groove-injector":{source:"iana",extensions:["grv"]},"application/vnd.groove-tool-message":{source:"iana",extensions:["gtm"]},"application/vnd.groove-tool-template":{source:"iana",extensions:["tpl"]},"application/vnd.groove-vcard":{source:"iana",extensions:["vcg"]},"application/vnd.hal+json":{source:"iana",compressible:!0},"application/vnd.hal+xml":{source:"iana",extensions:["hal"]},"application/vnd.handheld-entertainment+xml":{source:"iana",extensions:["zmm"]},"application/vnd.hbci":{source:"iana",extensions:["hbci"]},"application/vnd.hc+json":{source:"iana",compressible:!0},"application/vnd.hcl-bireports":{source:"iana"},"application/vnd.hdt":{source:"iana"},"application/vnd.heroku+json":{source:"iana",compressible:!0},"application/vnd.hhe.lesson-player":{source:"iana",extensions:["les"]},"application/vnd.hp-hpgl":{source:"iana",extensions:["hpgl"]},"application/vnd.hp-hpid":{source:"iana",extensions:["hpid"]},"application/vnd.hp-hps":{source:"iana",extensions:["hps"]},"application/vnd.hp-jlyt":{source:"iana",extensions:["jlt"]},"application/vnd.hp-pcl":{source:"iana",extensions:["pcl"]},"application/vnd.hp-pclxl":{source:"iana",extensions:["pclxl"]},"application/vnd.httphone":{source:"iana"},"application/vnd.hydrostatix.sof-data":{source:"iana",extensions:["sfd-hdstx"]},"application/vnd.hyper-item+json":{source:"iana",compressible:!0},"application/vnd.hyperdrive+json":{source:"iana",compressible:!0},"application/vnd.hzn-3d-crossword":{source:"iana"},"application/vnd.ibm.afplinedata":{source:"iana"},"application/vnd.ibm.electronic-media":{source:"iana"},"application/vnd.ibm.minipay":{source:"iana",extensions:["mpy"]},"application/vnd.ibm.modcap":{source:"iana",extensions:["afp","listafp","list3820"]},"application/vnd.ibm.rights-management":{source:"iana",extensions:["irm"]},"application/vnd.ibm.secure-container":{source:"iana",extensions:["sc"]},"application/vnd.iccprofile":{source:"iana",extensions:["icc","icm"]},"application/vnd.ieee.1905":{source:"iana"},"application/vnd.igloader":{source:"iana",extensions:["igl"]},"application/vnd.imagemeter.folder+zip":{source:"iana"},"application/vnd.imagemeter.image+zip":{source:"iana"},"application/vnd.immervision-ivp":{source:"iana",extensions:["ivp"]},"application/vnd.immervision-ivu":{source:"iana",extensions:["ivu"]},"application/vnd.ims.imsccv1p1":{source:"iana"},"application/vnd.ims.imsccv1p2":{source:"iana"},"application/vnd.ims.imsccv1p3":{source:"iana"},"application/vnd.ims.lis.v2.result+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolconsumerprofile+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolproxy.id+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings+json":{source:"iana",compressible:!0},"application/vnd.ims.lti.v2.toolsettings.simple+json":{source:"iana",compressible:!0},"application/vnd.informedcontrol.rms+xml":{source:"iana"},"application/vnd.informix-visionary":{source:"iana"},"application/vnd.infotech.project":{source:"iana"},"application/vnd.infotech.project+xml":{source:"iana"},"application/vnd.innopath.wamp.notification":{source:"iana"},"application/vnd.insors.igm":{source:"iana",extensions:["igm"]},"application/vnd.intercon.formnet":{source:"iana",extensions:["xpw","xpx"]},"application/vnd.intergeo":{source:"iana",extensions:["i2g"]},"application/vnd.intertrust.digibox":{source:"iana"},"application/vnd.intertrust.nncp":{source:"iana"},"application/vnd.intu.qbo":{source:"iana",extensions:["qbo"]},"application/vnd.intu.qfx":{source:"iana",extensions:["qfx"]},"application/vnd.iptc.g2.catalogitem+xml":{source:"iana"},"application/vnd.iptc.g2.conceptitem+xml":{source:"iana"},"application/vnd.iptc.g2.knowledgeitem+xml":{source:"iana"},"application/vnd.iptc.g2.newsitem+xml":{source:"iana"},"application/vnd.iptc.g2.newsmessage+xml":{source:"iana"},"application/vnd.iptc.g2.packageitem+xml":{source:"iana"},"application/vnd.iptc.g2.planningitem+xml":{source:"iana"},"application/vnd.ipunplugged.rcprofile":{source:"iana",extensions:["rcprofile"]},"application/vnd.irepository.package+xml":{source:"iana",extensions:["irp"]},"application/vnd.is-xpr":{source:"iana",extensions:["xpr"]},"application/vnd.isac.fcs":{source:"iana",extensions:["fcs"]},"application/vnd.jam":{source:"iana",extensions:["jam"]},"application/vnd.japannet-directory-service":{source:"iana"},"application/vnd.japannet-jpnstore-wakeup":{source:"iana"},"application/vnd.japannet-payment-wakeup":{source:"iana"},"application/vnd.japannet-registration":{source:"iana"},"application/vnd.japannet-registration-wakeup":{source:"iana"},"application/vnd.japannet-setstore-wakeup":{source:"iana"},"application/vnd.japannet-verification":{source:"iana"},"application/vnd.japannet-verification-wakeup":{source:"iana"},"application/vnd.jcp.javame.midlet-rms":{source:"iana",extensions:["rms"]},"application/vnd.jisp":{source:"iana",extensions:["jisp"]},"application/vnd.joost.joda-archive":{source:"iana",extensions:["joda"]},"application/vnd.jsk.isdn-ngn":{source:"iana"},"application/vnd.kahootz":{source:"iana",extensions:["ktz","ktr"]},"application/vnd.kde.karbon":{source:"iana",extensions:["karbon"]},"application/vnd.kde.kchart":{source:"iana",extensions:["chrt"]},"application/vnd.kde.kformula":{source:"iana",extensions:["kfo"]},"application/vnd.kde.kivio":{source:"iana",extensions:["flw"]},"application/vnd.kde.kontour":{source:"iana",extensions:["kon"]},"application/vnd.kde.kpresenter":{source:"iana",extensions:["kpr","kpt"]},"application/vnd.kde.kspread":{source:"iana",extensions:["ksp"]},"application/vnd.kde.kword":{source:"iana",extensions:["kwd","kwt"]},"application/vnd.kenameaapp":{source:"iana",extensions:["htke"]},"application/vnd.kidspiration":{source:"iana",extensions:["kia"]},"application/vnd.kinar":{source:"iana",extensions:["kne","knp"]},"application/vnd.koan":{source:"iana",extensions:["skp","skd","skt","skm"]},"application/vnd.kodak-descriptor":{source:"iana",extensions:["sse"]},"application/vnd.las.las+json":{source:"iana",compressible:!0},"application/vnd.las.las+xml":{source:"iana",extensions:["lasxml"]},"application/vnd.liberty-request+xml":{source:"iana"},"application/vnd.llamagraphics.life-balance.desktop":{source:"iana",extensions:["lbd"]},"application/vnd.llamagraphics.life-balance.exchange+xml":{source:"iana",extensions:["lbe"]},"application/vnd.lotus-1-2-3":{source:"iana",extensions:["123"]},"application/vnd.lotus-approach":{source:"iana",extensions:["apr"]},"application/vnd.lotus-freelance":{source:"iana",extensions:["pre"]},"application/vnd.lotus-notes":{source:"iana",extensions:["nsf"]},"application/vnd.lotus-organizer":{source:"iana",extensions:["org"]},"application/vnd.lotus-screencam":{source:"iana",extensions:["scm"]},"application/vnd.lotus-wordpro":{source:"iana",extensions:["lwp"]},"application/vnd.macports.portpkg":{source:"iana",extensions:["portpkg"]},"application/vnd.mapbox-vector-tile":{source:"iana"},"application/vnd.marlin.drm.actiontoken+xml":{source:"iana"},"application/vnd.marlin.drm.conftoken+xml":{source:"iana"},"application/vnd.marlin.drm.license+xml":{source:"iana"},"application/vnd.marlin.drm.mdcf":{source:"iana"},"application/vnd.mason+json":{source:"iana",compressible:!0},"application/vnd.maxmind.maxmind-db":{source:"iana"},"application/vnd.mcd":{source:"iana",extensions:["mcd"]},"application/vnd.medcalcdata":{source:"iana",extensions:["mc1"]},"application/vnd.mediastation.cdkey":{source:"iana",extensions:["cdkey"]},"application/vnd.meridian-slingshot":{source:"iana"},"application/vnd.mfer":{source:"iana",extensions:["mwf"]},"application/vnd.mfmp":{source:"iana",extensions:["mfm"]},"application/vnd.micro+json":{source:"iana",compressible:!0},"application/vnd.micrografx.flo":{source:"iana",extensions:["flo"]},"application/vnd.micrografx.igx":{source:"iana",extensions:["igx"]},"application/vnd.microsoft.portable-executable":{source:"iana"},"application/vnd.microsoft.windows.thumbnail-cache":{source:"iana"},"application/vnd.miele+json":{source:"iana",compressible:!0},"application/vnd.mif":{source:"iana",extensions:["mif"]},"application/vnd.minisoft-hp3000-save":{source:"iana"},"application/vnd.mitsubishi.misty-guard.trustweb":{source:"iana"},"application/vnd.mobius.daf":{source:"iana",extensions:["daf"]},"application/vnd.mobius.dis":{source:"iana",extensions:["dis"]},"application/vnd.mobius.mbk":{source:"iana",extensions:["mbk"]},"application/vnd.mobius.mqy":{source:"iana",extensions:["mqy"]},"application/vnd.mobius.msl":{source:"iana",extensions:["msl"]},"application/vnd.mobius.plc":{source:"iana",extensions:["plc"]},"application/vnd.mobius.txf":{source:"iana",extensions:["txf"]},"application/vnd.mophun.application":{source:"iana",extensions:["mpn"]},"application/vnd.mophun.certificate":{source:"iana",extensions:["mpc"]},"application/vnd.motorola.flexsuite":{source:"iana"},"application/vnd.motorola.flexsuite.adsi":{source:"iana"},"application/vnd.motorola.flexsuite.fis":{source:"iana"},"application/vnd.motorola.flexsuite.gotap":{source:"iana"},"application/vnd.motorola.flexsuite.kmr":{source:"iana"},"application/vnd.motorola.flexsuite.ttc":{source:"iana"},"application/vnd.motorola.flexsuite.wem":{source:"iana"},"application/vnd.motorola.iprm":{source:"iana"},"application/vnd.mozilla.xul+xml":{source:"iana",compressible:!0,extensions:["xul"]},"application/vnd.ms-3mfdocument":{source:"iana"},"application/vnd.ms-artgalry":{source:"iana",extensions:["cil"]},"application/vnd.ms-asf":{source:"iana"},"application/vnd.ms-cab-compressed":{source:"iana",extensions:["cab"]},"application/vnd.ms-color.iccprofile":{source:"apache"},"application/vnd.ms-excel":{source:"iana",compressible:!1,extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-excel.addin.macroenabled.12":{source:"iana",extensions:["xlam"]},"application/vnd.ms-excel.sheet.binary.macroenabled.12":{source:"iana",extensions:["xlsb"]},"application/vnd.ms-excel.sheet.macroenabled.12":{source:"iana",extensions:["xlsm"]},"application/vnd.ms-excel.template.macroenabled.12":{source:"iana",extensions:["xltm"]},"application/vnd.ms-fontobject":{source:"iana",compressible:!0,extensions:["eot"]},"application/vnd.ms-htmlhelp":{source:"iana",extensions:["chm"]},"application/vnd.ms-ims":{source:"iana",extensions:["ims"]},"application/vnd.ms-lrm":{source:"iana",extensions:["lrm"]},"application/vnd.ms-office.activex+xml":{source:"iana"},"application/vnd.ms-officetheme":{source:"iana",extensions:["thmx"]},"application/vnd.ms-opentype":{source:"apache",compressible:!0},"application/vnd.ms-outlook":{compressible:!1,extensions:["msg"]},"application/vnd.ms-package.obfuscated-opentype":{source:"apache"},"application/vnd.ms-pki.seccat":{source:"apache",extensions:["cat"]},"application/vnd.ms-pki.stl":{source:"apache",extensions:["stl"]},"application/vnd.ms-playready.initiator+xml":{source:"iana"},"application/vnd.ms-powerpoint":{source:"iana",compressible:!1,extensions:["ppt","pps","pot"]},"application/vnd.ms-powerpoint.addin.macroenabled.12":{source:"iana",extensions:["ppam"]},"application/vnd.ms-powerpoint.presentation.macroenabled.12":{source:"iana",extensions:["pptm"]},"application/vnd.ms-powerpoint.slide.macroenabled.12":{source:"iana",extensions:["sldm"]},"application/vnd.ms-powerpoint.slideshow.macroenabled.12":{source:"iana",extensions:["ppsm"]},"application/vnd.ms-powerpoint.template.macroenabled.12":{source:"iana",extensions:["potm"]},"application/vnd.ms-printdevicecapabilities+xml":{source:"iana"},"application/vnd.ms-printing.printticket+xml":{source:"apache"},"application/vnd.ms-printschematicket+xml":{source:"iana"},"application/vnd.ms-project":{source:"iana",extensions:["mpp","mpt"]},"application/vnd.ms-tnef":{source:"iana"},"application/vnd.ms-windows.devicepairing":{source:"iana"},"application/vnd.ms-windows.nwprinting.oob":{source:"iana"},"application/vnd.ms-windows.printerpairing":{source:"iana"},"application/vnd.ms-windows.wsd.oob":{source:"iana"},"application/vnd.ms-wmdrm.lic-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.lic-resp":{source:"iana"},"application/vnd.ms-wmdrm.meter-chlg-req":{source:"iana"},"application/vnd.ms-wmdrm.meter-resp":{source:"iana"},"application/vnd.ms-word.document.macroenabled.12":{source:"iana",extensions:["docm"]},"application/vnd.ms-word.template.macroenabled.12":{source:"iana",extensions:["dotm"]},"application/vnd.ms-works":{source:"iana",extensions:["wps","wks","wcm","wdb"]},"application/vnd.ms-wpl":{source:"iana",extensions:["wpl"]},"application/vnd.ms-xpsdocument":{source:"iana",compressible:!1,extensions:["xps"]},"application/vnd.msa-disk-image":{source:"iana"},"application/vnd.mseq":{source:"iana",extensions:["mseq"]},"application/vnd.msign":{source:"iana"},"application/vnd.multiad.creator":{source:"iana"},"application/vnd.multiad.creator.cif":{source:"iana"},"application/vnd.music-niff":{source:"iana"},"application/vnd.musician":{source:"iana",extensions:["mus"]},"application/vnd.muvee.style":{source:"iana",extensions:["msty"]},"application/vnd.mynfc":{source:"iana",extensions:["taglet"]},"application/vnd.ncd.control":{source:"iana"},"application/vnd.ncd.reference":{source:"iana"},"application/vnd.nearst.inv+json":{source:"iana",compressible:!0},"application/vnd.nervana":{source:"iana"},"application/vnd.netfpx":{source:"iana"},"application/vnd.neurolanguage.nlu":{source:"iana",extensions:["nlu"]},"application/vnd.nintendo.nitro.rom":{source:"iana"},"application/vnd.nintendo.snes.rom":{source:"iana"},"application/vnd.nitf":{source:"iana",extensions:["ntf","nitf"]},"application/vnd.noblenet-directory":{source:"iana",extensions:["nnd"]},"application/vnd.noblenet-sealer":{source:"iana",extensions:["nns"]},"application/vnd.noblenet-web":{source:"iana",extensions:["nnw"]},"application/vnd.nokia.catalogs":{source:"iana"},"application/vnd.nokia.conml+wbxml":{source:"iana"},"application/vnd.nokia.conml+xml":{source:"iana"},"application/vnd.nokia.iptv.config+xml":{source:"iana"},"application/vnd.nokia.isds-radio-presets":{source:"iana"},"application/vnd.nokia.landmark+wbxml":{source:"iana"},"application/vnd.nokia.landmark+xml":{source:"iana"},"application/vnd.nokia.landmarkcollection+xml":{source:"iana"},"application/vnd.nokia.n-gage.ac+xml":{source:"iana"},"application/vnd.nokia.n-gage.data":{source:"iana",extensions:["ngdat"]},"application/vnd.nokia.n-gage.symbian.install":{source:"iana",extensions:["n-gage"]},"application/vnd.nokia.ncd":{source:"iana"},"application/vnd.nokia.pcd+wbxml":{source:"iana"},"application/vnd.nokia.pcd+xml":{source:"iana"},"application/vnd.nokia.radio-preset":{source:"iana",extensions:["rpst"]},"application/vnd.nokia.radio-presets":{source:"iana",extensions:["rpss"]},"application/vnd.novadigm.edm":{source:"iana",extensions:["edm"]},"application/vnd.novadigm.edx":{source:"iana",extensions:["edx"]},"application/vnd.novadigm.ext":{source:"iana",extensions:["ext"]},"application/vnd.ntt-local.content-share":{source:"iana"},"application/vnd.ntt-local.file-transfer":{source:"iana"},"application/vnd.ntt-local.ogw_remote-access":{source:"iana"},"application/vnd.ntt-local.sip-ta_remote":{source:"iana"},"application/vnd.ntt-local.sip-ta_tcp_stream":{source:"iana"},"application/vnd.oasis.opendocument.chart":{source:"iana",extensions:["odc"]},"application/vnd.oasis.opendocument.chart-template":{source:"iana",extensions:["otc"]},"application/vnd.oasis.opendocument.database":{source:"iana",extensions:["odb"]},"application/vnd.oasis.opendocument.formula":{source:"iana",extensions:["odf"]},"application/vnd.oasis.opendocument.formula-template":{source:"iana",extensions:["odft"]},"application/vnd.oasis.opendocument.graphics":{source:"iana",compressible:!1,extensions:["odg"]},"application/vnd.oasis.opendocument.graphics-template":{source:"iana",extensions:["otg"]},"application/vnd.oasis.opendocument.image":{source:"iana",extensions:["odi"]},"application/vnd.oasis.opendocument.image-template":{source:"iana",extensions:["oti"]},"application/vnd.oasis.opendocument.presentation":{source:"iana",compressible:!1,extensions:["odp"]},"application/vnd.oasis.opendocument.presentation-template":{source:"iana",extensions:["otp"]},"application/vnd.oasis.opendocument.spreadsheet":{source:"iana",compressible:!1,extensions:["ods"]},"application/vnd.oasis.opendocument.spreadsheet-template":{source:"iana",extensions:["ots"]},"application/vnd.oasis.opendocument.text":{source:"iana",compressible:!1,extensions:["odt"]},"application/vnd.oasis.opendocument.text-master":{source:"iana",extensions:["odm"]},"application/vnd.oasis.opendocument.text-template":{source:"iana",extensions:["ott"]},"application/vnd.oasis.opendocument.text-web":{source:"iana",extensions:["oth"]},"application/vnd.obn":{source:"iana"},"application/vnd.ocf+cbor":{source:"iana"},"application/vnd.oftn.l10n+json":{source:"iana",compressible:!0},"application/vnd.oipf.contentaccessdownload+xml":{source:"iana"},"application/vnd.oipf.contentaccessstreaming+xml":{source:"iana"},"application/vnd.oipf.cspg-hexbinary":{source:"iana"},"application/vnd.oipf.dae.svg+xml":{source:"iana"},"application/vnd.oipf.dae.xhtml+xml":{source:"iana"},"application/vnd.oipf.mippvcontrolmessage+xml":{source:"iana"},"application/vnd.oipf.pae.gem":{source:"iana"},"application/vnd.oipf.spdiscovery+xml":{source:"iana"},"application/vnd.oipf.spdlist+xml":{source:"iana"},"application/vnd.oipf.ueprofile+xml":{source:"iana"},"application/vnd.oipf.userprofile+xml":{source:"iana"},"application/vnd.olpc-sugar":{source:"iana",extensions:["xo"]},"application/vnd.oma-scws-config":{source:"iana"},"application/vnd.oma-scws-http-request":{source:"iana"},"application/vnd.oma-scws-http-response":{source:"iana"},"application/vnd.oma.bcast.associated-procedure-parameter+xml":{source:"iana"},"application/vnd.oma.bcast.drm-trigger+xml":{source:"iana"},"application/vnd.oma.bcast.imd+xml":{source:"iana"},"application/vnd.oma.bcast.ltkm":{source:"iana"},"application/vnd.oma.bcast.notification+xml":{source:"iana"},"application/vnd.oma.bcast.provisioningtrigger":{source:"iana"},"application/vnd.oma.bcast.sgboot":{source:"iana"},"application/vnd.oma.bcast.sgdd+xml":{source:"iana"},"application/vnd.oma.bcast.sgdu":{source:"iana"},"application/vnd.oma.bcast.simple-symbol-container":{source:"iana"},"application/vnd.oma.bcast.smartcard-trigger+xml":{source:"iana"},"application/vnd.oma.bcast.sprov+xml":{source:"iana"},"application/vnd.oma.bcast.stkm":{source:"iana"},"application/vnd.oma.cab-address-book+xml":{source:"iana"},"application/vnd.oma.cab-feature-handler+xml":{source:"iana"},"application/vnd.oma.cab-pcc+xml":{source:"iana"},"application/vnd.oma.cab-subs-invite+xml":{source:"iana"},"application/vnd.oma.cab-user-prefs+xml":{source:"iana"},"application/vnd.oma.dcd":{source:"iana"},"application/vnd.oma.dcdc":{source:"iana"},"application/vnd.oma.dd2+xml":{source:"iana",extensions:["dd2"]},"application/vnd.oma.drm.risd+xml":{source:"iana"},"application/vnd.oma.group-usage-list+xml":{source:"iana"},"application/vnd.oma.lwm2m+json":{source:"iana",compressible:!0},"application/vnd.oma.lwm2m+tlv":{source:"iana"},"application/vnd.oma.pal+xml":{source:"iana"},"application/vnd.oma.poc.detailed-progress-report+xml":{source:"iana"},"application/vnd.oma.poc.final-report+xml":{source:"iana"},"application/vnd.oma.poc.groups+xml":{source:"iana"},"application/vnd.oma.poc.invocation-descriptor+xml":{source:"iana"},"application/vnd.oma.poc.optimized-progress-report+xml":{source:"iana"},"application/vnd.oma.push":{source:"iana"},"application/vnd.oma.scidm.messages+xml":{source:"iana"},"application/vnd.oma.xcap-directory+xml":{source:"iana"},"application/vnd.omads-email+xml":{source:"iana"},"application/vnd.omads-file+xml":{source:"iana"},"application/vnd.omads-folder+xml":{source:"iana"},"application/vnd.omaloc-supl-init":{source:"iana"},"application/vnd.onepager":{source:"iana"},"application/vnd.onepagertamp":{source:"iana"},"application/vnd.onepagertamx":{source:"iana"},"application/vnd.onepagertat":{source:"iana"},"application/vnd.onepagertatp":{source:"iana"},"application/vnd.onepagertatx":{source:"iana"},"application/vnd.openblox.game+xml":{source:"iana"},"application/vnd.openblox.game-binary":{source:"iana"},"application/vnd.openeye.oeb":{source:"iana"},"application/vnd.openofficeorg.extension":{source:"apache",extensions:["oxt"]},"application/vnd.openstreetmap.data+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.custom-properties+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.customxmlproperties+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawing+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.chart+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.extended-properties+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.comments+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{source:"iana",compressible:!1,extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slide":{source:"iana",extensions:["sldx"]},"application/vnd.openxmlformats-officedocument.presentationml.slide+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slideshow":{source:"iana",extensions:["ppsx"]},"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.tags+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.template":{source:"iana",extensions:["potx"]},"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{source:"iana",compressible:!1,extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.template":{source:"iana",extensions:["xltx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.theme+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.themeoverride+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.vmldrawing":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{source:"iana",compressible:!1,extensions:["docx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.template":{source:"iana",extensions:["dotx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml":{source:"iana"},"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml":{source:"iana"},"application/vnd.openxmlformats-package.core-properties+xml":{source:"iana"},"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml":{source:"iana"},"application/vnd.openxmlformats-package.relationships+xml":{source:"iana"},"application/vnd.oracle.resource+json":{source:"iana",compressible:!0},"application/vnd.orange.indata":{source:"iana"},"application/vnd.osa.netdeploy":{source:"iana"},"application/vnd.osgeo.mapguide.package":{source:"iana",extensions:["mgp"]},"application/vnd.osgi.bundle":{source:"iana"},"application/vnd.osgi.dp":{source:"iana",extensions:["dp"]},"application/vnd.osgi.subsystem":{source:"iana",extensions:["esa"]},"application/vnd.otps.ct-kip+xml":{source:"iana"},"application/vnd.oxli.countgraph":{source:"iana"},"application/vnd.pagerduty+json":{source:"iana",compressible:!0},"application/vnd.palm":{source:"iana",extensions:["pdb","pqa","oprc"]},"application/vnd.panoply":{source:"iana"},"application/vnd.paos+xml":{source:"iana"},"application/vnd.paos.xml":{source:"apache"},"application/vnd.patentdive":{source:"iana"},"application/vnd.pawaafile":{source:"iana",extensions:["paw"]},"application/vnd.pcos":{source:"iana"},"application/vnd.pg.format":{source:"iana",extensions:["str"]},"application/vnd.pg.osasli":{source:"iana",extensions:["ei6"]},"application/vnd.piaccess.application-licence":{source:"iana"},"application/vnd.picsel":{source:"iana",extensions:["efif"]},"application/vnd.pmi.widget":{source:"iana",extensions:["wg"]},"application/vnd.poc.group-advertisement+xml":{source:"iana"},"application/vnd.pocketlearn":{source:"iana",extensions:["plf"]},"application/vnd.powerbuilder6":{source:"iana",extensions:["pbd"]},"application/vnd.powerbuilder6-s":{source:"iana"},"application/vnd.powerbuilder7":{source:"iana"},"application/vnd.powerbuilder7-s":{source:"iana"},"application/vnd.powerbuilder75":{source:"iana"},"application/vnd.powerbuilder75-s":{source:"iana"},"application/vnd.preminet":{source:"iana"},"application/vnd.previewsystems.box":{source:"iana",extensions:["box"]},"application/vnd.proteus.magazine":{source:"iana",extensions:["mgz"]},"application/vnd.publishare-delta-tree":{source:"iana",extensions:["qps"]},"application/vnd.pvi.ptid1":{source:"iana",extensions:["ptid"]},"application/vnd.pwg-multiplexed":{source:"iana"},"application/vnd.pwg-xhtml-print+xml":{source:"iana"},"application/vnd.qualcomm.brew-app-res":{source:"iana"},"application/vnd.quarantainenet":{source:"iana"},"application/vnd.quark.quarkxpress":{source:"iana",extensions:["qxd","qxt","qwd","qwt","qxl","qxb"]},"application/vnd.quobject-quoxdocument":{source:"iana"},"application/vnd.radisys.moml+xml":{source:"iana"},"application/vnd.radisys.msml+xml":{source:"iana"},"application/vnd.radisys.msml-audit+xml":{source:"iana"},"application/vnd.radisys.msml-audit-conf+xml":{source:"iana"},"application/vnd.radisys.msml-audit-conn+xml":{source:"iana"},"application/vnd.radisys.msml-audit-dialog+xml":{source:"iana"},"application/vnd.radisys.msml-audit-stream+xml":{source:"iana"},"application/vnd.radisys.msml-conf+xml":{source:"iana"},"application/vnd.radisys.msml-dialog+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-base+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-fax-detect+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-fax-sendrecv+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-group+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-speech+xml":{source:"iana"},"application/vnd.radisys.msml-dialog-transform+xml":{source:"iana"},"application/vnd.rainstor.data":{source:"iana"},"application/vnd.rapid":{source:"iana"},"application/vnd.rar":{source:"iana"},"application/vnd.realvnc.bed":{source:"iana",extensions:["bed"]},"application/vnd.recordare.musicxml":{source:"iana",extensions:["mxl"]},"application/vnd.recordare.musicxml+xml":{source:"iana",extensions:["musicxml"]},"application/vnd.renlearn.rlprint":{source:"iana"},"application/vnd.restful+json":{source:"iana",compressible:!0},"application/vnd.rig.cryptonote":{source:"iana",extensions:["cryptonote"]},"application/vnd.rim.cod":{source:"apache",extensions:["cod"]},"application/vnd.rn-realmedia":{source:"apache",extensions:["rm"]},"application/vnd.rn-realmedia-vbr":{source:"apache",extensions:["rmvb"]},"application/vnd.route66.link66+xml":{source:"iana",extensions:["link66"]},"application/vnd.rs-274x":{source:"iana"},"application/vnd.ruckus.download":{source:"iana"},"application/vnd.s3sms":{source:"iana"},"application/vnd.sailingtracker.track":{source:"iana",extensions:["st"]},"application/vnd.sbm.cid":{source:"iana"},"application/vnd.sbm.mid2":{source:"iana"},"application/vnd.scribus":{source:"iana"},"application/vnd.sealed.3df":{source:"iana"},"application/vnd.sealed.csf":{source:"iana"},"application/vnd.sealed.doc":{source:"iana"},"application/vnd.sealed.eml":{source:"iana"},"application/vnd.sealed.mht":{source:"iana"},"application/vnd.sealed.net":{source:"iana"},"application/vnd.sealed.ppt":{source:"iana"},"application/vnd.sealed.tiff":{source:"iana"},"application/vnd.sealed.xls":{source:"iana"},"application/vnd.sealedmedia.softseal.html":{source:"iana"},"application/vnd.sealedmedia.softseal.pdf":{source:"iana"},"application/vnd.seemail":{source:"iana",extensions:["see"]},"application/vnd.sema":{source:"iana",extensions:["sema"]},"application/vnd.semd":{source:"iana",extensions:["semd"]},"application/vnd.semf":{source:"iana",extensions:["semf"]},"application/vnd.shana.informed.formdata":{source:"iana",extensions:["ifm"]},"application/vnd.shana.informed.formtemplate":{source:"iana",extensions:["itp"]},"application/vnd.shana.informed.interchange":{source:"iana",extensions:["iif"]},"application/vnd.shana.informed.package":{source:"iana",extensions:["ipk"]},"application/vnd.sigrok.session":{source:"iana"},"application/vnd.simtech-mindmapper":{source:"iana",extensions:["twd","twds"]},"application/vnd.siren+json":{source:"iana",compressible:!0},"application/vnd.smaf":{source:"iana",extensions:["mmf"]},"application/vnd.smart.notebook":{source:"iana"},"application/vnd.smart.teacher":{source:"iana",extensions:["teacher"]},"application/vnd.software602.filler.form+xml":{source:"iana"},"application/vnd.software602.filler.form-xml-zip":{source:"iana"},"application/vnd.solent.sdkm+xml":{source:"iana",extensions:["sdkm","sdkd"]},"application/vnd.spotfire.dxp":{source:"iana",extensions:["dxp"]},"application/vnd.spotfire.sfs":{source:"iana",extensions:["sfs"]},"application/vnd.sqlite3":{source:"iana"},"application/vnd.sss-cod":{source:"iana"},"application/vnd.sss-dtf":{source:"iana"},"application/vnd.sss-ntf":{source:"iana"},"application/vnd.stardivision.calc":{source:"apache",extensions:["sdc"]},"application/vnd.stardivision.draw":{source:"apache",extensions:["sda"]},"application/vnd.stardivision.impress":{source:"apache",extensions:["sdd"]},"application/vnd.stardivision.math":{source:"apache",extensions:["smf"]},"application/vnd.stardivision.writer":{source:"apache",extensions:["sdw","vor"]},"application/vnd.stardivision.writer-global":{source:"apache",extensions:["sgl"]},"application/vnd.stepmania.package":{source:"iana",extensions:["smzip"]},"application/vnd.stepmania.stepchart":{source:"iana",extensions:["sm"]},"application/vnd.street-stream":{source:"iana"},"application/vnd.sun.wadl+xml":{source:"iana",compressible:!0,extensions:["wadl"]},"application/vnd.sun.xml.calc":{source:"apache",extensions:["sxc"]},"application/vnd.sun.xml.calc.template":{source:"apache",extensions:["stc"]},"application/vnd.sun.xml.draw":{source:"apache",extensions:["sxd"]},"application/vnd.sun.xml.draw.template":{source:"apache",extensions:["std"]},"application/vnd.sun.xml.impress":{source:"apache",extensions:["sxi"]},"application/vnd.sun.xml.impress.template":{source:"apache",extensions:["sti"]},"application/vnd.sun.xml.math":{source:"apache",extensions:["sxm"]},"application/vnd.sun.xml.writer":{source:"apache",extensions:["sxw"]},"application/vnd.sun.xml.writer.global":{source:"apache",extensions:["sxg"]},"application/vnd.sun.xml.writer.template":{source:"apache",extensions:["stw"]},"application/vnd.sus-calendar":{source:"iana",extensions:["sus","susp"]},"application/vnd.svd":{source:"iana",extensions:["svd"]},"application/vnd.swiftview-ics":{source:"iana"},"application/vnd.symbian.install":{source:"apache",extensions:["sis","sisx"]},"application/vnd.syncml+xml":{source:"iana",extensions:["xsm"]},"application/vnd.syncml.dm+wbxml":{source:"iana",extensions:["bdm"]},"application/vnd.syncml.dm+xml":{source:"iana",extensions:["xdm"]},"application/vnd.syncml.dm.notification":{source:"iana"},"application/vnd.syncml.dmddf+wbxml":{source:"iana"},"application/vnd.syncml.dmddf+xml":{source:"iana"},"application/vnd.syncml.dmtnds+wbxml":{source:"iana"},"application/vnd.syncml.dmtnds+xml":{source:"iana"},"application/vnd.syncml.ds.notification":{source:"iana"},"application/vnd.tableschema+json":{source:"iana",compressible:!0},"application/vnd.tao.intent-module-archive":{source:"iana",extensions:["tao"]},"application/vnd.tcpdump.pcap":{source:"iana",extensions:["pcap","cap","dmp"]},"application/vnd.tmd.mediaflex.api+xml":{source:"iana"},"application/vnd.tml":{source:"iana"},"application/vnd.tmobile-livetv":{source:"iana",extensions:["tmo"]},"application/vnd.tri.onesource":{source:"iana"},"application/vnd.trid.tpt":{source:"iana",extensions:["tpt"]},"application/vnd.triscape.mxs":{source:"iana",extensions:["mxs"]},"application/vnd.trueapp":{source:"iana",extensions:["tra"]},"application/vnd.truedoc":{source:"iana"},"application/vnd.ubisoft.webplayer":{source:"iana"},"application/vnd.ufdl":{source:"iana",extensions:["ufd","ufdl"]},"application/vnd.uiq.theme":{source:"iana",extensions:["utz"]},"application/vnd.umajin":{source:"iana",extensions:["umj"]},"application/vnd.unity":{source:"iana",extensions:["unityweb"]},"application/vnd.uoml+xml":{source:"iana",extensions:["uoml"]},"application/vnd.uplanet.alert":{source:"iana"},"application/vnd.uplanet.alert-wbxml":{source:"iana"},"application/vnd.uplanet.bearer-choice":{source:"iana"},"application/vnd.uplanet.bearer-choice-wbxml":{source:"iana"},"application/vnd.uplanet.cacheop":{source:"iana"},"application/vnd.uplanet.cacheop-wbxml":{source:"iana"},"application/vnd.uplanet.channel":{source:"iana"},"application/vnd.uplanet.channel-wbxml":{source:"iana"},"application/vnd.uplanet.list":{source:"iana"},"application/vnd.uplanet.list-wbxml":{source:"iana"},"application/vnd.uplanet.listcmd":{source:"iana"},"application/vnd.uplanet.listcmd-wbxml":{source:"iana"},"application/vnd.uplanet.signal":{source:"iana"},"application/vnd.uri-map":{source:"iana"},"application/vnd.valve.source.material":{source:"iana"},"application/vnd.vcx":{source:"iana",extensions:["vcx"]},"application/vnd.vd-study":{source:"iana"},"application/vnd.vectorworks":{source:"iana"},"application/vnd.vel+json":{source:"iana",compressible:!0},"application/vnd.verimatrix.vcas":{source:"iana"},"application/vnd.vidsoft.vidconference":{source:"iana"},"application/vnd.visio":{source:"iana",extensions:["vsd","vst","vss","vsw"]},"application/vnd.visionary":{source:"iana",extensions:["vis"]},"application/vnd.vividence.scriptfile":{source:"iana"},"application/vnd.vsf":{source:"iana",extensions:["vsf"]},"application/vnd.wap.sic":{source:"iana"},"application/vnd.wap.slc":{source:"iana"},"application/vnd.wap.wbxml":{source:"iana",extensions:["wbxml"]},"application/vnd.wap.wmlc":{source:"iana",extensions:["wmlc"]},"application/vnd.wap.wmlscriptc":{source:"iana",extensions:["wmlsc"]},"application/vnd.webturbo":{source:"iana",extensions:["wtb"]},"application/vnd.wfa.p2p":{source:"iana"},"application/vnd.wfa.wsc":{source:"iana"},"application/vnd.windows.devicepairing":{source:"iana"},"application/vnd.wmc":{source:"iana"},"application/vnd.wmf.bootstrap":{source:"iana"},"application/vnd.wolfram.mathematica":{source:"iana"},"application/vnd.wolfram.mathematica.package":{source:"iana"},"application/vnd.wolfram.player":{source:"iana",extensions:["nbp"]},"application/vnd.wordperfect":{source:"iana",extensions:["wpd"]},"application/vnd.wqd":{source:"iana",extensions:["wqd"]},"application/vnd.wrq-hp3000-labelled":{source:"iana"},"application/vnd.wt.stf":{source:"iana",extensions:["stf"]},"application/vnd.wv.csp+wbxml":{source:"iana"},"application/vnd.wv.csp+xml":{source:"iana"},"application/vnd.wv.ssp+xml":{source:"iana"},"application/vnd.xacml+json":{source:"iana",compressible:!0},"application/vnd.xara":{source:"iana",extensions:["xar"]},"application/vnd.xfdl":{source:"iana",extensions:["xfdl"]},"application/vnd.xfdl.webform":{source:"iana"},"application/vnd.xmi+xml":{source:"iana"},"application/vnd.xmpie.cpkg":{source:"iana"},"application/vnd.xmpie.dpkg":{source:"iana"},"application/vnd.xmpie.plan":{source:"iana"},"application/vnd.xmpie.ppkg":{source:"iana"},"application/vnd.xmpie.xlim":{source:"iana"},"application/vnd.yamaha.hv-dic":{source:"iana",extensions:["hvd"]},"application/vnd.yamaha.hv-script":{source:"iana",extensions:["hvs"]},"application/vnd.yamaha.hv-voice":{source:"iana",extensions:["hvp"]},"application/vnd.yamaha.openscoreformat":{source:"iana",extensions:["osf"]},"application/vnd.yamaha.openscoreformat.osfpvg+xml":{source:"iana",extensions:["osfpvg"]},"application/vnd.yamaha.remote-setup":{source:"iana"},"application/vnd.yamaha.smaf-audio":{source:"iana",extensions:["saf"]},"application/vnd.yamaha.smaf-phrase":{source:"iana",extensions:["spf"]},"application/vnd.yamaha.through-ngn":{source:"iana"},"application/vnd.yamaha.tunnel-udpencap":{source:"iana"},"application/vnd.yaoweme":{source:"iana"},"application/vnd.yellowriver-custom-menu":{source:"iana",extensions:["cmp"]},"application/vnd.youtube.yt":{source:"iana"},"application/vnd.zul":{source:"iana",extensions:["zir","zirz"]},"application/vnd.zzazz.deck+xml":{source:"iana",extensions:["zaz"]},"application/voicexml+xml":{source:"iana",extensions:["vxml"]},"application/voucher-cms+json":{source:"iana",compressible:!0},"application/vq-rtcpxr":{source:"iana"},"application/wasm":{compressible:!0,extensions:["wasm"]},"application/watcherinfo+xml":{source:"iana"},"application/webpush-options+json":{source:"iana",compressible:!0},"application/whoispp-query":{source:"iana"},"application/whoispp-response":{source:"iana"},"application/widget":{source:"iana",extensions:["wgt"]},"application/winhlp":{source:"apache",extensions:["hlp"]},"application/wita":{source:"iana"},"application/wordperfect5.1":{source:"iana"},"application/wsdl+xml":{source:"iana",extensions:["wsdl"]},"application/wspolicy+xml":{source:"iana",extensions:["wspolicy"]},"application/x-7z-compressed":{source:"apache",compressible:!1,extensions:["7z"]},"application/x-abiword":{source:"apache",extensions:["abw"]},"application/x-ace-compressed":{source:"apache",extensions:["ace"]},"application/x-amf":{source:"apache"},"application/x-apple-diskimage":{source:"apache",extensions:["dmg"]},"application/x-arj":{compressible:!1,extensions:["arj"]},"application/x-authorware-bin":{source:"apache",extensions:["aab","x32","u32","vox"]},"application/x-authorware-map":{source:"apache",extensions:["aam"]},"application/x-authorware-seg":{source:"apache",extensions:["aas"]},"application/x-bcpio":{source:"apache",extensions:["bcpio"]},"application/x-bdoc":{compressible:!1,extensions:["bdoc"]},"application/x-bittorrent":{source:"apache",extensions:["torrent"]},"application/x-blorb":{source:"apache",extensions:["blb","blorb"]},"application/x-bzip":{source:"apache",compressible:!1,extensions:["bz"]},"application/x-bzip2":{source:"apache",compressible:!1,extensions:["bz2","boz"]},"application/x-cbr":{source:"apache",extensions:["cbr","cba","cbt","cbz","cb7"]},"application/x-cdlink":{source:"apache",extensions:["vcd"]},"application/x-cfs-compressed":{source:"apache",extensions:["cfs"]},"application/x-chat":{source:"apache",extensions:["chat"]},"application/x-chess-pgn":{source:"apache",extensions:["pgn"]},"application/x-chrome-extension":{extensions:["crx"]},"application/x-cocoa":{source:"nginx",extensions:["cco"]},"application/x-compress":{source:"apache"},"application/x-conference":{source:"apache",extensions:["nsc"]},"application/x-cpio":{source:"apache",extensions:["cpio"]},"application/x-csh":{source:"apache",extensions:["csh"]},"application/x-deb":{compressible:!1},"application/x-debian-package":{source:"apache",extensions:["deb","udeb"]},"application/x-dgc-compressed":{source:"apache",extensions:["dgc"]},"application/x-director":{source:"apache",extensions:["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"]},"application/x-doom":{source:"apache",extensions:["wad"]},"application/x-dtbncx+xml":{source:"apache",extensions:["ncx"]},"application/x-dtbook+xml":{source:"apache",extensions:["dtb"]},"application/x-dtbresource+xml":{source:"apache",extensions:["res"]},"application/x-dvi":{source:"apache",compressible:!1,extensions:["dvi"]},"application/x-envoy":{source:"apache",extensions:["evy"]},"application/x-eva":{source:"apache",extensions:["eva"]},"application/x-font-bdf":{source:"apache",extensions:["bdf"]},"application/x-font-dos":{source:"apache"},"application/x-font-framemaker":{source:"apache"},"application/x-font-ghostscript":{source:"apache",extensions:["gsf"]},"application/x-font-libgrx":{source:"apache"},"application/x-font-linux-psf":{source:"apache",extensions:["psf"]},"application/x-font-pcf":{source:"apache",extensions:["pcf"]},"application/x-font-snf":{source:"apache",extensions:["snf"]},"application/x-font-speedo":{source:"apache"},"application/x-font-sunos-news":{source:"apache"},"application/x-font-type1":{source:"apache",extensions:["pfa","pfb","pfm","afm"]},"application/x-font-vfont":{source:"apache"},"application/x-freearc":{source:"apache",extensions:["arc"]},"application/x-futuresplash":{source:"apache",extensions:["spl"]},"application/x-gca-compressed":{source:"apache",extensions:["gca"]},"application/x-glulx":{source:"apache",extensions:["ulx"]},"application/x-gnumeric":{source:"apache",extensions:["gnumeric"]},"application/x-gramps-xml":{source:"apache",extensions:["gramps"]},"application/x-gtar":{source:"apache",extensions:["gtar"]},"application/x-gzip":{source:"apache"},"application/x-hdf":{source:"apache",extensions:["hdf"]},"application/x-httpd-php":{compressible:!0,extensions:["php"]},"application/x-install-instructions":{source:"apache",extensions:["install"]},"application/x-iso9660-image":{source:"apache",extensions:["iso"]},"application/x-java-archive-diff":{source:"nginx",extensions:["jardiff"]},"application/x-java-jnlp-file":{source:"apache",compressible:!1,extensions:["jnlp"]},"application/x-javascript":{compressible:!0},"application/x-latex":{source:"apache",compressible:!1,extensions:["latex"]},"application/x-lua-bytecode":{extensions:["luac"]},"application/x-lzh-compressed":{source:"apache",extensions:["lzh","lha"]},"application/x-makeself":{source:"nginx",extensions:["run"]},"application/x-mie":{source:"apache",extensions:["mie"]},"application/x-mobipocket-ebook":{source:"apache",extensions:["prc","mobi"]},"application/x-mpegurl":{compressible:!1},"application/x-ms-application":{source:"apache",extensions:["application"]},"application/x-ms-shortcut":{source:"apache",extensions:["lnk"]},"application/x-ms-wmd":{source:"apache",extensions:["wmd"]},"application/x-ms-wmz":{source:"apache",extensions:["wmz"]},"application/x-ms-xbap":{source:"apache",extensions:["xbap"]},"application/x-msaccess":{source:"apache",extensions:["mdb"]},"application/x-msbinder":{source:"apache",extensions:["obd"]},"application/x-mscardfile":{source:"apache",extensions:["crd"]},"application/x-msclip":{source:"apache",extensions:["clp"]},"application/x-msdos-program":{extensions:["exe"]},"application/x-msdownload":{source:"apache",extensions:["exe","dll","com","bat","msi"]},"application/x-msmediaview":{source:"apache",extensions:["mvb","m13","m14"]},"application/x-msmetafile":{source:"apache",extensions:["wmf","wmz","emf","emz"]},"application/x-msmoney":{source:"apache",extensions:["mny"]},"application/x-mspublisher":{source:"apache",extensions:["pub"]},"application/x-msschedule":{source:"apache",extensions:["scd"]},"application/x-msterminal":{source:"apache",extensions:["trm"]},"application/x-mswrite":{source:"apache",extensions:["wri"]},"application/x-netcdf":{source:"apache",extensions:["nc","cdf"]},"application/x-ns-proxy-autoconfig":{compressible:!0,extensions:["pac"]},"application/x-nzb":{source:"apache",extensions:["nzb"]},"application/x-perl":{source:"nginx",extensions:["pl","pm"]},"application/x-pilot":{source:"nginx",extensions:["prc","pdb"]},"application/x-pkcs12":{source:"apache",compressible:!1,extensions:["p12","pfx"]},"application/x-pkcs7-certificates":{source:"apache",extensions:["p7b","spc"]},"application/x-pkcs7-certreqresp":{source:"apache",extensions:["p7r"]},"application/x-rar-compressed":{source:"apache",compressible:!1,extensions:["rar"]},"application/x-redhat-package-manager":{source:"nginx",extensions:["rpm"]},"application/x-research-info-systems":{source:"apache",extensions:["ris"]},"application/x-sea":{source:"nginx",extensions:["sea"]},"application/x-sh":{source:"apache",compressible:!0,extensions:["sh"]},"application/x-shar":{source:"apache",extensions:["shar"]},"application/x-shockwave-flash":{source:"apache",compressible:!1,extensions:["swf"]},"application/x-silverlight-app":{source:"apache",extensions:["xap"]},"application/x-sql":{source:"apache",extensions:["sql"]},"application/x-stuffit":{source:"apache",compressible:!1,extensions:["sit"]},"application/x-stuffitx":{source:"apache",extensions:["sitx"]},"application/x-subrip":{source:"apache",extensions:["srt"]},"application/x-sv4cpio":{source:"apache",extensions:["sv4cpio"]},"application/x-sv4crc":{source:"apache",extensions:["sv4crc"]},"application/x-t3vm-image":{source:"apache",extensions:["t3"]},"application/x-tads":{source:"apache",extensions:["gam"]},"application/x-tar":{source:"apache",compressible:!0,extensions:["tar"]},"application/x-tcl":{source:"apache",extensions:["tcl","tk"]},"application/x-tex":{source:"apache",extensions:["tex"]},"application/x-tex-tfm":{source:"apache",extensions:["tfm"]},"application/x-texinfo":{source:"apache",extensions:["texinfo","texi"]},"application/x-tgif":{source:"apache",extensions:["obj"]},"application/x-ustar":{source:"apache",extensions:["ustar"]},"application/x-virtualbox-hdd":{compressible:!0,extensions:["hdd"]},"application/x-virtualbox-ova":{compressible:!0,extensions:["ova"]},"application/x-virtualbox-ovf":{compressible:!0,extensions:["ovf"]},"application/x-virtualbox-vbox":{compressible:!0,extensions:["vbox"]},"application/x-virtualbox-vbox-extpack":{compressible:!1,extensions:["vbox-extpack"]},"application/x-virtualbox-vdi":{compressible:!0,extensions:["vdi"]},"application/x-virtualbox-vhd":{compressible:!0,extensions:["vhd"]},"application/x-virtualbox-vmdk":{compressible:!0,extensions:["vmdk"]},"application/x-wais-source":{source:"apache",extensions:["src"]},"application/x-web-app-manifest+json":{compressible:!0,extensions:["webapp"]},"application/x-www-form-urlencoded":{source:"iana",compressible:!0},"application/x-x509-ca-cert":{source:"apache",extensions:["der","crt","pem"]},"application/x-xfig":{source:"apache",extensions:["fig"]},"application/x-xliff+xml":{source:"apache",extensions:["xlf"]},"application/x-xpinstall":{source:"apache",compressible:!1,extensions:["xpi"]},"application/x-xz":{source:"apache",extensions:["xz"]},"application/x-zmachine":{source:"apache",extensions:["z1","z2","z3","z4","z5","z6","z7","z8"]},"application/x400-bp":{source:"iana"},"application/xacml+xml":{source:"iana"},"application/xaml+xml":{source:"apache",extensions:["xaml"]},"application/xcap-att+xml":{source:"iana"},"application/xcap-caps+xml":{source:"iana"},"application/xcap-diff+xml":{source:"iana",extensions:["xdf"]},"application/xcap-el+xml":{source:"iana"},"application/xcap-error+xml":{source:"iana"},"application/xcap-ns+xml":{source:"iana"},"application/xcon-conference-info+xml":{source:"iana"},"application/xcon-conference-info-diff+xml":{source:"iana"},"application/xenc+xml":{source:"iana",extensions:["xenc"]},"application/xhtml+xml":{source:"iana",compressible:!0,extensions:["xhtml","xht"]},"application/xhtml-voice+xml":{source:"apache"},"application/xml":{source:"iana",compressible:!0,extensions:["xml","xsl","xsd","rng"]},"application/xml-dtd":{source:"iana",compressible:!0,extensions:["dtd"]},"application/xml-external-parsed-entity":{source:"iana"},"application/xml-patch+xml":{source:"iana"},"application/xmpp+xml":{source:"iana"},"application/xop+xml":{source:"iana",compressible:!0,extensions:["xop"]},"application/xproc+xml":{source:"apache",extensions:["xpl"]},"application/xslt+xml":{source:"iana",extensions:["xslt"]},"application/xspf+xml":{source:"apache",extensions:["xspf"]},"application/xv+xml":{source:"iana",extensions:["mxml","xhvml","xvml","xvm"]},"application/yang":{source:"iana",extensions:["yang"]},"application/yang-data+json":{source:"iana",compressible:!0},"application/yang-data+xml":{source:"iana"},"application/yang-patch+json":{source:"iana",compressible:!0},"application/yang-patch+xml":{source:"iana"},"application/yin+xml":{source:"iana",extensions:["yin"]},"application/zip":{source:"iana",compressible:!1,extensions:["zip"]},"application/zlib":{source:"iana"},"audio/1d-interleaved-parityfec":{source:"iana"},"audio/32kadpcm":{source:"iana"},"audio/3gpp":{source:"iana",compressible:!1,extensions:["3gpp"]},"audio/3gpp2":{source:"iana"},"audio/ac3":{source:"iana"},"audio/adpcm":{source:"apache",extensions:["adp"]},"audio/amr":{source:"iana"},"audio/amr-wb":{source:"iana"},"audio/amr-wb+":{source:"iana"},"audio/aptx":{source:"iana"},"audio/asc":{source:"iana"},"audio/atrac-advanced-lossless":{source:"iana"},"audio/atrac-x":{source:"iana"},"audio/atrac3":{source:"iana"},"audio/basic":{source:"iana",compressible:!1,extensions:["au","snd"]},"audio/bv16":{source:"iana"},"audio/bv32":{source:"iana"},"audio/clearmode":{source:"iana"},"audio/cn":{source:"iana"},"audio/dat12":{source:"iana"},"audio/dls":{source:"iana"},"audio/dsr-es201108":{source:"iana"},"audio/dsr-es202050":{source:"iana"},"audio/dsr-es202211":{source:"iana"},"audio/dsr-es202212":{source:"iana"},"audio/dv":{source:"iana"},"audio/dvi4":{source:"iana"},"audio/eac3":{source:"iana"},"audio/encaprtp":{source:"iana"},"audio/evrc":{source:"iana"},"audio/evrc-qcp":{source:"iana"},"audio/evrc0":{source:"iana"},"audio/evrc1":{source:"iana"},"audio/evrcb":{source:"iana"},"audio/evrcb0":{source:"iana"},"audio/evrcb1":{source:"iana"},"audio/evrcnw":{source:"iana"},"audio/evrcnw0":{source:"iana"},"audio/evrcnw1":{source:"iana"},"audio/evrcwb":{source:"iana"},"audio/evrcwb0":{source:"iana"},"audio/evrcwb1":{source:"iana"},"audio/evs":{source:"iana"},"audio/fwdred":{source:"iana"},"audio/g711-0":{source:"iana"},"audio/g719":{source:"iana"},"audio/g722":{source:"iana"},"audio/g7221":{source:"iana"},"audio/g723":{source:"iana"},"audio/g726-16":{source:"iana"},"audio/g726-24":{source:"iana"},"audio/g726-32":{source:"iana"},"audio/g726-40":{source:"iana"},"audio/g728":{source:"iana"},"audio/g729":{source:"iana"},"audio/g7291":{source:"iana"},"audio/g729d":{source:"iana"},"audio/g729e":{source:"iana"},"audio/gsm":{source:"iana"},"audio/gsm-efr":{source:"iana"},"audio/gsm-hr-08":{source:"iana"},"audio/ilbc":{source:"iana"},"audio/ip-mr_v2.5":{source:"iana"},"audio/isac":{source:"apache"},"audio/l16":{source:"iana"},"audio/l20":{source:"iana"},"audio/l24":{source:"iana",compressible:!1},"audio/l8":{source:"iana"},"audio/lpc":{source:"iana"},"audio/melp":{source:"iana"},"audio/melp1200":{source:"iana"},"audio/melp2400":{source:"iana"},"audio/melp600":{source:"iana"},"audio/midi":{source:"apache",extensions:["mid","midi","kar","rmi"]},"audio/mobile-xmf":{source:"iana"},"audio/mp3":{compressible:!1,extensions:["mp3"]},"audio/mp4":{source:"iana",compressible:!1,extensions:["m4a","mp4a"]},"audio/mp4a-latm":{source:"iana"},"audio/mpa":{source:"iana"},"audio/mpa-robust":{source:"iana"},"audio/mpeg":{source:"iana",compressible:!1,extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/mpeg4-generic":{source:"iana"},"audio/musepack":{source:"apache"},"audio/ogg":{source:"iana",compressible:!1,extensions:["oga","ogg","spx"]},"audio/opus":{source:"iana"},"audio/parityfec":{source:"iana"},"audio/pcma":{source:"iana"},"audio/pcma-wb":{source:"iana"},"audio/pcmu":{source:"iana"},"audio/pcmu-wb":{source:"iana"},"audio/prs.sid":{source:"iana"},"audio/qcelp":{source:"iana"},"audio/raptorfec":{source:"iana"},"audio/red":{source:"iana"},"audio/rtp-enc-aescm128":{source:"iana"},"audio/rtp-midi":{source:"iana"},"audio/rtploopback":{source:"iana"},"audio/rtx":{source:"iana"},"audio/s3m":{source:"apache",extensions:["s3m"]},"audio/silk":{source:"apache",extensions:["sil"]},"audio/smv":{source:"iana"},"audio/smv-qcp":{source:"iana"},"audio/smv0":{source:"iana"},"audio/sp-midi":{source:"iana"},"audio/speex":{source:"iana"},"audio/t140c":{source:"iana"},"audio/t38":{source:"iana"},"audio/telephone-event":{source:"iana"},"audio/tone":{source:"iana"},"audio/uemclip":{source:"iana"},"audio/ulpfec":{source:"iana"},"audio/vdvi":{source:"iana"},"audio/vmr-wb":{source:"iana"},"audio/vnd.3gpp.iufp":{source:"iana"},"audio/vnd.4sb":{source:"iana"},"audio/vnd.audiokoz":{source:"iana"},"audio/vnd.celp":{source:"iana"},"audio/vnd.cisco.nse":{source:"iana"},"audio/vnd.cmles.radio-events":{source:"iana"},"audio/vnd.cns.anp1":{source:"iana"},"audio/vnd.cns.inf1":{source:"iana"},"audio/vnd.dece.audio":{source:"iana",extensions:["uva","uvva"]},"audio/vnd.digital-winds":{source:"iana",extensions:["eol"]},"audio/vnd.dlna.adts":{source:"iana"},"audio/vnd.dolby.heaac.1":{source:"iana"},"audio/vnd.dolby.heaac.2":{source:"iana"},"audio/vnd.dolby.mlp":{source:"iana"},"audio/vnd.dolby.mps":{source:"iana"},"audio/vnd.dolby.pl2":{source:"iana"},"audio/vnd.dolby.pl2x":{source:"iana"},"audio/vnd.dolby.pl2z":{source:"iana"},"audio/vnd.dolby.pulse.1":{source:"iana"},"audio/vnd.dra":{source:"iana",extensions:["dra"]},"audio/vnd.dts":{source:"iana",extensions:["dts"]},"audio/vnd.dts.hd":{source:"iana",extensions:["dtshd"]},"audio/vnd.dvb.file":{source:"iana"},"audio/vnd.everad.plj":{source:"iana"},"audio/vnd.hns.audio":{source:"iana"},"audio/vnd.lucent.voice":{source:"iana",extensions:["lvp"]},"audio/vnd.ms-playready.media.pya":{source:"iana",extensions:["pya"]},"audio/vnd.nokia.mobile-xmf":{source:"iana"},"audio/vnd.nortel.vbk":{source:"iana"},"audio/vnd.nuera.ecelp4800":{source:"iana",extensions:["ecelp4800"]},"audio/vnd.nuera.ecelp7470":{source:"iana",extensions:["ecelp7470"]},"audio/vnd.nuera.ecelp9600":{source:"iana",extensions:["ecelp9600"]},"audio/vnd.octel.sbc":{source:"iana"},"audio/vnd.presonus.multitrack":{source:"iana"},"audio/vnd.qcelp":{source:"iana"},"audio/vnd.rhetorex.32kadpcm":{source:"iana"},"audio/vnd.rip":{source:"iana",extensions:["rip"]},"audio/vnd.rn-realaudio":{compressible:!1},"audio/vnd.sealedmedia.softseal.mpeg":{source:"iana"},"audio/vnd.vmx.cvsd":{source:"iana"},"audio/vnd.wave":{compressible:!1},"audio/vorbis":{source:"iana",compressible:!1},"audio/vorbis-config":{source:"iana"},"audio/wav":{compressible:!1,extensions:["wav"]},"audio/wave":{compressible:!1,extensions:["wav"]},"audio/webm":{source:"apache",compressible:!1,extensions:["weba"]},"audio/x-aac":{source:"apache",compressible:!1,extensions:["aac"]},"audio/x-aiff":{source:"apache",extensions:["aif","aiff","aifc"]},"audio/x-caf":{source:"apache",compressible:!1,extensions:["caf"]},"audio/x-flac":{source:"apache",extensions:["flac"]},"audio/x-m4a":{source:"nginx",extensions:["m4a"]},"audio/x-matroska":{source:"apache",extensions:["mka"]},"audio/x-mpegurl":{source:"apache",extensions:["m3u"]},"audio/x-ms-wax":{source:"apache",extensions:["wax"]},"audio/x-ms-wma":{source:"apache",extensions:["wma"]},"audio/x-pn-realaudio":{source:"apache",extensions:["ram","ra"]},"audio/x-pn-realaudio-plugin":{source:"apache",extensions:["rmp"]},"audio/x-realaudio":{source:"nginx",extensions:["ra"]},"audio/x-tta":{source:"apache"},"audio/x-wav":{source:"apache",extensions:["wav"]},"audio/xm":{source:"apache",extensions:["xm"]},"chemical/x-cdx":{source:"apache",extensions:["cdx"]},"chemical/x-cif":{source:"apache",extensions:["cif"]},"chemical/x-cmdf":{source:"apache",extensions:["cmdf"]},"chemical/x-cml":{source:"apache",extensions:["cml"]},"chemical/x-csml":{source:"apache",extensions:["csml"]},"chemical/x-pdb":{source:"apache"},"chemical/x-xyz":{source:"apache",extensions:["xyz"]},"font/collection":{source:"iana",extensions:["ttc"]},"font/otf":{source:"iana",compressible:!0,extensions:["otf"]},"font/sfnt":{source:"iana"},"font/ttf":{source:"iana",extensions:["ttf"]},"font/woff":{source:"iana",extensions:["woff"]},"font/woff2":{source:"iana",extensions:["woff2"]},"image/aces":{source:"iana"},"image/apng":{compressible:!1,extensions:["apng"]},"image/bmp":{source:"iana",compressible:!0,extensions:["bmp"]},"image/cgm":{source:"iana",extensions:["cgm"]},"image/dicom-rle":{source:"iana"},"image/emf":{source:"iana"},"image/fits":{source:"iana"},"image/g3fax":{source:"iana",extensions:["g3"]},"image/gif":{source:"iana",compressible:!1,extensions:["gif"]},"image/ief":{source:"iana",extensions:["ief"]},"image/jls":{source:"iana"},"image/jp2":{source:"iana",compressible:!1,extensions:["jp2","jpg2"]},"image/jpeg":{source:"iana",compressible:!1,extensions:["jpeg","jpg","jpe"]},"image/jpm":{source:"iana",compressible:!1,extensions:["jpm"]},"image/jpx":{source:"iana",compressible:!1,extensions:["jpx","jpf"]},"image/ktx":{source:"iana",extensions:["ktx"]},"image/naplps":{source:"iana"},"image/pjpeg":{compressible:!1},"image/png":{source:"iana",compressible:!1,extensions:["png"]},"image/prs.btif":{source:"iana",extensions:["btif"]},"image/prs.pti":{source:"iana"},"image/pwg-raster":{source:"iana"},"image/sgi":{source:"apache",extensions:["sgi"]},"image/svg+xml":{source:"iana",compressible:!0,extensions:["svg","svgz"]},"image/t38":{source:"iana"},"image/tiff":{source:"iana",compressible:!1,extensions:["tiff","tif"]},"image/tiff-fx":{source:"iana"},"image/vnd.adobe.photoshop":{source:"iana",compressible:!0,extensions:["psd"]},"image/vnd.airzip.accelerator.azv":{source:"iana"},"image/vnd.cns.inf2":{source:"iana"},"image/vnd.dece.graphic":{source:"iana",extensions:["uvi","uvvi","uvg","uvvg"]},"image/vnd.djvu":{source:"iana",extensions:["djvu","djv"]},"image/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"image/vnd.dwg":{source:"iana",extensions:["dwg"]},"image/vnd.dxf":{source:"iana",extensions:["dxf"]},"image/vnd.fastbidsheet":{source:"iana",extensions:["fbs"]},"image/vnd.fpx":{source:"iana",extensions:["fpx"]},"image/vnd.fst":{source:"iana",extensions:["fst"]},"image/vnd.fujixerox.edmics-mmr":{source:"iana",extensions:["mmr"]},"image/vnd.fujixerox.edmics-rlc":{source:"iana",extensions:["rlc"]},"image/vnd.globalgraphics.pgb":{source:"iana"},"image/vnd.microsoft.icon":{source:"iana"},"image/vnd.mix":{source:"iana"},"image/vnd.mozilla.apng":{source:"iana"},"image/vnd.ms-modi":{source:"iana",extensions:["mdi"]},"image/vnd.ms-photo":{source:"apache",extensions:["wdp"]},"image/vnd.net-fpx":{source:"iana",extensions:["npx"]},"image/vnd.radiance":{source:"iana"},"image/vnd.sealed.png":{source:"iana"},"image/vnd.sealedmedia.softseal.gif":{source:"iana"},"image/vnd.sealedmedia.softseal.jpg":{source:"iana"},"image/vnd.svf":{source:"iana"},"image/vnd.tencent.tap":{source:"iana"},"image/vnd.valve.source.texture":{source:"iana"},"image/vnd.wap.wbmp":{source:"iana",extensions:["wbmp"]},"image/vnd.xiff":{source:"iana",extensions:["xif"]},"image/vnd.zbrush.pcx":{source:"iana"},"image/webp":{source:"apache",extensions:["webp"]},"image/wmf":{source:"iana"},"image/x-3ds":{source:"apache",extensions:["3ds"]},"image/x-cmu-raster":{source:"apache",extensions:["ras"]},"image/x-cmx":{source:"apache",extensions:["cmx"]},"image/x-freehand":{source:"apache",extensions:["fh","fhc","fh4","fh5","fh7"]},"image/x-icon":{source:"apache",compressible:!0,extensions:["ico"]},"image/x-jng":{source:"nginx",extensions:["jng"]},"image/x-mrsid-image":{source:"apache",extensions:["sid"]},"image/x-ms-bmp":{source:"nginx",compressible:!0,extensions:["bmp"]},"image/x-pcx":{source:"apache",extensions:["pcx"]},"image/x-pict":{source:"apache",extensions:["pic","pct"]},"image/x-portable-anymap":{source:"apache",extensions:["pnm"]},"image/x-portable-bitmap":{source:"apache",extensions:["pbm"]},"image/x-portable-graymap":{source:"apache",extensions:["pgm"]},"image/x-portable-pixmap":{source:"apache",extensions:["ppm"]},"image/x-rgb":{source:"apache",extensions:["rgb"]},"image/x-tga":{source:"apache",extensions:["tga"]},"image/x-xbitmap":{source:"apache",extensions:["xbm"]},"image/x-xcf":{compressible:!1},"image/x-xpixmap":{source:"apache",extensions:["xpm"]},"image/x-xwindowdump":{source:"apache",extensions:["xwd"]},"message/cpim":{source:"iana"},"message/delivery-status":{source:"iana"},"message/disposition-notification":{source:"iana",extensions:["disposition-notification"]},"message/external-body":{source:"iana"},"message/feedback-report":{source:"iana"},"message/global":{source:"iana",extensions:["u8msg"]},"message/global-delivery-status":{source:"iana",extensions:["u8dsn"]},"message/global-disposition-notification":{source:"iana",extensions:["u8mdn"]},"message/global-headers":{source:"iana",extensions:["u8hdr"]},"message/http":{source:"iana",compressible:!1},"message/imdn+xml":{source:"iana",compressible:!0},"message/news":{source:"iana"},"message/partial":{source:"iana",compressible:!1},"message/rfc822":{source:"iana",compressible:!0,extensions:["eml","mime"]},"message/s-http":{source:"iana"},"message/sip":{source:"iana"},"message/sipfrag":{source:"iana"},"message/tracking-status":{source:"iana"},"message/vnd.si.simp":{source:"iana"},"message/vnd.wfa.wsc":{source:"iana",extensions:["wsc"]},"model/3mf":{source:"iana"},"model/gltf+json":{source:"iana",compressible:!0,extensions:["gltf"]},"model/gltf-binary":{source:"iana",compressible:!0,extensions:["glb"]},"model/iges":{source:"iana",compressible:!1,extensions:["igs","iges"]},"model/mesh":{source:"iana",compressible:!1,extensions:["msh","mesh","silo"]},"model/vnd.collada+xml":{source:"iana",extensions:["dae"]},"model/vnd.dwf":{source:"iana",extensions:["dwf"]},"model/vnd.flatland.3dml":{source:"iana"},"model/vnd.gdl":{source:"iana",extensions:["gdl"]},"model/vnd.gs-gdl":{source:"apache"},"model/vnd.gs.gdl":{source:"iana"},"model/vnd.gtw":{source:"iana",extensions:["gtw"]},"model/vnd.moml+xml":{source:"iana"},"model/vnd.mts":{source:"iana",extensions:["mts"]},"model/vnd.opengex":{source:"iana"},"model/vnd.parasolid.transmit.binary":{source:"iana"},"model/vnd.parasolid.transmit.text":{source:"iana"},"model/vnd.rosette.annotated-data-model":{source:"iana"},"model/vnd.valve.source.compiled-map":{source:"iana"},"model/vnd.vtu":{source:"iana",extensions:["vtu"]},"model/vrml":{source:"iana",compressible:!1,extensions:["wrl","vrml"]},"model/x3d+binary":{source:"apache",compressible:!1,extensions:["x3db","x3dbz"]},"model/x3d+fastinfoset":{source:"iana"},"model/x3d+vrml":{source:"apache",compressible:!1,extensions:["x3dv","x3dvz"]},"model/x3d+xml":{source:"iana",compressible:!0,extensions:["x3d","x3dz"]},"model/x3d-vrml":{source:"iana"},"multipart/alternative":{source:"iana",compressible:!1},"multipart/appledouble":{source:"iana"},"multipart/byteranges":{source:"iana"},"multipart/digest":{source:"iana"},"multipart/encrypted":{source:"iana",compressible:!1},"multipart/form-data":{source:"iana",compressible:!1},"multipart/header-set":{source:"iana"},"multipart/mixed":{source:"iana",compressible:!1},"multipart/multilingual":{source:"iana"},"multipart/parallel":{source:"iana"},"multipart/related":{source:"iana",compressible:!1},"multipart/report":{source:"iana"},"multipart/signed":{source:"iana",compressible:!1},"multipart/vnd.bint.med-plus":{source:"iana"},"multipart/voice-message":{source:"iana"},"multipart/x-mixed-replace":{source:"iana"},"text/1d-interleaved-parityfec":{source:"iana"},"text/cache-manifest":{source:"iana",compressible:!0,extensions:["appcache","manifest"]},"text/calendar":{source:"iana",extensions:["ics","ifb"]},"text/calender":{compressible:!0},"text/cmd":{compressible:!0},"text/coffeescript":{extensions:["coffee","litcoffee"]},"text/css":{source:"iana",charset:"UTF-8",compressible:!0,extensions:["css"]},"text/csv":{source:"iana",compressible:!0,extensions:["csv"]},"text/csv-schema":{source:"iana"},"text/directory":{source:"iana"},"text/dns":{source:"iana"},"text/ecmascript":{source:"iana"},"text/encaprtp":{source:"iana"},"text/enriched":{source:"iana"},"text/fwdred":{source:"iana"},"text/grammar-ref-list":{source:"iana"},"text/html":{source:"iana",compressible:!0,extensions:["html","htm","shtml"]},"text/jade":{extensions:["jade"]},"text/javascript":{source:"iana",compressible:!0},"text/jcr-cnd":{source:"iana"},"text/jsx":{compressible:!0,extensions:["jsx"]},"text/less":{extensions:["less"]},"text/markdown":{source:"iana",compressible:!0,extensions:["markdown","md"]},"text/mathml":{source:"nginx",extensions:["mml"]},"text/mizar":{source:"iana"},"text/n3":{source:"iana",compressible:!0,extensions:["n3"]},"text/parameters":{source:"iana"},"text/parityfec":{source:"iana"},"text/plain":{source:"iana",compressible:!0,extensions:["txt","text","conf","def","list","log","in","ini"]},"text/provenance-notation":{source:"iana"},"text/prs.fallenstein.rst":{source:"iana"},"text/prs.lines.tag":{source:"iana",extensions:["dsc"]},"text/prs.prop.logic":{source:"iana"},"text/raptorfec":{source:"iana"},"text/red":{source:"iana"},"text/rfc822-headers":{source:"iana"},"text/richtext":{source:"iana",compressible:!0,extensions:["rtx"]},"text/rtf":{source:"iana",compressible:!0,extensions:["rtf"]},"text/rtp-enc-aescm128":{source:"iana"},"text/rtploopback":{source:"iana"},"text/rtx":{source:"iana"},"text/sgml":{source:"iana",extensions:["sgml","sgm"]},"text/shex":{extensions:["shex"]},"text/slim":{extensions:["slim","slm"]},"text/strings":{source:"iana"},"text/stylus":{extensions:["stylus","styl"]},"text/t140":{source:"iana"},"text/tab-separated-values":{source:"iana",compressible:!0,extensions:["tsv"]},"text/troff":{source:"iana",extensions:["t","tr","roff","man","me","ms"]},"text/turtle":{source:"iana",extensions:["ttl"]},"text/ulpfec":{source:"iana"},"text/uri-list":{source:"iana",compressible:!0,extensions:["uri","uris","urls"]},"text/vcard":{source:"iana",compressible:!0,extensions:["vcard"]},"text/vnd.a":{source:"iana"},"text/vnd.abc":{source:"iana"},"text/vnd.ascii-art":{source:"iana"},"text/vnd.curl":{source:"iana",extensions:["curl"]},"text/vnd.curl.dcurl":{source:"apache",extensions:["dcurl"]},"text/vnd.curl.mcurl":{source:"apache",extensions:["mcurl"]},"text/vnd.curl.scurl":{source:"apache",extensions:["scurl"]},"text/vnd.debian.copyright":{source:"iana"},"text/vnd.dmclientscript":{source:"iana"},"text/vnd.dvb.subtitle":{source:"iana",extensions:["sub"]},"text/vnd.esmertec.theme-descriptor":{source:"iana"},"text/vnd.fly":{source:"iana",extensions:["fly"]},"text/vnd.fmi.flexstor":{source:"iana",extensions:["flx"]},"text/vnd.graphviz":{source:"iana",extensions:["gv"]},"text/vnd.in3d.3dml":{source:"iana",extensions:["3dml"]},"text/vnd.in3d.spot":{source:"iana",extensions:["spot"]},"text/vnd.iptc.newsml":{source:"iana"},"text/vnd.iptc.nitf":{source:"iana"},"text/vnd.latex-z":{source:"iana"},"text/vnd.motorola.reflex":{source:"iana"},"text/vnd.ms-mediapackage":{source:"iana"},"text/vnd.net2phone.commcenter.command":{source:"iana"},"text/vnd.radisys.msml-basic-layout":{source:"iana"},"text/vnd.si.uricatalogue":{source:"iana"},"text/vnd.sun.j2me.app-descriptor":{source:"iana",extensions:["jad"]},"text/vnd.trolltech.linguist":{source:"iana"},"text/vnd.wap.si":{source:"iana"},"text/vnd.wap.sl":{source:"iana"},"text/vnd.wap.wml":{source:"iana",extensions:["wml"]},"text/vnd.wap.wmlscript":{source:"iana",extensions:["wmls"]},"text/vtt":{charset:"UTF-8",compressible:!0,extensions:["vtt"]},"text/x-asm":{source:"apache",extensions:["s","asm"]},"text/x-c":{source:"apache",extensions:["c","cc","cxx","cpp","h","hh","dic"]},"text/x-component":{source:"nginx",extensions:["htc"]},"text/x-fortran":{source:"apache",extensions:["f","for","f77","f90"]},"text/x-gwt-rpc":{compressible:!0},"text/x-handlebars-template":{extensions:["hbs"]},"text/x-java-source":{source:"apache",extensions:["java"]},"text/x-jquery-tmpl":{compressible:!0},"text/x-lua":{extensions:["lua"]},"text/x-markdown":{compressible:!0,extensions:["mkd"]},"text/x-nfo":{source:"apache",extensions:["nfo"]},"text/x-opml":{source:"apache",extensions:["opml"]},"text/x-org":{compressible:!0,extensions:["org"]},"text/x-pascal":{source:"apache",extensions:["p","pas"]},"text/x-processing":{compressible:!0,extensions:["pde"]},"text/x-sass":{extensions:["sass"]},"text/x-scss":{extensions:["scss"]},"text/x-setext":{source:"apache",extensions:["etx"]},"text/x-sfv":{source:"apache",extensions:["sfv"]},"text/x-suse-ymp":{compressible:!0,extensions:["ymp"]},"text/x-uuencode":{source:"apache",extensions:["uu"]},"text/x-vcalendar":{source:"apache",extensions:["vcs"]},"text/x-vcard":{source:"apache",extensions:["vcf"]},"text/xml":{source:"iana",compressible:!0,extensions:["xml"]},"text/xml-external-parsed-entity":{source:"iana"},"text/yaml":{extensions:["yaml","yml"]},"video/1d-interleaved-parityfec":{source:"iana"},"video/3gpp":{source:"iana",extensions:["3gp","3gpp"]},"video/3gpp-tt":{source:"iana"},"video/3gpp2":{source:"iana",extensions:["3g2"]},"video/bmpeg":{source:"iana"},"video/bt656":{source:"iana"},"video/celb":{source:"iana"},"video/dv":{source:"iana"},"video/encaprtp":{source:"iana"},"video/h261":{source:"iana",extensions:["h261"]},"video/h263":{source:"iana",extensions:["h263"]},"video/h263-1998":{source:"iana"},"video/h263-2000":{source:"iana"},"video/h264":{source:"iana",extensions:["h264"]},"video/h264-rcdo":{source:"iana"},"video/h264-svc":{source:"iana"},"video/h265":{source:"iana"},"video/iso.segment":{source:"iana"},"video/jpeg":{source:"iana",extensions:["jpgv"]},"video/jpeg2000":{source:"iana"},"video/jpm":{source:"apache",extensions:["jpm","jpgm"]},"video/mj2":{source:"iana",extensions:["mj2","mjp2"]},"video/mp1s":{source:"iana"},"video/mp2p":{source:"iana"},"video/mp2t":{source:"iana",extensions:["ts"]},"video/mp4":{source:"iana",compressible:!1,extensions:["mp4","mp4v","mpg4"]},"video/mp4v-es":{source:"iana"},"video/mpeg":{source:"iana",compressible:!1,extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/mpeg4-generic":{source:"iana"},"video/mpv":{source:"iana"},"video/nv":{source:"iana"},"video/ogg":{source:"iana",compressible:!1,extensions:["ogv"]},"video/parityfec":{source:"iana"},"video/pointer":{source:"iana"},"video/quicktime":{source:"iana",compressible:!1,extensions:["qt","mov"]},"video/raptorfec":{source:"iana"},"video/raw":{source:"iana"},"video/rtp-enc-aescm128":{source:"iana"},"video/rtploopback":{source:"iana"},"video/rtx":{source:"iana"},"video/smpte291":{source:"iana"},"video/smpte292m":{source:"iana"},"video/ulpfec":{source:"iana"},"video/vc1":{source:"iana"},"video/vnd.cctv":{source:"iana"},"video/vnd.dece.hd":{source:"iana",extensions:["uvh","uvvh"]},"video/vnd.dece.mobile":{source:"iana",extensions:["uvm","uvvm"]},"video/vnd.dece.mp4":{source:"iana"},"video/vnd.dece.pd":{source:"iana",extensions:["uvp","uvvp"]},"video/vnd.dece.sd":{source:"iana",extensions:["uvs","uvvs"]},"video/vnd.dece.video":{source:"iana",extensions:["uvv","uvvv"]},"video/vnd.directv.mpeg":{source:"iana"},"video/vnd.directv.mpeg-tts":{source:"iana"},"video/vnd.dlna.mpeg-tts":{source:"iana"},"video/vnd.dvb.file":{source:"iana",extensions:["dvb"]},"video/vnd.fvt":{source:"iana",extensions:["fvt"]},"video/vnd.hns.video":{source:"iana"},"video/vnd.iptvforum.1dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.1dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.2dparityfec-1010":{source:"iana"},"video/vnd.iptvforum.2dparityfec-2005":{source:"iana"},"video/vnd.iptvforum.ttsavc":{source:"iana"},"video/vnd.iptvforum.ttsmpeg2":{source:"iana"},"video/vnd.motorola.video":{source:"iana"},"video/vnd.motorola.videop":{source:"iana"},"video/vnd.mpegurl":{source:"iana",extensions:["mxu","m4u"]},"video/vnd.ms-playready.media.pyv":{source:"iana",extensions:["pyv"]},"video/vnd.nokia.interleaved-multimedia":{source:"iana"},"video/vnd.nokia.mp4vr":{source:"iana"},"video/vnd.nokia.videovoip":{source:"iana"},"video/vnd.objectvideo":{source:"iana"},"video/vnd.radgamettools.bink":{source:"iana"},"video/vnd.radgamettools.smacker":{source:"iana"},"video/vnd.sealed.mpeg1":{source:"iana"},"video/vnd.sealed.mpeg4":{source:"iana"},"video/vnd.sealed.swf":{source:"iana"},"video/vnd.sealedmedia.softseal.mov":{source:"iana"},"video/vnd.uvvu.mp4":{source:"iana",extensions:["uvu","uvvu"]},"video/vnd.vivo":{source:"iana",extensions:["viv"]},"video/vp8":{source:"iana"},"video/webm":{source:"apache",compressible:!1,extensions:["webm"]},"video/x-f4v":{source:"apache",extensions:["f4v"]},"video/x-fli":{source:"apache",extensions:["fli"]},"video/x-flv":{source:"apache",compressible:!1,extensions:["flv"]},"video/x-m4v":{source:"apache",extensions:["m4v"]},"video/x-matroska":{source:"apache",compressible:!1,extensions:["mkv","mk3d","mks"]},"video/x-mng":{source:"apache",extensions:["mng"]},"video/x-ms-asf":{source:"apache",extensions:["asf","asx"]},"video/x-ms-vob":{source:"apache",extensions:["vob"]},"video/x-ms-wm":{source:"apache",extensions:["wm"]},"video/x-ms-wmv":{source:"apache",compressible:!1,extensions:["wmv"]},"video/x-ms-wmx":{source:"apache",extensions:["wmx"]},"video/x-ms-wvx":{source:"apache",extensions:["wvx"]},"video/x-msvideo":{source:"apache",extensions:["avi"]},"video/x-sgi-movie":{source:"apache",extensions:["movie"]},"video/x-smv":{source:"apache",extensions:["smv"]},"x-conference/x-cooltalk":{source:"apache",extensions:["ice"]},"x-shader/x-fragment":{compressible:!0},"x-shader/x-vertex":{compressible:!0}}},function(e,a,n){
/*!
 * mime-db
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */
e.exports=n(47)},function(e,a,n){"use strict";e.exports=r,e.exports.preferredMediaTypes=r;var i=/^\s*([^\s\/;]+)\/([^;\s]+)\s*(?:;(.*))?$/;function o(e){for(var a=function(e){for(var a=e.split(","),n=1,i=0;n<a.length;n++)u(a[i])%2==0?a[++i]=a[n]:a[i]+=","+a[n];return a.length=i+1,a}(e),n=0,i=0;n<a.length;n++){var o=t(a[n].trim(),n);o&&(a[i++]=o)}return a.length=i,a}function t(e,a){var n=i.exec(e);if(!n)return null;var o=Object.create(null),t=1,s=n[2],r=n[1];if(n[3])for(var c=function(e){for(var a=e.split(";"),n=1,i=0;n<a.length;n++)u(a[i])%2==0?a[++i]=a[n]:a[i]+=";"+a[n];a.length=i+1;for(var n=0;n<a.length;n++)a[n]=a[n].trim();return a}(n[3]).map(d),p=0;p<c.length;p++){var l=c[p],m=l[0].toLowerCase(),f=l[1],v=f&&'"'===f[0]&&'"'===f[f.length-1]?f.substr(1,f.length-2):f;if("q"===m){t=parseFloat(v);break}o[m]=v}return{type:r,subtype:s,params:o,q:t,i:a}}function s(e,a,n){var i=t(e),o=0;if(!i)return null;if(a.type.toLowerCase()==i.type.toLowerCase())o|=4;else if("*"!=a.type)return null;if(a.subtype.toLowerCase()==i.subtype.toLowerCase())o|=2;else if("*"!=a.subtype)return null;var s=Object.keys(a.params);if(s.length>0){if(!s.every(function(e){return"*"==a.params[e]||(a.params[e]||"").toLowerCase()==(i.params[e]||"").toLowerCase()}))return null;o|=1}return{i:n,o:a.i,q:a.q,s:o}}function r(e,a){var n=o(void 0===e?"*/*":e||"");if(!a)return n.filter(l).sort(c).map(p);var i=a.map(function(e,a){return function(e,a,n){for(var i={o:-1,q:0,s:0},o=0;o<a.length;o++){var t=s(e,a[o],n);t&&(i.s-t.s||i.q-t.q||i.o-t.o)<0&&(i=t)}return i}(e,n,a)});return i.filter(l).sort(c).map(function(e){return a[i.indexOf(e)]})}function c(e,a){return a.q-e.q||a.s-e.s||e.o-a.o||e.i-a.i||0}function p(e){return e.type+"/"+e.subtype}function l(e){return e.q>0}function u(e){for(var a=0,n=0;-1!==(n=e.indexOf('"',n));)a++,n++;return a}function d(e){var a,n,i=e.indexOf("=");return-1===i?a=e:(a=e.substr(0,i),n=e.substr(i+1)),[a,n]}},function(e,a,n){"use strict";e.exports=s,e.exports.preferredLanguages=s;var i=/^\s*([^\s\-;]+)(?:-([^\s;]+))?\s*(?:;(.*))?$/;function o(e,a){var n=i.exec(e);if(!n)return null;var o=n[1],t=n[2],s=o;t&&(s+="-"+t);var r=1;if(n[3]){var c=n[3].split(";");for(a=0;a<c.length;a++){var p=c[a].split("=");"q"===p[0]&&(r=parseFloat(p[1]))}}return{prefix:o,suffix:t,q:r,i:a,full:s}}function t(e,a,n){var i=o(e);if(!i)return null;var t=0;if(a.full.toLowerCase()===i.full.toLowerCase())t|=4;else if(a.prefix.toLowerCase()===i.full.toLowerCase())t|=2;else if(a.full.toLowerCase()===i.prefix.toLowerCase())t|=1;else if("*"!==a.full)return null;return{i:n,o:a.i,q:a.q,s:t}}function s(e,a){var n=function(e){for(var a=e.split(","),n=0,i=0;n<a.length;n++){var t=o(a[n].trim(),n);t&&(a[i++]=t)}return a.length=i,a}(void 0===e?"*":e||"");if(!a)return n.filter(p).sort(r).map(c);var i=a.map(function(e,a){return function(e,a,n){for(var i={o:-1,q:0,s:0},o=0;o<a.length;o++){var s=t(e,a[o],n);s&&(i.s-s.s||i.q-s.q||i.o-s.o)<0&&(i=s)}return i}(e,n,a)});return i.filter(p).sort(r).map(function(e){return a[i.indexOf(e)]})}function r(e,a){return a.q-e.q||a.s-e.s||e.o-a.o||e.i-a.i||0}function c(e){return e.full}function p(e){return e.q>0}},function(e,a,n){"use strict";e.exports=s,e.exports.preferredEncodings=s;var i=/^\s*([^\s;]+)\s*(?:;(.*))?$/;function o(e,a){var n=i.exec(e);if(!n)return null;var o=n[1],t=1;if(n[2]){var s=n[2].split(";");for(a=0;a<s.length;a++){var r=s[a].trim().split("=");if("q"===r[0]){t=parseFloat(r[1]);break}}}return{encoding:o,q:t,i:a}}function t(e,a,n){var i=0;if(a.encoding.toLowerCase()===e.toLowerCase())i|=1;else if("*"!==a.encoding)return null;return{i:n,o:a.i,q:a.q,s:i}}function s(e,a){var n=function(e){for(var a=e.split(","),n=!1,i=1,s=0,r=0;s<a.length;s++){var c=o(a[s].trim(),s);c&&(a[r++]=c,n=n||t("identity",c),i=Math.min(i,c.q||1))}return n||(a[r++]={encoding:"identity",q:i,i:s}),a.length=r,a}(e||"");if(!a)return n.filter(p).sort(r).map(c);var i=a.map(function(e,a){return function(e,a,n){for(var i={o:-1,q:0,s:0},o=0;o<a.length;o++){var s=t(e,a[o],n);s&&(i.s-s.s||i.q-s.q||i.o-s.o)<0&&(i=s)}return i}(e,n,a)});return i.filter(p).sort(r).map(function(e){return a[i.indexOf(e)]})}function r(e,a){return a.q-e.q||a.s-e.s||e.o-a.o||e.i-a.i||0}function c(e){return e.encoding}function p(e){return e.q>0}},function(e,a,n){"use strict";e.exports=s,e.exports.preferredCharsets=s;var i=/^\s*([^\s;]+)\s*(?:;(.*))?$/;function o(e,a){var n=i.exec(e);if(!n)return null;var o=n[1],t=1;if(n[2]){var s=n[2].split(";");for(a=0;a<s.length;a++){var r=s[a].trim().split("=");if("q"===r[0]){t=parseFloat(r[1]);break}}}return{charset:o,q:t,i:a}}function t(e,a,n){var i=0;if(a.charset.toLowerCase()===e.toLowerCase())i|=1;else if("*"!==a.charset)return null;return{i:n,o:a.i,q:a.q,s:i}}function s(e,a){var n=function(e){for(var a=e.split(","),n=0,i=0;n<a.length;n++){var t=o(a[n].trim(),n);t&&(a[i++]=t)}return a.length=i,a}(void 0===e?"*":e||"");if(!a)return n.filter(p).sort(r).map(c);var i=a.map(function(e,a){return function(e,a,n){for(var i={o:-1,q:0,s:0},o=0;o<a.length;o++){var s=t(e,a[o],n);s&&(i.s-s.s||i.q-s.q||i.o-s.o)<0&&(i=s)}return i}(e,n,a)});return i.filter(p).sort(r).map(function(e){return a[i.indexOf(e)]})}function r(e,a){return a.q-e.q||a.s-e.s||e.o-a.o||e.i-a.i||0}function c(e){return e.charset}function p(e){return e.q>0}},function(e,a,n){"use strict";
/*!
 * negotiator
 * Copyright(c) 2012 Federico Romero
 * Copyright(c) 2012-2014 Isaac Z. Schlueter
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=Object.create(null);function o(e){if(!(this instanceof o))return new o(e);this.request=e}function t(e){var a=i[e];if(void 0!==a)return a;switch(e){case"charset":a=n(52);break;case"encoding":a=n(51);break;case"language":a=n(50);break;case"mediaType":a=n(49);break;default:throw new Error("Cannot find module '"+e+"'")}return i[e]=a,a}e.exports=o,e.exports.Negotiator=o,o.prototype.charset=function(e){var a=this.charsets(e);return a&&a[0]},o.prototype.charsets=function(e){return(0,t("charset").preferredCharsets)(this.request.headers["accept-charset"],e)},o.prototype.encoding=function(e){var a=this.encodings(e);return a&&a[0]},o.prototype.encodings=function(e){return(0,t("encoding").preferredEncodings)(this.request.headers["accept-encoding"],e)},o.prototype.language=function(e){var a=this.languages(e);return a&&a[0]},o.prototype.languages=function(e){return(0,t("language").preferredLanguages)(this.request.headers["accept-language"],e)},o.prototype.mediaType=function(e){var a=this.mediaTypes(e);return a&&a[0]},o.prototype.mediaTypes=function(e){return(0,t("mediaType").preferredMediaTypes)(this.request.headers.accept,e)},o.prototype.preferredCharset=o.prototype.charset,o.prototype.preferredCharsets=o.prototype.charsets,o.prototype.preferredEncoding=o.prototype.encoding,o.prototype.preferredEncodings=o.prototype.encodings,o.prototype.preferredLanguage=o.prototype.language,o.prototype.preferredLanguages=o.prototype.languages,o.prototype.preferredMediaType=o.prototype.mediaType,o.prototype.preferredMediaTypes=o.prototype.mediaTypes},function(e,a,n){"use strict";
/*!
 * accepts
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(53),o=n(18);function t(e){if(!(this instanceof t))return new t(e);this.headers=e.headers,this.negotiator=new i(e)}function s(e){return-1===e.indexOf("/")?o.lookup(e):e}function r(e){return"string"==typeof e}e.exports=t,t.prototype.type=t.prototype.types=function(e){var a=e;if(a&&!Array.isArray(a)){a=new Array(arguments.length);for(var n=0;n<a.length;n++)a[n]=arguments[n]}if(!a||0===a.length)return this.negotiator.mediaTypes();if(!this.headers.accept)return a[0];var i=a.map(s),o=this.negotiator.mediaTypes(i.filter(r))[0];return!!o&&a[i.indexOf(o)]},t.prototype.encoding=t.prototype.encodings=function(e){var a=e;if(a&&!Array.isArray(a)){a=new Array(arguments.length);for(var n=0;n<a.length;n++)a[n]=arguments[n]}return a&&0!==a.length?this.negotiator.encodings(a)[0]||!1:this.negotiator.encodings()},t.prototype.charset=t.prototype.charsets=function(e){var a=e;if(a&&!Array.isArray(a)){a=new Array(arguments.length);for(var n=0;n<a.length;n++)a[n]=arguments[n]}return a&&0!==a.length?this.negotiator.charsets(a)[0]||!1:this.negotiator.charsets()},t.prototype.lang=t.prototype.langs=t.prototype.language=t.prototype.languages=function(e){var a=e;if(a&&!Array.isArray(a)){a=new Array(arguments.length);for(var n=0;n<a.length;n++)a[n]=arguments[n]}return a&&0!==a.length?this.negotiator.languages(a)[0]||!1:this.negotiator.languages()}},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(54),o=n(32).isIP,t=n(46),s=n(4),r=n(25),c=n(24),p=n(6),l=n(23),u=Object.create(s.IncomingMessage.prototype);function d(e,a,n){Object.defineProperty(e,a,{configurable:!0,enumerable:!0,get:n})}e.exports=u,u.get=u.header=function(e){if(!e)throw new TypeError("name argument is required to req.get");if("string"!=typeof e)throw new TypeError("name must be a string to req.get");var a=e.toLowerCase();switch(a){case"referer":case"referrer":return this.headers.referrer||this.headers.referer;default:return this.headers[a]}},u.accepts=function(){var e=i(this);return e.types.apply(e,arguments)},u.acceptsEncodings=function(){var e=i(this);return e.encodings.apply(e,arguments)},u.acceptsCharsets=function(){var e=i(this);return e.charsets.apply(e,arguments)},u.acceptsLanguages=function(){var e=i(this);return e.languages.apply(e,arguments)},u.range=function(e,a){var n=this.get("Range");if(n)return c(e,n,a)},d(u,"query",function(){var e=this.app.get("query parser fn");return e?e(p(this).query):Object.create(null)}),u.is=function(e){var a=e;if(!Array.isArray(e)){a=new Array(arguments.length);for(var n=0;n<a.length;n++)a[n]=arguments[n]}return t(this,a)},d(u,"protocol",function(){var e=this.connection.encrypted?"https":"http";return this.app.get("trust proxy fn")(this.connection.remoteAddress,0)?(e=this.get("X-Forwarded-Proto")||e).split(/\s*,\s*/)[0]:e}),d(u,"secure",function(){return"https"===this.protocol}),d(u,"ip",function(){var e=this.app.get("trust proxy fn");return l(this,e)}),d(u,"ips",function(){var e=this.app.get("trust proxy fn"),a=l.all(this,e);return a.reverse().pop(),a}),d(u,"subdomains",function(){var e=this.hostname;if(!e)return[];var a=this.app.get("subdomain offset"),n=o(e)?[e]:e.split(".").reverse();return n.slice(a)}),d(u,"path",function(){return p(this).pathname}),d(u,"host",function(){var e=this.app.get("trust proxy fn"),a=this.get("X-Forwarded-Host");return a&&e(this.connection.remoteAddress,0)||(a=this.get("Host")),a||void 0}),d(u,"hostname",function(){var e=this.host;if(e){var a="["===e[0]?e.indexOf("]")+1:0,n=e.indexOf(":",a);return-1!==n?e.substring(0,n):e}}),d(u,"fresh",function(){var e=this.method,a=this.res,n=a.statusCode;return("GET"===e||"HEAD"===e)&&((n>=200&&n<300||304===n)&&r(this.headers,{etag:a.get("ETag"),"last-modified":a.get("Last-Modified")}))}),d(u,"stale",function(){return!this.fresh}),d(u,"xhr",function(){return"xmlhttprequest"===(this.get("X-Requested-With")||"").toLowerCase()})},function(e,a,n){"use strict";
/*!
 * router
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("router:route"),o=n(10),t=n(19),s=n(13),r=Array.prototype.slice;function c(e){i("new %o",e),this.path=e,this.stack=[],this.methods={}}e.exports=c,c.prototype._handles_method=function(e){if(this.methods._all)return!0;var a=e.toLowerCase();return"head"!==a||this.methods.head||(a="get"),Boolean(this.methods[a])},c.prototype._methods=function(){var e=Object.keys(this.methods);this.methods.get&&!this.methods.head&&e.push("head");for(var a=0;a<e.length;a++)e[a]=e[a].toUpperCase();return e},c.prototype.dispatch=function(e,a,n){var i=0,o=this.stack;if(0===o.length)return n();var t=e.method.toLowerCase();"head"!==t||this.methods.head||(t="get"),e.route=this,function s(r){if(r&&"route"===r)return n();if(r&&"router"===r)return n(r);if(i>=o.length)return n(r);var c;var p;for(;!0!==p&&i<o.length;)c=o[i++],p=!c.method||c.method===t;if(!0!==p)return n(r);r?c.handle_error(r,e,a,s):c.handle_request(e,a,s)}()},c.prototype.all=function(e){var a=o(r.call(arguments));if(0===a.length)throw new TypeError("argument handler is required");for(var n=0;n<a.length;n++){var i=a[n];if("function"!=typeof i)throw new TypeError("argument handler must be a function");var s=t("/",{},i);s.method=void 0,this.methods._all=!0,this.stack.push(s)}return this},s.forEach(function(e){c.prototype[e]=function(a){var n=o(r.call(arguments));if(0===n.length)throw new TypeError("argument handler is required");for(var s=0;s<n.length;s++){var c=n[s];if("function"!=typeof c)throw new TypeError("argument handler must be a function");i("%s %s",e,this.path);var p=t("/",{},c);p.method=e,this.methods[e]=!0,this.stack.push(p)}return this}})},function(e,a){e.exports=function e(a,i,o){o=o||{};i=i||[];var t=o.strict;var s=!1!==o.end;var r=o.sensitive?"":"i";var c=0;var p=i.length;var l=0;var u=0;var d;if(a instanceof RegExp){for(;d=n.exec(a.source);)i.push({name:u++,optional:!1,offset:d.index});return a}if(Array.isArray(a))return a=a.map(function(a){return e(a,i,o).source}),new RegExp("(?:"+a.join("|")+")",r);a=("^"+a+(t?"":"/"===a[a.length-1]?"?":"/?")).replace(/\/\(/g,"/(?:").replace(/([\/\.])/g,"\\$1").replace(/(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g,function(e,a,n,o,t,s,r,p){a=a||"",n=n||"",t=t||"([^\\/"+n+"]+?)",r=r||"",i.push({name:o,optional:!!r,offset:p+c});var l=(r?"":a)+"(?:"+n+(r?a:"")+t+(s?"((?:[\\/"+n+"].+?)?)":"")+")"+r;return c+=l.length-e.length,l}).replace(/\*/g,function(e,a){for(var n=i.length;n-- >p&&i[n].offset>a;)i[n].offset+=3;return"(.*)"});for(;d=n.exec(a);){for(var m=0,f=d.index;"\\"===a.charAt(--f);)m++;m%2!=1&&((p+l===i.length||i[p+l].offset>d.index)&&i.splice(p+l,0,{name:u++,optional:!1,offset:d.index}),l++)}a+=s?"$":"/"===a[a.length-1]?"":"(?=\\/|$)";return new RegExp(a,r)};var n=/\((?!\?)/g},function(e,a){e.exports=require("querystring")},function(e,a,n){"use strict";var i=n(22),o=Object.prototype.hasOwnProperty,t={allowDots:!1,allowPrototypes:!1,arrayLimit:20,decoder:i.decode,delimiter:"&",depth:5,parameterLimit:1e3,plainObjects:!1,strictNullHandling:!1},s=function(e,a,n){if(e){var i=n.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,t=/(\[[^[\]]*])/g,s=/(\[[^[\]]*])/.exec(i),r=s?i.slice(0,s.index):i,c=[];if(r){if(!n.plainObjects&&o.call(Object.prototype,r)&&!n.allowPrototypes)return;c.push(r)}for(var p=0;null!==(s=t.exec(i))&&p<n.depth;){if(p+=1,!n.plainObjects&&o.call(Object.prototype,s[1].slice(1,-1))&&!n.allowPrototypes)return;c.push(s[1])}return s&&c.push("["+i.slice(s.index)+"]"),function(e,a,n){for(var i=a,o=e.length-1;o>=0;--o){var t,s=e[o];if("[]"===s)t=(t=[]).concat(i);else{t=n.plainObjects?Object.create(null):{};var r="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,c=parseInt(r,10);!isNaN(c)&&s!==r&&String(c)===r&&c>=0&&n.parseArrays&&c<=n.arrayLimit?(t=[])[c]=i:t[r]=i}i=t}return i}(c,a,n)}};e.exports=function(e,a){var n=a?i.assign({},a):{};if(null!==n.decoder&&void 0!==n.decoder&&"function"!=typeof n.decoder)throw new TypeError("Decoder has to be a function.");if(n.ignoreQueryPrefix=!0===n.ignoreQueryPrefix,n.delimiter="string"==typeof n.delimiter||i.isRegExp(n.delimiter)?n.delimiter:t.delimiter,n.depth="number"==typeof n.depth?n.depth:t.depth,n.arrayLimit="number"==typeof n.arrayLimit?n.arrayLimit:t.arrayLimit,n.parseArrays=!1!==n.parseArrays,n.decoder="function"==typeof n.decoder?n.decoder:t.decoder,n.allowDots="boolean"==typeof n.allowDots?n.allowDots:t.allowDots,n.plainObjects="boolean"==typeof n.plainObjects?n.plainObjects:t.plainObjects,n.allowPrototypes="boolean"==typeof n.allowPrototypes?n.allowPrototypes:t.allowPrototypes,n.parameterLimit="number"==typeof n.parameterLimit?n.parameterLimit:t.parameterLimit,n.strictNullHandling="boolean"==typeof n.strictNullHandling?n.strictNullHandling:t.strictNullHandling,""===e||null===e||void 0===e)return n.plainObjects?Object.create(null):{};for(var r="string"==typeof e?function(e,a){for(var n={},i=a.ignoreQueryPrefix?e.replace(/^\?/,""):e,s=a.parameterLimit===1/0?void 0:a.parameterLimit,r=i.split(a.delimiter,s),c=0;c<r.length;++c){var p,l,u=r[c],d=u.indexOf("]="),m=-1===d?u.indexOf("="):d+1;-1===m?(p=a.decoder(u,t.decoder),l=a.strictNullHandling?null:""):(p=a.decoder(u.slice(0,m),t.decoder),l=a.decoder(u.slice(m+1),t.decoder)),o.call(n,p)?n[p]=[].concat(n[p]).concat(l):n[p]=l}return n}(e,n):e,c=n.plainObjects?Object.create(null):{},p=Object.keys(r),l=0;l<p.length;++l){var u=p[l],d=s(u,r[u],n);c=i.merge(c,d,n)}return i.compact(c)}},function(e,a,n){"use strict";var i=n(22),o=n(21),t={brackets:function(e){return e+"[]"},indices:function(e,a){return e+"["+a+"]"},repeat:function(e){return e}},s=Date.prototype.toISOString,r={delimiter:"&",encode:!0,encoder:i.encode,encodeValuesOnly:!1,serializeDate:function(e){return s.call(e)},skipNulls:!1,strictNullHandling:!1},c=function e(a,n,o,t,s,c,p,l,u,d,m,f){var v=a;if("function"==typeof p)v=p(n,v);else if(v instanceof Date)v=d(v);else if(null===v){if(t)return c&&!f?c(n,r.encoder):n;v=""}if("string"==typeof v||"number"==typeof v||"boolean"==typeof v||i.isBuffer(v))return c?[m(f?n:c(n,r.encoder))+"="+m(c(v,r.encoder))]:[m(n)+"="+m(String(v))];var x,h=[];if(void 0===v)return h;if(Array.isArray(p))x=p;else{var g=Object.keys(v);x=l?g.sort(l):g}for(var b=0;b<x.length;++b){var y=x[b];s&&null===v[y]||(h=Array.isArray(v)?h.concat(e(v[y],o(n,y),o,t,s,c,p,l,u,d,m,f)):h.concat(e(v[y],n+(u?"."+y:"["+y+"]"),o,t,s,c,p,l,u,d,m,f)))}return h};e.exports=function(e,a){var n=e,s=a?i.assign({},a):{};if(null!==s.encoder&&void 0!==s.encoder&&"function"!=typeof s.encoder)throw new TypeError("Encoder has to be a function.");var p=void 0===s.delimiter?r.delimiter:s.delimiter,l="boolean"==typeof s.strictNullHandling?s.strictNullHandling:r.strictNullHandling,u="boolean"==typeof s.skipNulls?s.skipNulls:r.skipNulls,d="boolean"==typeof s.encode?s.encode:r.encode,m="function"==typeof s.encoder?s.encoder:r.encoder,f="function"==typeof s.sort?s.sort:null,v=void 0!==s.allowDots&&s.allowDots,x="function"==typeof s.serializeDate?s.serializeDate:r.serializeDate,h="boolean"==typeof s.encodeValuesOnly?s.encodeValuesOnly:r.encodeValuesOnly;if(void 0===s.format)s.format=o.default;else if(!Object.prototype.hasOwnProperty.call(o.formatters,s.format))throw new TypeError("Unknown format option provided.");var g,b,y=o.formatters[s.format];"function"==typeof s.filter?n=(b=s.filter)("",n):Array.isArray(s.filter)&&(g=b=s.filter);var w,k=[];if("object"!=typeof n||null===n)return"";w=s.arrayFormat in t?s.arrayFormat:"indices"in s?s.indices?"indices":"repeat":"indices";var j=t[w];g||(g=Object.keys(n)),f&&g.sort(f);for(var E=0;E<g.length;++E){var q=g[E];u&&null===n[q]||(k=k.concat(c(n[q],q,j,l,u,d?m:null,b,f,v,x,y,h)))}var T=k.join(p),z=!0===s.addQueryPrefix?"?":"";return T.length>0?z+T:""}},function(e,a,n){"use strict";var i=n(60),o=n(59),t=n(21);e.exports={formats:t,parse:o,stringify:i}},function(e,a){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,a,n){(function(e){(function(){var a,n,i,o,t,s,r;n={},void 0!==e&&null!==e&&e.exports?e.exports=n:this.ipaddr=n,r=function(e,a,n,i){var o,t;if(e.length!==a.length)throw new Error("ipaddr: cannot match CIDR for objects with different lengths");for(o=0;i>0;){if((t=n-i)<0&&(t=0),e[o]>>t!=a[o]>>t)return!1;i-=n,o+=1}return!0},n.subnetMatch=function(e,a,n){var i,o,t,s,r;for(t in null==n&&(n="unicast"),a)for(!(s=a[t])[0]||s[0]instanceof Array||(s=[s]),i=0,o=s.length;i<o;i++)if(r=s[i],e.match.apply(e,r))return t;return n},n.IPv4=function(){function e(e){var a,n,i;if(4!==e.length)throw new Error("ipaddr: ipv4 octet count should be 4");for(a=0,n=e.length;a<n;a++)if(!(0<=(i=e[a])&&i<=255))throw new Error("ipaddr: ipv4 octet should fit in 8 bits");this.octets=e}return e.prototype.kind=function(){return"ipv4"},e.prototype.toString=function(){return this.octets.join(".")},e.prototype.toByteArray=function(){return this.octets.slice(0)},e.prototype.match=function(e,a){var n;if(void 0===a&&(e=(n=e)[0],a=n[1]),"ipv4"!==e.kind())throw new Error("ipaddr: cannot match ipv4 address with non-ipv4 one");return r(this.octets,e.octets,8,a)},e.prototype.SpecialRanges={unspecified:[[new e([0,0,0,0]),8]],broadcast:[[new e([255,255,255,255]),32]],multicast:[[new e([224,0,0,0]),4]],linkLocal:[[new e([169,254,0,0]),16]],loopback:[[new e([127,0,0,0]),8]],carrierGradeNat:[[new e([100,64,0,0]),10]],private:[[new e([10,0,0,0]),8],[new e([172,16,0,0]),12],[new e([192,168,0,0]),16]],reserved:[[new e([192,0,0,0]),24],[new e([192,0,2,0]),24],[new e([192,88,99,0]),24],[new e([198,51,100,0]),24],[new e([203,0,113,0]),24],[new e([240,0,0,0]),4]]},e.prototype.range=function(){return n.subnetMatch(this,this.SpecialRanges)},e.prototype.toIPv4MappedAddress=function(){return n.IPv6.parse("::ffff:"+this.toString())},e.prototype.prefixLengthFromSubnetMask=function(){var e,a,n,i,o,t,s;for(s={0:8,128:7,192:6,224:5,240:4,248:3,252:2,254:1,255:0},e=0,o=!1,a=n=3;n>=0;a=n+=-1){if(!((i=this.octets[a])in s))return null;if(t=s[i],o&&0!==t)return null;8!==t&&(o=!0),e+=t}return 32-e},e}(),i="(0?\\d+|0x[a-f0-9]+)",o={fourOctet:new RegExp("^"+i+"\\."+i+"\\."+i+"\\."+i+"$","i"),longValue:new RegExp("^"+i+"$","i")},n.IPv4.parser=function(e){var a,n,i,t,s;if(n=function(e){return"0"===e[0]&&"x"!==e[1]?parseInt(e,8):parseInt(e)},a=e.match(o.fourOctet))return function(){var e,o,t,s;for(s=[],e=0,o=(t=a.slice(1,6)).length;e<o;e++)i=t[e],s.push(n(i));return s}();if(a=e.match(o.longValue)){if((s=n(a[1]))>4294967295||s<0)throw new Error("ipaddr: address outside defined range");return function(){var e,a;for(a=[],t=e=0;e<=24;t=e+=8)a.push(s>>t&255);return a}().reverse()}return null},n.IPv6=function(){function e(e){var a,n,i,o,t,s;if(16===e.length)for(this.parts=[],a=n=0;n<=14;a=n+=2)this.parts.push(e[a]<<8|e[a+1]);else{if(8!==e.length)throw new Error("ipaddr: ipv6 part count should be 8 or 16");this.parts=e}for(i=0,o=(s=this.parts).length;i<o;i++)if(!(0<=(t=s[i])&&t<=65535))throw new Error("ipaddr: ipv6 part should fit in 16 bits")}return e.prototype.kind=function(){return"ipv6"},e.prototype.toString=function(){var e,a,n,i,o,t,s;for(s=function(){var e,a,n,o;for(o=[],e=0,a=(n=this.parts).length;e<a;e++)i=n[e],o.push(i.toString(16));return o}.call(this),e=[],o=function(a){return e.push(a)},t=0,a=0,n=s.length;a<n;a++)switch(i=s[a],t){case 0:o("0"===i?"":i),t=1;break;case 1:"0"===i?t=2:o(i);break;case 2:"0"!==i&&(o(""),o(i),t=3);break;case 3:o(i)}return 2===t&&(o(""),o("")),e.join(":")},e.prototype.toByteArray=function(){var e,a,n,i,o;for(e=[],a=0,n=(o=this.parts).length;a<n;a++)i=o[a],e.push(i>>8),e.push(255&i);return e},e.prototype.toNormalizedString=function(){var e;return function(){var a,n,i,o;for(o=[],a=0,n=(i=this.parts).length;a<n;a++)e=i[a],o.push(e.toString(16));return o}.call(this).join(":")},e.prototype.match=function(e,a){var n;if(void 0===a&&(e=(n=e)[0],a=n[1]),"ipv6"!==e.kind())throw new Error("ipaddr: cannot match ipv6 address with non-ipv6 one");return r(this.parts,e.parts,16,a)},e.prototype.SpecialRanges={unspecified:[new e([0,0,0,0,0,0,0,0]),128],linkLocal:[new e([65152,0,0,0,0,0,0,0]),10],multicast:[new e([65280,0,0,0,0,0,0,0]),8],loopback:[new e([0,0,0,0,0,0,0,1]),128],uniqueLocal:[new e([64512,0,0,0,0,0,0,0]),7],ipv4Mapped:[new e([0,0,0,0,0,65535,0,0]),96],rfc6145:[new e([0,0,0,0,65535,0,0,0]),96],rfc6052:[new e([100,65435,0,0,0,0,0,0]),96],"6to4":[new e([8194,0,0,0,0,0,0,0]),16],teredo:[new e([8193,0,0,0,0,0,0,0]),32],reserved:[[new e([8193,3512,0,0,0,0,0,0]),32]]},e.prototype.range=function(){return n.subnetMatch(this,this.SpecialRanges)},e.prototype.isIPv4MappedAddress=function(){return"ipv4Mapped"===this.range()},e.prototype.toIPv4Address=function(){var e,a,i;if(!this.isIPv4MappedAddress())throw new Error("ipaddr: trying to convert a generic ipv6 address to ipv4");return e=(i=this.parts.slice(-2))[0],a=i[1],new n.IPv4([e>>8,255&e,a>>8,255&a])},e}(),t="(?:[0-9a-f]+::?)+",s={native:new RegExp("^(::)?("+t+")?([0-9a-f]+)?(::)?$","i"),transitional:new RegExp("^((?:"+t+")|(?:::)(?:"+t+")?)"+i+"\\."+i+"\\."+i+"\\."+i+"$","i")},a=function(e,a){var n,i,o,t,s;if(e.indexOf("::")!==e.lastIndexOf("::"))return null;for(n=0,i=-1;(i=e.indexOf(":",i+1))>=0;)n++;if("::"===e.substr(0,2)&&n--,"::"===e.substr(-2,2)&&n--,n>a)return null;for(s=a-n,t=":";s--;)t+="0:";return":"===(e=e.replace("::",t))[0]&&(e=e.slice(1)),":"===e[e.length-1]&&(e=e.slice(0,-1)),function(){var a,n,i,t;for(t=[],a=0,n=(i=e.split(":")).length;a<n;a++)o=i[a],t.push(parseInt(o,16));return t}()},n.IPv6.parser=function(e){var n,i,o,t,r,c;if(e.match(s.native))return a(e,8);if((o=e.match(s.transitional))&&(c=a(o[1].slice(0,-1),6))){for(n=0,i=(r=[parseInt(o[2]),parseInt(o[3]),parseInt(o[4]),parseInt(o[5])]).length;n<i;n++)if(!(0<=(t=r[n])&&t<=255))return null;return c.push(r[0]<<8|r[1]),c.push(r[2]<<8|r[3]),c}return null},n.IPv4.isIPv4=n.IPv6.isIPv6=function(e){return null!==this.parser(e)},n.IPv4.isValid=function(e){try{return new this(this.parser(e)),!0}catch(e){return e,!1}},n.IPv4.isValidFourPartDecimal=function(e){return!(!n.IPv4.isValid(e)||!e.match(/^\d+(\.\d+){3}$/))},n.IPv6.isValid=function(e){if("string"==typeof e&&-1===e.indexOf(":"))return!1;try{return new this(this.parser(e)),!0}catch(e){return e,!1}},n.IPv4.parse=n.IPv6.parse=function(e){var a;if(null===(a=this.parser(e)))throw new Error("ipaddr: string is not formatted like ip address");return new this(a)},n.IPv4.parseCIDR=function(e){var a,n;if((n=e.match(/^(.+)\/(\d+)$/))&&(a=parseInt(n[2]))>=0&&a<=32)return[this.parse(n[1]),a];throw new Error("ipaddr: string is not formatted like an IPv4 CIDR range")},n.IPv4.subnetMaskFromPrefixLength=function(e){var a,i;if(e<0||e>32)throw new Error("ipaddr: invalid prefix length");for(i=Array(4).fill(0),a=0;a<Math.floor(e/8);)i[a]=255,a++;return i[Math.floor(e/8)]=Math.pow(2,e%8)-1<<8-e%8,new n.IPv4(i)},n.IPv4.broadcastAddressFromCIDR=function(e){var a,i,o,t;try{for(i=n.IPv4.parseCIDR(e)[0],t=this.subnetMaskFromPrefixLength([n.IPv4.parseCIDR(e)[1]]),o=[],a=0;a<4;)o.push(parseInt(i.octets[a],10)|255^parseInt(t.octets[a],10)),a++;return new n.IPv4(o)}catch(e){throw e,new Error("ipaddr: the address does not have IPv4 CIDR format")}},n.IPv4.networkAddressFromCIDR=function(e){var a,i,o,t;try{for(i=n.IPv4.parseCIDR(e)[0],t=this.subnetMaskFromPrefixLength([n.IPv4.parseCIDR(e)[1]]),o=[],a=0;a<4;)o.push(parseInt(i.octets[a],10)&parseInt(t.octets[a],10)),a++;return new n.IPv4(o)}catch(e){throw e,new Error("ipaddr: the address does not have IPv4 CIDR format")}},n.IPv6.parseCIDR=function(e){var a,n;if((n=e.match(/^(.+)\/(\d+)$/))&&(a=parseInt(n[2]))>=0&&a<=128)return[this.parse(n[1]),a];throw new Error("ipaddr: string is not formatted like an IPv6 CIDR range")},n.isValid=function(e){return n.IPv6.isValid(e)||n.IPv4.isValid(e)},n.parse=function(e){if(n.IPv6.isValid(e))return n.IPv6.parse(e);if(n.IPv4.isValid(e))return n.IPv4.parse(e);throw new Error("ipaddr: the address has neither IPv6 nor IPv4 format")},n.parseCIDR=function(e){try{return n.IPv6.parseCIDR(e)}catch(a){a;try{return n.IPv4.parseCIDR(e)}catch(e){throw e,new Error("ipaddr: the address has neither IPv6 nor IPv4 CIDR format")}}},n.fromByteArray=function(e){var a;if(4===(a=e.length))return new n.IPv4(e);if(16===a)return new n.IPv6(e);throw new Error("ipaddr: the binary input is neither an IPv6 nor IPv4 address")},n.process=function(e){var a;return"ipv6"===(a=this.parse(e)).kind()&&a.isIPv4MappedAddress()?a.toIPv4Address():a}}).call(this)}).call(this,n(62)(e))},function(e,a,n){"use strict";
/*!
 * forwarded
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){if(!e)throw new TypeError("argument req is required");var a=function(e){for(var a=e.length,n=[],i=e.length,o=e.length-1;o>=0;o--)switch(e.charCodeAt(o)){case 32:i===a&&(i=a=o);break;case 44:i!==a&&n.push(e.substring(i,a)),i=a=o;break;default:i=o}i!==a&&n.push(e.substring(i,a));return n}(e.headers["x-forwarded-for"]||"");return[e.connection.remoteAddress].concat(a)}},function(e,a,n){"use strict";
/*!
 * content-type
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=/; *([!#$%&'*+.^_`|~0-9A-Za-z-]+) *= *("(?:[\u000b\u0020\u0021\u0023-\u005b\u005d-\u007e\u0080-\u00ff]|\\[\u000b\u0020-\u00ff])*"|[!#$%&'*+.^_`|~0-9A-Za-z-]+) */g,o=/^[\u000b\u0020-\u007e\u0080-\u00ff]+$/,t=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+$/,s=/\\([\u000b\u0020-\u00ff])/g,r=/([\\"])/g,c=/^[!#$%&'*+.^_`|~0-9A-Za-z-]+\/[!#$%&'*+.^_`|~0-9A-Za-z-]+$/;function p(e){var a=String(e);if(t.test(a))return a;if(a.length>0&&!o.test(a))throw new TypeError("invalid parameter value");return'"'+a.replace(r,"\\$1")+'"'}a.format=function(e){if(!e||"object"!=typeof e)throw new TypeError("argument obj is required");var a=e.parameters,n=e.type;if(!n||!c.test(n))throw new TypeError("invalid type");var i=n;if(a&&"object"==typeof a)for(var o,s=Object.keys(a).sort(),r=0;r<s.length;r++){if(o=s[r],!t.test(o))throw new TypeError("invalid parameter name");i+="; "+o+"="+p(a[o])}return i},a.parse=function(e){if(!e)throw new TypeError("argument string is required");var a="object"==typeof e?function(e){var a;"function"==typeof e.getHeader?a=e.getHeader("content-type"):"object"==typeof e.headers&&(a=e.headers&&e.headers["content-type"]);if("string"!=typeof a)throw new TypeError("content-type header is missing from object");return a}(e):e;if("string"!=typeof a)throw new TypeError("argument string is required to be a string");var n=a.indexOf(";"),o=-1!==n?a.substr(0,n).trim():a.trim();if(!c.test(o))throw new TypeError("invalid media type");var t=new function(e){this.parameters=Object.create(null),this.type=e}(o.toLowerCase());if(-1!==n){var r,p,l;for(i.lastIndex=n;p=i.exec(a);){if(p.index!==n)throw new TypeError("invalid parameter format");n+=p[0].length,r=p[1].toLowerCase(),'"'===(l=p[2])[0]&&(l=l.substr(1,l.length-2).replace(s,"$1")),t.parameters[r]=l}if(n!==a.length)throw new TypeError("invalid parameter format")}return t}},function(e){e.exports={"application/andrew-inset":["ez"],"application/applixware":["aw"],"application/atom+xml":["atom"],"application/atomcat+xml":["atomcat"],"application/atomsvc+xml":["atomsvc"],"application/ccxml+xml":["ccxml"],"application/cdmi-capability":["cdmia"],"application/cdmi-container":["cdmic"],"application/cdmi-domain":["cdmid"],"application/cdmi-object":["cdmio"],"application/cdmi-queue":["cdmiq"],"application/cu-seeme":["cu"],"application/dash+xml":["mdp"],"application/davmount+xml":["davmount"],"application/docbook+xml":["dbk"],"application/dssc+der":["dssc"],"application/dssc+xml":["xdssc"],"application/ecmascript":["ecma"],"application/emma+xml":["emma"],"application/epub+zip":["epub"],"application/exi":["exi"],"application/font-tdpfr":["pfr"],"application/font-woff":["woff"],"application/font-woff2":["woff2"],"application/gml+xml":["gml"],"application/gpx+xml":["gpx"],"application/gxf":["gxf"],"application/hyperstudio":["stk"],"application/inkml+xml":["ink","inkml"],"application/ipfix":["ipfix"],"application/java-archive":["jar"],"application/java-serialized-object":["ser"],"application/java-vm":["class"],"application/javascript":["js"],"application/json":["json","map"],"application/json5":["json5"],"application/jsonml+json":["jsonml"],"application/lost+xml":["lostxml"],"application/mac-binhex40":["hqx"],"application/mac-compactpro":["cpt"],"application/mads+xml":["mads"],"application/marc":["mrc"],"application/marcxml+xml":["mrcx"],"application/mathematica":["ma","nb","mb"],"application/mathml+xml":["mathml"],"application/mbox":["mbox"],"application/mediaservercontrol+xml":["mscml"],"application/metalink+xml":["metalink"],"application/metalink4+xml":["meta4"],"application/mets+xml":["mets"],"application/mods+xml":["mods"],"application/mp21":["m21","mp21"],"application/mp4":["mp4s","m4p"],"application/msword":["doc","dot"],"application/mxf":["mxf"],"application/octet-stream":["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","buffer"],"application/oda":["oda"],"application/oebps-package+xml":["opf"],"application/ogg":["ogx"],"application/omdoc+xml":["omdoc"],"application/onenote":["onetoc","onetoc2","onetmp","onepkg"],"application/oxps":["oxps"],"application/patch-ops-error+xml":["xer"],"application/pdf":["pdf"],"application/pgp-encrypted":["pgp"],"application/pgp-signature":["asc","sig"],"application/pics-rules":["prf"],"application/pkcs10":["p10"],"application/pkcs7-mime":["p7m","p7c"],"application/pkcs7-signature":["p7s"],"application/pkcs8":["p8"],"application/pkix-attr-cert":["ac"],"application/pkix-cert":["cer"],"application/pkix-crl":["crl"],"application/pkix-pkipath":["pkipath"],"application/pkixcmp":["pki"],"application/pls+xml":["pls"],"application/postscript":["ai","eps","ps"],"application/prs.cww":["cww"],"application/pskc+xml":["pskcxml"],"application/rdf+xml":["rdf"],"application/reginfo+xml":["rif"],"application/relax-ng-compact-syntax":["rnc"],"application/resource-lists+xml":["rl"],"application/resource-lists-diff+xml":["rld"],"application/rls-services+xml":["rs"],"application/rpki-ghostbusters":["gbr"],"application/rpki-manifest":["mft"],"application/rpki-roa":["roa"],"application/rsd+xml":["rsd"],"application/rss+xml":["rss"],"application/rtf":["rtf"],"application/sbml+xml":["sbml"],"application/scvp-cv-request":["scq"],"application/scvp-cv-response":["scs"],"application/scvp-vp-request":["spq"],"application/scvp-vp-response":["spp"],"application/sdp":["sdp"],"application/set-payment-initiation":["setpay"],"application/set-registration-initiation":["setreg"],"application/shf+xml":["shf"],"application/smil+xml":["smi","smil"],"application/sparql-query":["rq"],"application/sparql-results+xml":["srx"],"application/srgs":["gram"],"application/srgs+xml":["grxml"],"application/sru+xml":["sru"],"application/ssdl+xml":["ssdl"],"application/ssml+xml":["ssml"],"application/tei+xml":["tei","teicorpus"],"application/thraud+xml":["tfi"],"application/timestamped-data":["tsd"],"application/vnd.3gpp.pic-bw-large":["plb"],"application/vnd.3gpp.pic-bw-small":["psb"],"application/vnd.3gpp.pic-bw-var":["pvb"],"application/vnd.3gpp2.tcap":["tcap"],"application/vnd.3m.post-it-notes":["pwn"],"application/vnd.accpac.simply.aso":["aso"],"application/vnd.accpac.simply.imp":["imp"],"application/vnd.acucobol":["acu"],"application/vnd.acucorp":["atc","acutc"],"application/vnd.adobe.air-application-installer-package+zip":["air"],"application/vnd.adobe.formscentral.fcdt":["fcdt"],"application/vnd.adobe.fxp":["fxp","fxpl"],"application/vnd.adobe.xdp+xml":["xdp"],"application/vnd.adobe.xfdf":["xfdf"],"application/vnd.ahead.space":["ahead"],"application/vnd.airzip.filesecure.azf":["azf"],"application/vnd.airzip.filesecure.azs":["azs"],"application/vnd.amazon.ebook":["azw"],"application/vnd.americandynamics.acc":["acc"],"application/vnd.amiga.ami":["ami"],"application/vnd.android.package-archive":["apk"],"application/vnd.anser-web-certificate-issue-initiation":["cii"],"application/vnd.anser-web-funds-transfer-initiation":["fti"],"application/vnd.antix.game-component":["atx"],"application/vnd.apple.installer+xml":["mpkg"],"application/vnd.apple.mpegurl":["m3u8"],"application/vnd.aristanetworks.swi":["swi"],"application/vnd.astraea-software.iota":["iota"],"application/vnd.audiograph":["aep"],"application/vnd.blueice.multipass":["mpm"],"application/vnd.bmi":["bmi"],"application/vnd.businessobjects":["rep"],"application/vnd.chemdraw+xml":["cdxml"],"application/vnd.chipnuts.karaoke-mmd":["mmd"],"application/vnd.cinderella":["cdy"],"application/vnd.claymore":["cla"],"application/vnd.cloanto.rp9":["rp9"],"application/vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"application/vnd.cluetrust.cartomobile-config":["c11amc"],"application/vnd.cluetrust.cartomobile-config-pkg":["c11amz"],"application/vnd.commonspace":["csp"],"application/vnd.contact.cmsg":["cdbcmsg"],"application/vnd.cosmocaller":["cmc"],"application/vnd.crick.clicker":["clkx"],"application/vnd.crick.clicker.keyboard":["clkk"],"application/vnd.crick.clicker.palette":["clkp"],"application/vnd.crick.clicker.template":["clkt"],"application/vnd.crick.clicker.wordbank":["clkw"],"application/vnd.criticaltools.wbs+xml":["wbs"],"application/vnd.ctc-posml":["pml"],"application/vnd.cups-ppd":["ppd"],"application/vnd.curl.car":["car"],"application/vnd.curl.pcurl":["pcurl"],"application/vnd.dart":["dart"],"application/vnd.data-vision.rdz":["rdz"],"application/vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"application/vnd.dece.ttml+xml":["uvt","uvvt"],"application/vnd.dece.unspecified":["uvx","uvvx"],"application/vnd.dece.zip":["uvz","uvvz"],"application/vnd.denovo.fcselayout-link":["fe_launch"],"application/vnd.dna":["dna"],"application/vnd.dolby.mlp":["mlp"],"application/vnd.dpgraph":["dpg"],"application/vnd.dreamfactory":["dfac"],"application/vnd.ds-keypoint":["kpxx"],"application/vnd.dvb.ait":["ait"],"application/vnd.dvb.service":["svc"],"application/vnd.dynageo":["geo"],"application/vnd.ecowin.chart":["mag"],"application/vnd.enliven":["nml"],"application/vnd.epson.esf":["esf"],"application/vnd.epson.msf":["msf"],"application/vnd.epson.quickanime":["qam"],"application/vnd.epson.salt":["slt"],"application/vnd.epson.ssf":["ssf"],"application/vnd.eszigno3+xml":["es3","et3"],"application/vnd.ezpix-album":["ez2"],"application/vnd.ezpix-package":["ez3"],"application/vnd.fdf":["fdf"],"application/vnd.fdsn.mseed":["mseed"],"application/vnd.fdsn.seed":["seed","dataless"],"application/vnd.flographit":["gph"],"application/vnd.fluxtime.clip":["ftc"],"application/vnd.framemaker":["fm","frame","maker","book"],"application/vnd.frogans.fnc":["fnc"],"application/vnd.frogans.ltf":["ltf"],"application/vnd.fsc.weblaunch":["fsc"],"application/vnd.fujitsu.oasys":["oas"],"application/vnd.fujitsu.oasys2":["oa2"],"application/vnd.fujitsu.oasys3":["oa3"],"application/vnd.fujitsu.oasysgp":["fg5"],"application/vnd.fujitsu.oasysprs":["bh2"],"application/vnd.fujixerox.ddd":["ddd"],"application/vnd.fujixerox.docuworks":["xdw"],"application/vnd.fujixerox.docuworks.binder":["xbd"],"application/vnd.fuzzysheet":["fzs"],"application/vnd.genomatix.tuxedo":["txd"],"application/vnd.geogebra.file":["ggb"],"application/vnd.geogebra.tool":["ggt"],"application/vnd.geometry-explorer":["gex","gre"],"application/vnd.geonext":["gxt"],"application/vnd.geoplan":["g2w"],"application/vnd.geospace":["g3w"],"application/vnd.gmx":["gmx"],"application/vnd.google-earth.kml+xml":["kml"],"application/vnd.google-earth.kmz":["kmz"],"application/vnd.grafeq":["gqf","gqs"],"application/vnd.groove-account":["gac"],"application/vnd.groove-help":["ghf"],"application/vnd.groove-identity-message":["gim"],"application/vnd.groove-injector":["grv"],"application/vnd.groove-tool-message":["gtm"],"application/vnd.groove-tool-template":["tpl"],"application/vnd.groove-vcard":["vcg"],"application/vnd.hal+xml":["hal"],"application/vnd.handheld-entertainment+xml":["zmm"],"application/vnd.hbci":["hbci"],"application/vnd.hhe.lesson-player":["les"],"application/vnd.hp-hpgl":["hpgl"],"application/vnd.hp-hpid":["hpid"],"application/vnd.hp-hps":["hps"],"application/vnd.hp-jlyt":["jlt"],"application/vnd.hp-pcl":["pcl"],"application/vnd.hp-pclxl":["pclxl"],"application/vnd.ibm.minipay":["mpy"],"application/vnd.ibm.modcap":["afp","listafp","list3820"],"application/vnd.ibm.rights-management":["irm"],"application/vnd.ibm.secure-container":["sc"],"application/vnd.iccprofile":["icc","icm"],"application/vnd.igloader":["igl"],"application/vnd.immervision-ivp":["ivp"],"application/vnd.immervision-ivu":["ivu"],"application/vnd.insors.igm":["igm"],"application/vnd.intercon.formnet":["xpw","xpx"],"application/vnd.intergeo":["i2g"],"application/vnd.intu.qbo":["qbo"],"application/vnd.intu.qfx":["qfx"],"application/vnd.ipunplugged.rcprofile":["rcprofile"],"application/vnd.irepository.package+xml":["irp"],"application/vnd.is-xpr":["xpr"],"application/vnd.isac.fcs":["fcs"],"application/vnd.jam":["jam"],"application/vnd.jcp.javame.midlet-rms":["rms"],"application/vnd.jisp":["jisp"],"application/vnd.joost.joda-archive":["joda"],"application/vnd.kahootz":["ktz","ktr"],"application/vnd.kde.karbon":["karbon"],"application/vnd.kde.kchart":["chrt"],"application/vnd.kde.kformula":["kfo"],"application/vnd.kde.kivio":["flw"],"application/vnd.kde.kontour":["kon"],"application/vnd.kde.kpresenter":["kpr","kpt"],"application/vnd.kde.kspread":["ksp"],"application/vnd.kde.kword":["kwd","kwt"],"application/vnd.kenameaapp":["htke"],"application/vnd.kidspiration":["kia"],"application/vnd.kinar":["kne","knp"],"application/vnd.koan":["skp","skd","skt","skm"],"application/vnd.kodak-descriptor":["sse"],"application/vnd.las.las+xml":["lasxml"],"application/vnd.llamagraphics.life-balance.desktop":["lbd"],"application/vnd.llamagraphics.life-balance.exchange+xml":["lbe"],"application/vnd.lotus-1-2-3":["123"],"application/vnd.lotus-approach":["apr"],"application/vnd.lotus-freelance":["pre"],"application/vnd.lotus-notes":["nsf"],"application/vnd.lotus-organizer":["org"],"application/vnd.lotus-screencam":["scm"],"application/vnd.lotus-wordpro":["lwp"],"application/vnd.macports.portpkg":["portpkg"],"application/vnd.mcd":["mcd"],"application/vnd.medcalcdata":["mc1"],"application/vnd.mediastation.cdkey":["cdkey"],"application/vnd.mfer":["mwf"],"application/vnd.mfmp":["mfm"],"application/vnd.micrografx.flo":["flo"],"application/vnd.micrografx.igx":["igx"],"application/vnd.mif":["mif"],"application/vnd.mobius.daf":["daf"],"application/vnd.mobius.dis":["dis"],"application/vnd.mobius.mbk":["mbk"],"application/vnd.mobius.mqy":["mqy"],"application/vnd.mobius.msl":["msl"],"application/vnd.mobius.plc":["plc"],"application/vnd.mobius.txf":["txf"],"application/vnd.mophun.application":["mpn"],"application/vnd.mophun.certificate":["mpc"],"application/vnd.mozilla.xul+xml":["xul"],"application/vnd.ms-artgalry":["cil"],"application/vnd.ms-cab-compressed":["cab"],"application/vnd.ms-excel":["xls","xlm","xla","xlc","xlt","xlw"],"application/vnd.ms-excel.addin.macroenabled.12":["xlam"],"application/vnd.ms-excel.sheet.binary.macroenabled.12":["xlsb"],"application/vnd.ms-excel.sheet.macroenabled.12":["xlsm"],"application/vnd.ms-excel.template.macroenabled.12":["xltm"],"application/vnd.ms-fontobject":["eot"],"application/vnd.ms-htmlhelp":["chm"],"application/vnd.ms-ims":["ims"],"application/vnd.ms-lrm":["lrm"],"application/vnd.ms-officetheme":["thmx"],"application/vnd.ms-pki.seccat":["cat"],"application/vnd.ms-pki.stl":["stl"],"application/vnd.ms-powerpoint":["ppt","pps","pot"],"application/vnd.ms-powerpoint.addin.macroenabled.12":["ppam"],"application/vnd.ms-powerpoint.presentation.macroenabled.12":["pptm"],"application/vnd.ms-powerpoint.slide.macroenabled.12":["sldm"],"application/vnd.ms-powerpoint.slideshow.macroenabled.12":["ppsm"],"application/vnd.ms-powerpoint.template.macroenabled.12":["potm"],"application/vnd.ms-project":["mpp","mpt"],"application/vnd.ms-word.document.macroenabled.12":["docm"],"application/vnd.ms-word.template.macroenabled.12":["dotm"],"application/vnd.ms-works":["wps","wks","wcm","wdb"],"application/vnd.ms-wpl":["wpl"],"application/vnd.ms-xpsdocument":["xps"],"application/vnd.mseq":["mseq"],"application/vnd.musician":["mus"],"application/vnd.muvee.style":["msty"],"application/vnd.mynfc":["taglet"],"application/vnd.neurolanguage.nlu":["nlu"],"application/vnd.nitf":["ntf","nitf"],"application/vnd.noblenet-directory":["nnd"],"application/vnd.noblenet-sealer":["nns"],"application/vnd.noblenet-web":["nnw"],"application/vnd.nokia.n-gage.data":["ngdat"],"application/vnd.nokia.radio-preset":["rpst"],"application/vnd.nokia.radio-presets":["rpss"],"application/vnd.novadigm.edm":["edm"],"application/vnd.novadigm.edx":["edx"],"application/vnd.novadigm.ext":["ext"],"application/vnd.oasis.opendocument.chart":["odc"],"application/vnd.oasis.opendocument.chart-template":["otc"],"application/vnd.oasis.opendocument.database":["odb"],"application/vnd.oasis.opendocument.formula":["odf"],"application/vnd.oasis.opendocument.formula-template":["odft"],"application/vnd.oasis.opendocument.graphics":["odg"],"application/vnd.oasis.opendocument.graphics-template":["otg"],"application/vnd.oasis.opendocument.image":["odi"],"application/vnd.oasis.opendocument.image-template":["oti"],"application/vnd.oasis.opendocument.presentation":["odp"],"application/vnd.oasis.opendocument.presentation-template":["otp"],"application/vnd.oasis.opendocument.spreadsheet":["ods"],"application/vnd.oasis.opendocument.spreadsheet-template":["ots"],"application/vnd.oasis.opendocument.text":["odt"],"application/vnd.oasis.opendocument.text-master":["odm"],"application/vnd.oasis.opendocument.text-template":["ott"],"application/vnd.oasis.opendocument.text-web":["oth"],"application/vnd.olpc-sugar":["xo"],"application/vnd.oma.dd2+xml":["dd2"],"application/vnd.openofficeorg.extension":["oxt"],"application/vnd.openxmlformats-officedocument.presentationml.presentation":["pptx"],"application/vnd.openxmlformats-officedocument.presentationml.slide":["sldx"],"application/vnd.openxmlformats-officedocument.presentationml.slideshow":["ppsx"],"application/vnd.openxmlformats-officedocument.presentationml.template":["potx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":["xlsx"],"application/vnd.openxmlformats-officedocument.spreadsheetml.template":["xltx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.document":["docx"],"application/vnd.openxmlformats-officedocument.wordprocessingml.template":["dotx"],"application/vnd.osgeo.mapguide.package":["mgp"],"application/vnd.osgi.dp":["dp"],"application/vnd.osgi.subsystem":["esa"],"application/vnd.palm":["pdb","pqa","oprc"],"application/vnd.pawaafile":["paw"],"application/vnd.pg.format":["str"],"application/vnd.pg.osasli":["ei6"],"application/vnd.picsel":["efif"],"application/vnd.pmi.widget":["wg"],"application/vnd.pocketlearn":["plf"],"application/vnd.powerbuilder6":["pbd"],"application/vnd.previewsystems.box":["box"],"application/vnd.proteus.magazine":["mgz"],"application/vnd.publishare-delta-tree":["qps"],"application/vnd.pvi.ptid1":["ptid"],"application/vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"application/vnd.realvnc.bed":["bed"],"application/vnd.recordare.musicxml":["mxl"],"application/vnd.recordare.musicxml+xml":["musicxml"],"application/vnd.rig.cryptonote":["cryptonote"],"application/vnd.rim.cod":["cod"],"application/vnd.rn-realmedia":["rm"],"application/vnd.rn-realmedia-vbr":["rmvb"],"application/vnd.route66.link66+xml":["link66"],"application/vnd.sailingtracker.track":["st"],"application/vnd.seemail":["see"],"application/vnd.sema":["sema"],"application/vnd.semd":["semd"],"application/vnd.semf":["semf"],"application/vnd.shana.informed.formdata":["ifm"],"application/vnd.shana.informed.formtemplate":["itp"],"application/vnd.shana.informed.interchange":["iif"],"application/vnd.shana.informed.package":["ipk"],"application/vnd.simtech-mindmapper":["twd","twds"],"application/vnd.smaf":["mmf"],"application/vnd.smart.teacher":["teacher"],"application/vnd.solent.sdkm+xml":["sdkm","sdkd"],"application/vnd.spotfire.dxp":["dxp"],"application/vnd.spotfire.sfs":["sfs"],"application/vnd.stardivision.calc":["sdc"],"application/vnd.stardivision.draw":["sda"],"application/vnd.stardivision.impress":["sdd"],"application/vnd.stardivision.math":["smf"],"application/vnd.stardivision.writer":["sdw","vor"],"application/vnd.stardivision.writer-global":["sgl"],"application/vnd.stepmania.package":["smzip"],"application/vnd.stepmania.stepchart":["sm"],"application/vnd.sun.xml.calc":["sxc"],"application/vnd.sun.xml.calc.template":["stc"],"application/vnd.sun.xml.draw":["sxd"],"application/vnd.sun.xml.draw.template":["std"],"application/vnd.sun.xml.impress":["sxi"],"application/vnd.sun.xml.impress.template":["sti"],"application/vnd.sun.xml.math":["sxm"],"application/vnd.sun.xml.writer":["sxw"],"application/vnd.sun.xml.writer.global":["sxg"],"application/vnd.sun.xml.writer.template":["stw"],"application/vnd.sus-calendar":["sus","susp"],"application/vnd.svd":["svd"],"application/vnd.symbian.install":["sis","sisx"],"application/vnd.syncml+xml":["xsm"],"application/vnd.syncml.dm+wbxml":["bdm"],"application/vnd.syncml.dm+xml":["xdm"],"application/vnd.tao.intent-module-archive":["tao"],"application/vnd.tcpdump.pcap":["pcap","cap","dmp"],"application/vnd.tmobile-livetv":["tmo"],"application/vnd.trid.tpt":["tpt"],"application/vnd.triscape.mxs":["mxs"],"application/vnd.trueapp":["tra"],"application/vnd.ufdl":["ufd","ufdl"],"application/vnd.uiq.theme":["utz"],"application/vnd.umajin":["umj"],"application/vnd.unity":["unityweb"],"application/vnd.uoml+xml":["uoml"],"application/vnd.vcx":["vcx"],"application/vnd.visio":["vsd","vst","vss","vsw"],"application/vnd.visionary":["vis"],"application/vnd.vsf":["vsf"],"application/vnd.wap.wbxml":["wbxml"],"application/vnd.wap.wmlc":["wmlc"],"application/vnd.wap.wmlscriptc":["wmlsc"],"application/vnd.webturbo":["wtb"],"application/vnd.wolfram.player":["nbp"],"application/vnd.wordperfect":["wpd"],"application/vnd.wqd":["wqd"],"application/vnd.wt.stf":["stf"],"application/vnd.xara":["xar"],"application/vnd.xfdl":["xfdl"],"application/vnd.yamaha.hv-dic":["hvd"],"application/vnd.yamaha.hv-script":["hvs"],"application/vnd.yamaha.hv-voice":["hvp"],"application/vnd.yamaha.openscoreformat":["osf"],"application/vnd.yamaha.openscoreformat.osfpvg+xml":["osfpvg"],"application/vnd.yamaha.smaf-audio":["saf"],"application/vnd.yamaha.smaf-phrase":["spf"],"application/vnd.yellowriver-custom-menu":["cmp"],"application/vnd.zul":["zir","zirz"],"application/vnd.zzazz.deck+xml":["zaz"],"application/voicexml+xml":["vxml"],"application/widget":["wgt"],"application/winhlp":["hlp"],"application/wsdl+xml":["wsdl"],"application/wspolicy+xml":["wspolicy"],"application/x-7z-compressed":["7z"],"application/x-abiword":["abw"],"application/x-ace-compressed":["ace"],"application/x-apple-diskimage":["dmg"],"application/x-authorware-bin":["aab","x32","u32","vox"],"application/x-authorware-map":["aam"],"application/x-authorware-seg":["aas"],"application/x-bcpio":["bcpio"],"application/x-bittorrent":["torrent"],"application/x-blorb":["blb","blorb"],"application/x-bzip":["bz"],"application/x-bzip2":["bz2","boz"],"application/x-cbr":["cbr","cba","cbt","cbz","cb7"],"application/x-cdlink":["vcd"],"application/x-cfs-compressed":["cfs"],"application/x-chat":["chat"],"application/x-chess-pgn":["pgn"],"application/x-chrome-extension":["crx"],"application/x-conference":["nsc"],"application/x-cpio":["cpio"],"application/x-csh":["csh"],"application/x-debian-package":["deb","udeb"],"application/x-dgc-compressed":["dgc"],"application/x-director":["dir","dcr","dxr","cst","cct","cxt","w3d","fgd","swa"],"application/x-doom":["wad"],"application/x-dtbncx+xml":["ncx"],"application/x-dtbook+xml":["dtb"],"application/x-dtbresource+xml":["res"],"application/x-dvi":["dvi"],"application/x-envoy":["evy"],"application/x-eva":["eva"],"application/x-font-bdf":["bdf"],"application/x-font-ghostscript":["gsf"],"application/x-font-linux-psf":["psf"],"application/x-font-otf":["otf"],"application/x-font-pcf":["pcf"],"application/x-font-snf":["snf"],"application/x-font-ttf":["ttf","ttc"],"application/x-font-type1":["pfa","pfb","pfm","afm"],"application/x-freearc":["arc"],"application/x-futuresplash":["spl"],"application/x-gca-compressed":["gca"],"application/x-glulx":["ulx"],"application/x-gnumeric":["gnumeric"],"application/x-gramps-xml":["gramps"],"application/x-gtar":["gtar"],"application/x-hdf":["hdf"],"application/x-install-instructions":["install"],"application/x-iso9660-image":["iso"],"application/x-java-jnlp-file":["jnlp"],"application/x-latex":["latex"],"application/x-lua-bytecode":["luac"],"application/x-lzh-compressed":["lzh","lha"],"application/x-mie":["mie"],"application/x-mobipocket-ebook":["prc","mobi"],"application/x-ms-application":["application"],"application/x-ms-shortcut":["lnk"],"application/x-ms-wmd":["wmd"],"application/x-ms-wmz":["wmz"],"application/x-ms-xbap":["xbap"],"application/x-msaccess":["mdb"],"application/x-msbinder":["obd"],"application/x-mscardfile":["crd"],"application/x-msclip":["clp"],"application/x-msdownload":["exe","dll","com","bat","msi"],"application/x-msmediaview":["mvb","m13","m14"],"application/x-msmetafile":["wmf","wmz","emf","emz"],"application/x-msmoney":["mny"],"application/x-mspublisher":["pub"],"application/x-msschedule":["scd"],"application/x-msterminal":["trm"],"application/x-mswrite":["wri"],"application/x-netcdf":["nc","cdf"],"application/x-nzb":["nzb"],"application/x-pkcs12":["p12","pfx"],"application/x-pkcs7-certificates":["p7b","spc"],"application/x-pkcs7-certreqresp":["p7r"],"application/x-rar-compressed":["rar"],"application/x-research-info-systems":["ris"],"application/x-sh":["sh"],"application/x-shar":["shar"],"application/x-shockwave-flash":["swf"],"application/x-silverlight-app":["xap"],"application/x-sql":["sql"],"application/x-stuffit":["sit"],"application/x-stuffitx":["sitx"],"application/x-subrip":["srt"],"application/x-sv4cpio":["sv4cpio"],"application/x-sv4crc":["sv4crc"],"application/x-t3vm-image":["t3"],"application/x-tads":["gam"],"application/x-tar":["tar"],"application/x-tcl":["tcl"],"application/x-tex":["tex"],"application/x-tex-tfm":["tfm"],"application/x-texinfo":["texinfo","texi"],"application/x-tgif":["obj"],"application/x-ustar":["ustar"],"application/x-wais-source":["src"],"application/x-web-app-manifest+json":["webapp"],"application/x-x509-ca-cert":["der","crt"],"application/x-xfig":["fig"],"application/x-xliff+xml":["xlf"],"application/x-xpinstall":["xpi"],"application/x-xz":["xz"],"application/x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"application/xaml+xml":["xaml"],"application/xcap-diff+xml":["xdf"],"application/xenc+xml":["xenc"],"application/xhtml+xml":["xhtml","xht"],"application/xml":["xml","xsl","xsd"],"application/xml-dtd":["dtd"],"application/xop+xml":["xop"],"application/xproc+xml":["xpl"],"application/xslt+xml":["xslt"],"application/xspf+xml":["xspf"],"application/xv+xml":["mxml","xhvml","xvml","xvm"],"application/yang":["yang"],"application/yin+xml":["yin"],"application/zip":["zip"],"audio/adpcm":["adp"],"audio/basic":["au","snd"],"audio/midi":["mid","midi","kar","rmi"],"audio/mp4":["mp4a","m4a"],"audio/mpeg":["mpga","mp2","mp2a","mp3","m2a","m3a"],"audio/ogg":["oga","ogg","spx"],"audio/s3m":["s3m"],"audio/silk":["sil"],"audio/vnd.dece.audio":["uva","uvva"],"audio/vnd.digital-winds":["eol"],"audio/vnd.dra":["dra"],"audio/vnd.dts":["dts"],"audio/vnd.dts.hd":["dtshd"],"audio/vnd.lucent.voice":["lvp"],"audio/vnd.ms-playready.media.pya":["pya"],"audio/vnd.nuera.ecelp4800":["ecelp4800"],"audio/vnd.nuera.ecelp7470":["ecelp7470"],"audio/vnd.nuera.ecelp9600":["ecelp9600"],"audio/vnd.rip":["rip"],"audio/webm":["weba"],"audio/x-aac":["aac"],"audio/x-aiff":["aif","aiff","aifc"],"audio/x-caf":["caf"],"audio/x-flac":["flac"],"audio/x-matroska":["mka"],"audio/x-mpegurl":["m3u"],"audio/x-ms-wax":["wax"],"audio/x-ms-wma":["wma"],"audio/x-pn-realaudio":["ram","ra"],"audio/x-pn-realaudio-plugin":["rmp"],"audio/x-wav":["wav"],"audio/xm":["xm"],"chemical/x-cdx":["cdx"],"chemical/x-cif":["cif"],"chemical/x-cmdf":["cmdf"],"chemical/x-cml":["cml"],"chemical/x-csml":["csml"],"chemical/x-xyz":["xyz"],"font/opentype":["otf"],"image/bmp":["bmp"],"image/cgm":["cgm"],"image/g3fax":["g3"],"image/gif":["gif"],"image/ief":["ief"],"image/jpeg":["jpeg","jpg","jpe"],"image/ktx":["ktx"],"image/png":["png"],"image/prs.btif":["btif"],"image/sgi":["sgi"],"image/svg+xml":["svg","svgz"],"image/tiff":["tiff","tif"],"image/vnd.adobe.photoshop":["psd"],"image/vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"image/vnd.djvu":["djvu","djv"],"image/vnd.dvb.subtitle":["sub"],"image/vnd.dwg":["dwg"],"image/vnd.dxf":["dxf"],"image/vnd.fastbidsheet":["fbs"],"image/vnd.fpx":["fpx"],"image/vnd.fst":["fst"],"image/vnd.fujixerox.edmics-mmr":["mmr"],"image/vnd.fujixerox.edmics-rlc":["rlc"],"image/vnd.ms-modi":["mdi"],"image/vnd.ms-photo":["wdp"],"image/vnd.net-fpx":["npx"],"image/vnd.wap.wbmp":["wbmp"],"image/vnd.xiff":["xif"],"image/webp":["webp"],"image/x-3ds":["3ds"],"image/x-cmu-raster":["ras"],"image/x-cmx":["cmx"],"image/x-freehand":["fh","fhc","fh4","fh5","fh7"],"image/x-icon":["ico"],"image/x-mrsid-image":["sid"],"image/x-pcx":["pcx"],"image/x-pict":["pic","pct"],"image/x-portable-anymap":["pnm"],"image/x-portable-bitmap":["pbm"],"image/x-portable-graymap":["pgm"],"image/x-portable-pixmap":["ppm"],"image/x-rgb":["rgb"],"image/x-tga":["tga"],"image/x-xbitmap":["xbm"],"image/x-xpixmap":["xpm"],"image/x-xwindowdump":["xwd"],"message/rfc822":["eml","mime"],"model/iges":["igs","iges"],"model/mesh":["msh","mesh","silo"],"model/vnd.collada+xml":["dae"],"model/vnd.dwf":["dwf"],"model/vnd.gdl":["gdl"],"model/vnd.gtw":["gtw"],"model/vnd.mts":["mts"],"model/vnd.vtu":["vtu"],"model/vrml":["wrl","vrml"],"model/x3d+binary":["x3db","x3dbz"],"model/x3d+vrml":["x3dv","x3dvz"],"model/x3d+xml":["x3d","x3dz"],"text/cache-manifest":["appcache","manifest"],"text/calendar":["ics","ifb"],"text/coffeescript":["coffee"],"text/css":["css"],"text/csv":["csv"],"text/hjson":["hjson"],"text/html":["html","htm"],"text/jade":["jade"],"text/jsx":["jsx"],"text/less":["less"],"text/n3":["n3"],"text/plain":["txt","text","conf","def","list","log","in","ini"],"text/prs.lines.tag":["dsc"],"text/richtext":["rtx"],"text/sgml":["sgml","sgm"],"text/stylus":["stylus","styl"],"text/tab-separated-values":["tsv"],"text/troff":["t","tr","roff","man","me","ms"],"text/turtle":["ttl"],"text/uri-list":["uri","uris","urls"],"text/vcard":["vcard"],"text/vnd.curl":["curl"],"text/vnd.curl.dcurl":["dcurl"],"text/vnd.curl.mcurl":["mcurl"],"text/vnd.curl.scurl":["scurl"],"text/vnd.dvb.subtitle":["sub"],"text/vnd.fly":["fly"],"text/vnd.fmi.flexstor":["flx"],"text/vnd.graphviz":["gv"],"text/vnd.in3d.3dml":["3dml"],"text/vnd.in3d.spot":["spot"],"text/vnd.sun.j2me.app-descriptor":["jad"],"text/vnd.wap.wml":["wml"],"text/vnd.wap.wmlscript":["wmls"],"text/vtt":["vtt"],"text/x-asm":["s","asm"],"text/x-c":["c","cc","cxx","cpp","h","hh","dic"],"text/x-component":["htc"],"text/x-fortran":["f","for","f77","f90"],"text/x-handlebars-template":["hbs"],"text/x-java-source":["java"],"text/x-lua":["lua"],"text/x-markdown":["markdown","md","mkd"],"text/x-nfo":["nfo"],"text/x-opml":["opml"],"text/x-pascal":["p","pas"],"text/x-sass":["sass"],"text/x-scss":["scss"],"text/x-setext":["etx"],"text/x-sfv":["sfv"],"text/x-uuencode":["uu"],"text/x-vcalendar":["vcs"],"text/x-vcard":["vcf"],"text/yaml":["yaml","yml"],"video/3gpp":["3gp"],"video/3gpp2":["3g2"],"video/h261":["h261"],"video/h263":["h263"],"video/h264":["h264"],"video/jpeg":["jpgv"],"video/jpm":["jpm","jpgm"],"video/mj2":["mj2","mjp2"],"video/mp2t":["ts"],"video/mp4":["mp4","mp4v","mpg4"],"video/mpeg":["mpeg","mpg","mpe","m1v","m2v"],"video/ogg":["ogv"],"video/quicktime":["qt","mov"],"video/vnd.dece.hd":["uvh","uvvh"],"video/vnd.dece.mobile":["uvm","uvvm"],"video/vnd.dece.pd":["uvp","uvvp"],"video/vnd.dece.sd":["uvs","uvvs"],"video/vnd.dece.video":["uvv","uvvv"],"video/vnd.dvb.file":["dvb"],"video/vnd.fvt":["fvt"],"video/vnd.mpegurl":["mxu","m4u"],"video/vnd.ms-playready.media.pyv":["pyv"],"video/vnd.uvvu.mp4":["uvu","uvvu"],"video/vnd.vivo":["viv"],"video/webm":["webm"],"video/x-f4v":["f4v"],"video/x-fli":["fli"],"video/x-flv":["flv"],"video/x-m4v":["m4v"],"video/x-matroska":["mkv","mk3d","mks"],"video/x-mng":["mng"],"video/x-ms-asf":["asf","asx"],"video/x-ms-vob":["vob"],"video/x-ms-wm":["wm"],"video/x-ms-wmv":["wmv"],"video/x-ms-wmx":["wmx"],"video/x-ms-wvx":["wvx"],"video/x-msvideo":["avi"],"video/x-sgi-movie":["movie"],"video/x-smv":["smv"],"x-conference/x-cooltalk":["ice"]}},function(e,a,n){n(0);var i=n(3);function o(){this.types=Object.create(null),this.extensions=Object.create(null)}o.prototype.define=function(e){for(var a in e){for(var n=e[a],i=0;i<n.length;i++)process.env.DEBUG_MIME&&this.types[n]&&console.warn(this._loading.replace(/.*\//,""),'changes "'+n[i]+'" extension type from '+this.types[n]+" to "+a),this.types[n[i]]=a;this.extensions[a]||(this.extensions[a]=n[0])}},o.prototype.load=function(e){this._loading=e;var a={};i.readFileSync(e,"ascii").split(/[\r\n]+/).forEach(function(e){var n=e.replace(/\s*#.*|^\s*|\s*$/g,"").split(/\s+/);a[n.shift()]=n}),this.define(a),this._loading=null},o.prototype.lookup=function(e,a){var n=e.replace(/.*[\.\/\\]/,"").toLowerCase();return this.types[n]||a||this.default_type},o.prototype.extension=function(e){var a=e.match(/^\s*([^;\s]*)(?:;|\s|$)/)[1].toLowerCase();return this.extensions[a]};var t=new o;t.define(n(66)),t.default_type=t.lookup("bin"),t.Mime=o,t.charsets={lookup:function(e,a){return/^text\//.test(e)?"UTF-8":a}},e.exports=t},function(e,a,n){"use strict";
/*!
 * destroy
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */var i=n(3).ReadStream,o=n(28);function t(){"number"==typeof this.fd&&this.close()}e.exports=function(e){if(e instanceof i)return function(e){e.destroy(),"function"==typeof e.close&&e.on("open",t);return e}(e);if(!(e instanceof o))return e;"function"==typeof e.destroy&&e.destroy();return e}},function(e,a){"function"==typeof Object.create?e.exports=function(e,a){e.super_=a,e.prototype=Object.create(a.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,a){e.super_=a;var n=function(){};n.prototype=a.prototype,e.prototype=new n,e.prototype.constructor=e}},function(e,a,n){try{var i=n(15);if("function"!=typeof i.inherits)throw"";e.exports=i.inherits}catch(a){e.exports=n(69)}},function(e,a,n){"use strict";
/*!
 * depd
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a){return e.listeners(a).length}},function(e,a,n){"use strict";
/*!
 * depd
 * Copyright(c) 2014 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){var a=!0,n=function(e){var a,n="";e.isNative()?n="native":e.isEval()?(a=e.getScriptNameOrSourceURL())||(n=e.getEvalOrigin()):a=e.getFileName();if(a){n+=a;var i=e.getLineNumber();if(null!=i){n+=":"+i;var o=e.getColumnNumber();o&&(n+=":"+o)}}return n||"unknown source"}(e),i=e.getFunctionName(),o=e.isConstructor(),t="";if(e.isToplevel()||o)o?t+="new "+(i||"<anonymous>"):i?t+=i:(a=!1,t+=n);else{var s=e.getMethodName(),r=(c=e.receiver).constructor&&c.constructor.name||null;i?(r&&0!==i.indexOf(r)&&(t+=r+"."),t+=i,s&&i.lastIndexOf("."+s)!==i.length-s.length-1&&(t+=" [as "+s+"]")):t+=r+"."+(s||"<anonymous>")}var c;a&&(t+=" ("+n+")");return t}},function(e,a,n){"use strict";
/*!
 * http-errors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2016 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(30)("http-errors"),o=n(11),t=n(5),s=n(70);function r(e){return Number(String(e).charAt(0)+"00")}e.exports=function e(){var a;var n;var o=500;var s={};for(var c=0;c<arguments.length;c++){var p=arguments[c];if(p instanceof Error)o=(a=p).status||a.statusCode||o;else switch(typeof p){case"string":n=p;break;case"number":o=p,0!==c&&i("non-first-argument status code; replace with createError("+p+", ...)");break;case"object":s=p}}"number"==typeof o&&(o<400||o>=600)&&i("non-error status code; use only 4xx or 5xx status codes");("number"!=typeof o||!t[o]&&(o<400||o>=600))&&(o=500);var l=e[o]||e[r(o)];a||(a=l?new l(n):new Error(n||t[o]),Error.captureStackTrace(a,e));l&&a instanceof l&&a.status===o||(a.expose=o<500,a.status=a.statusCode=o);for(var u in s)"status"!==u&&"statusCode"!==u&&(a[u]=s[u]);return a},e.exports.HttpError=function(){function e(){throw new TypeError("cannot construct abstract class")}return s(e,Error),e}(),function(e,a,n){a.forEach(function(a){var i,c=t[a].split(" ").map(function(e){return e.slice(0,1).toUpperCase()+e.slice(1)}).join("").replace(/[^ _0-9a-z]/gi,"");switch(r(a)){case 400:i=function(e,a,n){var i=a.match(/Error$/)?a:a+"Error";function r(e){var a=null!=e?e:t[n],s=new Error(a);return Error.captureStackTrace(s,r),o(s,r.prototype),Object.defineProperty(s,"message",{enumerable:!0,configurable:!0,value:a,writable:!0}),Object.defineProperty(s,"name",{enumerable:!1,configurable:!0,value:i,writable:!0}),s}return s(r,e),r.prototype.status=n,r.prototype.statusCode=n,r.prototype.expose=!0,r}(n,c,a);break;case 500:i=function(e,a,n){var i=a.match(/Error$/)?a:a+"Error";function r(e){var a=null!=e?e:t[n],s=new Error(a);return Error.captureStackTrace(s,r),o(s,r.prototype),Object.defineProperty(s,"message",{enumerable:!0,configurable:!0,value:a,writable:!0}),Object.defineProperty(s,"name",{enumerable:!1,configurable:!0,value:i,writable:!0}),s}return s(r,e),r.prototype.status=n,r.prototype.statusCode=n,r.prototype.expose=!1,r}(n,c,a)}i&&(e[a]=i,e[c]=i)}),e["I'mateapot"]=i.function(e.ImATeapot,'"I\'mateapot"; use "ImATeapot" instead')}(e.exports,t.codes,e.exports.HttpError)},function(e,a){function n(e){var a=new Error('Cannot find module "'+e+'".');throw a.code="MODULE_NOT_FOUND",a}n.keys=function(){return[]},n.resolve=n,e.exports=n,n.id=74},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("express:view"),o=n(0),t=n(3),s=o.dirname,r=o.basename,c=o.extname,p=o.join,l=o.resolve;function u(e,a){var o=a||{};if(this.defaultEngine=o.defaultEngine,this.ext=c(e),this.name=e,this.root=o.root,!this.ext&&!this.defaultEngine)throw new Error("No default engine was specified and no extension was provided.");var t=e;if(this.ext||(this.ext="."!==this.defaultEngine[0]?"."+this.defaultEngine:this.defaultEngine,t+=this.ext),!o.engines[this.ext]){var s=this.ext.substr(1);i('require "%s"',s),o.engines[this.ext]=n(74)(s).__express}this.engine=o.engines[this.ext],this.path=this.lookup(t)}function d(e){i('stat "%s"',e);try{return t.statSync(e)}catch(e){return}}e.exports=u,u.prototype.lookup=function(e){var a,n=[].concat(this.root);i('lookup "%s"',e);for(var o=0;o<n.length&&!a;o++){var t=n[o],c=l(t,e),p=s(c),u=r(c);a=this.resolve(p,u)}return a},u.prototype.render=function(e,a){var n=!0;i('render "%s"',this.path),this.engine(this.path,e,function(){if(!n)return a.apply(this,arguments);for(var e=new Array(arguments.length),i=this,o=0;o<arguments.length;o++)e[o]=arguments[o];return process.nextTick(function(){return a.apply(i,e)})}),n=!1},u.prototype.resolve=function(e,a){var n=this.ext,i=p(e,a),o=d(i);return o&&o.isFile()?i:(o=d(i=p(e,r(a,n),"index"+n)))&&o.isFile()?i:void 0}},function(e,a,n){"use strict";
/*!
 * unpipe
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e){if(!e)throw new TypeError("argument stream is required");if("function"==typeof e.unpipe)return void e.unpipe();if(!function(e){for(var a=e.listeners("data"),n=0;n<a.length;n++)if("ondata"===a[n].name)return!0;return!1}(e))return;for(var a,n=e.listeners("close"),i=0;i<n.length;i++)"cleanup"!==(a=n[i]).name&&"onclose"!==a.name||a.call(e)}},function(e){e.exports={100:"Continue",101:"Switching Protocols",102:"Processing",200:"OK",201:"Created",202:"Accepted",203:"Non-Authoritative Information",204:"No Content",205:"Reset Content",206:"Partial Content",207:"Multi-Status",208:"Already Reported",226:"IM Used",300:"Multiple Choices",301:"Moved Permanently",302:"Found",303:"See Other",304:"Not Modified",305:"Use Proxy",306:"(Unused)",307:"Temporary Redirect",308:"Permanent Redirect",400:"Bad Request",401:"Unauthorized",402:"Payment Required",403:"Forbidden",404:"Not Found",405:"Method Not Allowed",406:"Not Acceptable",407:"Proxy Authentication Required",408:"Request Timeout",409:"Conflict",410:"Gone",411:"Length Required",412:"Precondition Failed",413:"Payload Too Large",414:"URI Too Long",415:"Unsupported Media Type",416:"Range Not Satisfiable",417:"Expectation Failed",418:"I'm a teapot",421:"Misdirected Request",422:"Unprocessable Entity",423:"Locked",424:"Failed Dependency",425:"Unordered Collection",426:"Upgrade Required",428:"Precondition Required",429:"Too Many Requests",431:"Request Header Fields Too Large",451:"Unavailable For Legal Reasons",500:"Internal Server Error",501:"Not Implemented",502:"Bad Gateway",503:"Service Unavailable",504:"Gateway Timeout",505:"HTTP Version Not Supported",506:"Variant Also Negotiates",507:"Insufficient Storage",508:"Loop Detected",509:"Bandwidth Limit Exceeded",510:"Not Extended",511:"Network Authentication Required"}},function(e,a,n){"use strict";
/*!
 * ee-first
 * Copyright(c) 2014 Jonathan Ong
 * MIT Licensed
 */function i(e,a){return function(n){for(var i=new Array(arguments.length),o="error"===e?n:null,t=0;t<i.length;t++)i[t]=arguments[t];a(o,this,e,i)}}e.exports=function(e,a){if(!Array.isArray(e))throw new TypeError("arg must be an array of [ee, events...] arrays");for(var n=[],o=0;o<e.length;o++){var t=e[o];if(!Array.isArray(t)||t.length<2)throw new TypeError("each array member must be [ee, events...]");for(var s=t[0],r=1;r<t.length;r++){var c=t[r],p=i(c,l);s.on(c,p),n.push({ee:s,event:c,fn:p})}}function l(){u(),a.apply(null,arguments)}function u(){for(var e,a=0;a<n.length;a++)(e=n[a]).ee.removeListener(e.event,e.fn)}function d(e){a=e}return d.cancel=u,d}},function(e,a){e.exports=require("tty")},function(e,a,n){var i=n(79),o=n(15);(a=e.exports=n(34)).init=function(e){e.inspectOpts={};for(var n=Object.keys(a.inspectOpts),i=0;i<n.length;i++)e.inspectOpts[n[i]]=a.inspectOpts[n[i]]},a.log=function(){return s.write(o.format.apply(o,arguments)+"\n")},a.formatArgs=function(e){var n=this.namespace;if(this.useColors){var i=this.color,o="  [3"+i+";1m"+n+" [0m";e[0]=o+e[0].split("\n").join("\n"+o),e.push("[3"+i+"m+"+a.humanize(this.diff)+"[0m")}else e[0]=(new Date).toUTCString()+" "+n+" "+e[0]},a.save=function(e){null==e?delete process.env.DEBUG:process.env.DEBUG=e},a.load=r,a.useColors=function(){return"colors"in a.inspectOpts?Boolean(a.inspectOpts.colors):i.isatty(t)},a.colors=[6,2,3,4,5,1],a.inspectOpts=Object.keys(process.env).filter(function(e){return/^debug_/i.test(e)}).reduce(function(e,a){var n=a.substring(6).toLowerCase().replace(/_([a-z])/g,function(e,a){return a.toUpperCase()}),i=process.env[a];return i=!!/^(yes|on|true|enabled)$/i.test(i)||!/^(no|off|false|disabled)$/i.test(i)&&("null"===i?null:Number(i)),e[n]=i,e},{});var t=parseInt(process.env.DEBUG_FD,10)||2;1!==t&&2!==t&&o.deprecate(function(){},"except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)")();var s=1===t?process.stdout:2===t?process.stderr:function(e){var a;switch(process.binding("tty_wrap").guessHandleType(e)){case"TTY":(a=new i.WriteStream(e))._type="tty",a._handle&&a._handle.unref&&a._handle.unref();break;case"FILE":var o=n(3);(a=new o.SyncWriteStream(e,{autoClose:!1}))._type="fs";break;case"PIPE":case"TCP":var t=n(32);(a=new t.Socket({fd:e,readable:!1,writable:!0})).readable=!1,a.read=null,a._type="pipe",a._handle&&a._handle.unref&&a._handle.unref();break;default:throw new Error("Implement me. Unknown stream file type!")}return a.fd=e,a._isStdio=!0,a}(t);function r(){return process.env.DEBUG}a.formatters.o=function(e){return this.inspectOpts.colors=this.useColors,o.inspect(e,this.inspectOpts).split("\n").map(function(e){return e.trim()}).join(" ")},a.formatters.O=function(e){return this.inspectOpts.colors=this.useColors,o.inspect(e,this.inspectOpts)},a.enable(r())},function(e,a,n){function i(){var e;try{e=a.storage.debug}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e}(a=e.exports=n(34)).log=function(){return"object"==typeof console&&console.log&&Function.prototype.apply.call(console.log,console,arguments)},a.formatArgs=function(e){var n=this.useColors;if(e[0]=(n?"%c":"")+this.namespace+(n?" %c":" ")+e[0]+(n?"%c ":" ")+"+"+a.humanize(this.diff),!n)return;var i="color: "+this.color;e.splice(1,0,i,"color: inherit");var o=0,t=0;e[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&"%c"===e&&(t=++o)}),e.splice(t,0,i)},a.save=function(e){try{null==e?a.storage.removeItem("debug"):a.storage.debug=e}catch(e){}},a.load=i,a.useColors=function(){if("undefined"!=typeof window&&window.process&&"renderer"===window.process.type)return!0;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},a.storage="undefined"!=typeof chrome&&void 0!==chrome.storage?chrome.storage.local:function(){try{return window.localStorage}catch(e){}}(),a.colors=["lightseagreen","forestgreen","goldenrod","dodgerblue","darkorchid","crimson"],a.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}},a.enable(i())},function(e,a,n){"use strict";
/*!
 * finalhandler
 * Copyright(c) 2014-2017 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(1)("finalhandler"),o=n(8),t=n(7),s=n(14),r=n(6),c=n(5),p=n(76),l=/\x20{2}/g,u=/\n/g,d="function"==typeof setImmediate?setImmediate:function(e){process.nextTick(e.bind.apply(e,arguments))},m=s.isFinished;e.exports=function(e,a,n){var f=n||{},v=f.env||"production",x=f.onerror;return function(n){var f,h,g;if(n||!a._header){if(n?(void 0!==(g=function(e){if("number"==typeof e.status&&e.status>=400&&e.status<600)return e.status;if("number"==typeof e.statusCode&&e.statusCode>=400&&e.statusCode<600)return e.statusCode;return}(n))&&(f=function(e){if(!e.headers||"object"!=typeof e.headers)return;for(var a=Object.create(null),n=Object.keys(e.headers),i=0;i<n.length;i++){var o=n[i];a[o]=e.headers[o]}return a}(n)),void 0===g&&(g=function(e){var a=e.statusCode;("number"!=typeof a||a<400||a>599)&&(a=500);return a}(a)),h=function(e,a,n){var i;"production"!==n&&((i=e.stack)||"function"!=typeof e.toString||(i=e.toString()));return i||c[a]}(n,g,v)):(g=404,h="Cannot "+e.method+" "+o(r.original(e).pathname)),i("default %s",g),n&&x&&d(x,n,e,a),a._header)return i("cannot %d after headers sent",g),void e.socket.destroy();!function(e,a,n,i,o){function r(){var s=function(e){return'<!DOCTYPE html>\n<html lang="en">\n<head>\n<meta charset="utf-8">\n<title>Error</title>\n</head>\n<body>\n<pre>'+t(e).replace(u,"<br>").replace(l," &nbsp;")+"</pre>\n</body>\n</html>\n"}(o);a.statusCode=n,a.statusMessage=c[n],function(e,a){if(!a)return;for(var n=Object.keys(a),i=0;i<n.length;i++){var o=n[i];e.setHeader(o,a[o])}}(a,i),a.setHeader("Content-Security-Policy","default-src 'self'"),a.setHeader("X-Content-Type-Options","nosniff"),a.setHeader("Content-Type","text/html; charset=utf-8"),a.setHeader("Content-Length",Buffer.byteLength(s,"utf8")),"HEAD"!==e.method?a.end(s,"utf8"):a.end()}if(m(e))return void r();p(e),s(e,r),e.resume()}(e,a,g,f,h)}else i("cannot 404 after headers sent")}}},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(82),o=n(13),t=n(1)("express:application"),s=n(75),r=n(4),c=n(2).compileETag,p=n(2).compileQueryParser,l=n(2).compileTrust,u=n(10),d=n(9),m=n(0).resolve,f=n(20),v=n(11),x=Array.prototype.slice,h=e.exports={};h.init=function(){var e=null;this.cache={},this.engines={},this.settings={},this.defaultConfiguration(),Object.defineProperty(this,"router",{configurable:!0,enumerable:!0,get:function(){return null===e&&(e=new f({caseSensitive:this.enabled("case sensitive routing"),strict:this.enabled("strict routing")})),e}})},h.defaultConfiguration=function(){var e="production";this.enable("x-powered-by"),this.set("etag","weak"),this.set("env",e),this.set("query parser","extended"),this.set("subdomain offset",2),this.set("trust proxy",!1),Object.defineProperty(this.settings,"@@symbol:trust_proxy_default",{configurable:!0,value:!0}),t("booting in %s mode",e),this.on("mount",function(e){!0===this.settings["@@symbol:trust_proxy_default"]&&"function"==typeof e.settings["trust proxy fn"]&&(delete this.settings["trust proxy"],delete this.settings["trust proxy fn"]),v(this.request,e.request),v(this.response,e.response),v(this.engines,e.engines),v(this.settings,e.settings)}),this.locals=Object.create(null),this.mountpath="/",this.locals.settings=this.settings,this.set("view",s),this.set("views",m("views")),this.set("jsonp callback name","callback"),this.enable("view cache")},h.handle=function(e,a,n){var o=n||i(e,a,{env:this.get("env"),onerror:function(e){"test"!==this.get("env")&&console.error(e.stack||e.toString())}.bind(this)});this.enabled("x-powered-by")&&a.setHeader("X-Powered-By","Express"),e.res=a,a.req=e,v(e,this.request),v(a,this.response),a.locals||(a.locals=Object.create(null)),this.router.handle(e,a,o)},h.use=function(e){var a=0,n="/";if("function"!=typeof e){for(var i=e;Array.isArray(i)&&0!==i.length;)i=i[0];"function"!=typeof i&&(a=1,n=e)}var o=u(x.call(arguments,a));if(0===o.length)throw new TypeError("app.use() requires middleware functions");var s=this.router;return o.forEach(function(e){if(!e||!e.handle||!e.set)return s.use(n,e);t(".use app under %s",n),e.mountpath=n,e.parent=this,s.use(n,function(a,n,i){var o=a.app;e.handle(a,n,function(e){v(a,o.request),v(n,o.response),i(e)})}),e.emit("mount",this)},this),this},h.route=function(e){return this.router.route(e)},h.engine=function(e,a){if("function"!=typeof a)throw new Error("callback function required");var n="."!==e[0]?"."+e:e;return this.engines[n]=a,this},h.param=function(e,a){if(Array.isArray(e)){for(var n=0;n<e.length;n++)this.param(e[n],a);return this}return this.router.param(e,a),this},h.set=function(e,a){if(1===arguments.length)return this.settings[e];switch(t('set "%s" to %o',e,a),this.settings[e]=a,e){case"etag":this.set("etag fn",c(a));break;case"query parser":this.set("query parser fn",p(a));break;case"trust proxy":this.set("trust proxy fn",l(a)),Object.defineProperty(this.settings,"@@symbol:trust_proxy_default",{configurable:!0,value:!1})}return this},h.path=function(){return this.parent?this.parent.path()+this.mountpath:""},h.enabled=function(e){return Boolean(this.set(e))},h.disabled=function(e){return!this.set(e)},h.enable=function(e){return this.set(e,!0)},h.disable=function(e){return this.set(e,!1)},o.forEach(function(e){h[e]=function(a){if("get"===e&&1===arguments.length)return this.set(a);var n=this.route(a);return n[e].apply(n,x.call(arguments,1)),this}}),h.all=function(e){for(var a=this.route(e),n=x.call(arguments,1),i=0;i<o.length;i++)a[o[i]].apply(a,n);return this},h.render=function(e,a,n){var i,o=this.cache,t=n,s=this.engines,r=a,c={};if("function"==typeof a&&(t=a,r={}),d(c,this.locals),r._locals&&d(c,r._locals),d(c,r),null==c.cache&&(c.cache=this.enabled("view cache")),c.cache&&(i=o[e]),!i){if(!(i=new(this.get("view"))(e,{defaultEngine:this.get("view engine"),root:this.get("views"),engines:s})).path){var p=Array.isArray(i.root)&&i.root.length>1?'directories "'+i.root.slice(0,-1).join('", "')+'" or "'+i.root[i.root.length-1]+'"':'directory "'+i.root+'"',l=new Error('Failed to lookup view "'+e+'" in views '+p);return l.view=i,t(l)}c.cache&&(o[e]=i)}!function(e,a,n){try{e.render(a,n)}catch(e){n(e)}}(i,c,t)},h.listen=function(){var e=r.createServer(this);return e.listen.apply(e,arguments)}},function(e,a,n){"use strict";
/*!
 * merge-descriptors
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */e.exports=function(e,a,n){if(!e)throw new TypeError("argument dest is required");if(!a)throw new TypeError("argument src is required");void 0===n&&(n=!0);return Object.getOwnPropertyNames(a).forEach(function(o){if(n||!i.call(e,o)){var t=Object.getOwnPropertyDescriptor(a,o);Object.defineProperty(e,o,t)}}),e};var i=Object.prototype.hasOwnProperty},function(e,a,n){"use strict";
/*!
 * express
 * Copyright(c) 2009-2013 TJ Holowaychuk
 * Copyright(c) 2013 Roman Shtylman
 * Copyright(c) 2014-2015 Douglas Christopher Wilson
 * MIT Licensed
 */var i=n(16).EventEmitter,o=n(84),t=n(83),s=n(20),r=n(55),c=n(44);(a=e.exports=function(){var e=function(a,n,i){e.handle(a,n,i)};return o(e,i.prototype,!1),o(e,t,!1),e.request=Object.create(r,{app:{configurable:!0,enumerable:!0,writable:!0,value:e}}),e.response=Object.create(c,{app:{configurable:!0,enumerable:!0,writable:!0,value:e}}),e.init(),e}).application=t,a.request=r,a.response=c,a.Route=s.Route,a.Router=s,a.static=n(38)},function(e,a,n){"use strict";var i=n(35),o=i(n(17)),t=(i(n(37)),i(n(0)),(0,o.default)());t.get("/",function(e,a){a.send("test qq")}),t.listen(3e3,function(e){e?console.log(e):console.log("App listening on port ".concat(3e3))})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,